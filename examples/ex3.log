#########################################################
---------------------------------------------------------
---------------------------------------------------------
TG for line #1 SA-1. Fault #1
[Msg0] Initialzed all line values to X and isVisited = false
[Msg1] Updated line : and2_w2 from linelist to [Line:and2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
[Msg2] Updating the maps 
[Msg] Printing PI patterns 
     input_in3 X
     input_in2 X
     input_in1 X
[Msg3] Current linelist status before Justify()
        [Line:and2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_out4 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out3 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not2_out2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_w2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not1_w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not1_out1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:and1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_w1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:input_in3 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:input_in2 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:input_in1 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:output_out4 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out3 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out2 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO]

[Msg4] Generating test patterns for line : [Line:and2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
[Msg5] Justifying line : [Line:and2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 0
Here 1
[Msg6] Equalizing fanin/fanout values line : [Line:or1_w2 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg7] inval = 0] Justifying all input lines for the line : [Line:or1_w2 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg8] Following lines need to be justified. (Total 2 lines)
        [Line:or1_w2] -->  [Line:or1_in2] [Line:or1_in1]
[Msg9] Justifying line : [Line:or1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 0
Here 2
[Msg10] Equalizing fanin/fanout values line : [Line:input_in2 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg11] Updating linelist with line : [Line:input_in2 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg12] Updating the maps 
[Msg13] Concluding. Reached PI line : [Line:input_in2 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg14] Updating linelist with line : [Line:or1_w2 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg15] Updating the maps 
[Msg16] Justifying line : [Line:or1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 0
Here 3
[Msg17] Equalizing fanin/fanout values line : [Line:input_in1 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg18] Updating linelist with line : [Line:input_in1 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg19] Updating the maps 
[Msg20] Concluding. Reached PI line : [Line:input_in1 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg21] Updating linelist with line : [Line:or1_w2 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg22] Updating the maps 
[Msg23] All lines justified 
[Msg24] Updating linelist with line : [Line:or1_w2 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg25] Updating the maps 
[Msg26] Current linelist status before Propagate() and after Justify()
        [Line:and2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_out4 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out3 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not2_out2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_w2 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:not1_w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not1_out1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:and1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_w1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:input_in3 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:input_in2 Val:0 Dir:OUT Visited: 1 Type:PI]
        [Line:input_in1 Val:0 Dir:OUT Visited: 1 Type:PI]
        [Line:output_out4 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out3 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out2 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO]

[Msg27] Propagating D for the line : and2_w2
[Msg28] Updating linelist with line : [Line:and2_w2 Val:D Dir:IN Visited: 0 Type:INT_WIRE]
[Msg29] Updating the maps 
[Msg30] Updated linelist at this stage. - About to start  Propagate()
        [and2_w2 D IN V=0] 
        [and2_in3 X IN V=0] 
        [and2_out4 X OUT V=0] 
        [or2_in3 X IN V=0] 
        [or2_out2 X IN V=0] 
        [or2_out3 X OUT V=0] 
        [not2_w2 X IN V=0] 
        [not2_out2 X OUT V=0] 
        [or1_in2 X IN V=0] 
        [or1_in1 X IN V=0] 
        [or1_w2 0 OUT V=1] 
        [not1_w1 X IN V=0] 
        [not1_out1 X OUT V=0] 
        [and1_in2 X IN V=0] 
        [and1_in1 X IN V=0] 
        [and1_w1 X OUT V=0] 
        [input_in3 X OUT V=0] 
        [input_in2 0 OUT V=1] 
        [input_in1 0 OUT V=1] 
        [output_out4 X IN V=0] 
        [output_out3 X IN V=0] 
        [output_out2 X IN V=0] 
        [output_out1 X IN V=0] 
[Msg31][Line:and2_w2 Val:D Dir:IN Visited: 0 Type:INT_WIRE] is an input line to the component
[Msg32] Corresponding output line : and2_out4
[Msg33] Checking and2_w2 to be justified or not
[Msg34] Checking and2_in3 to be justified or not
[Msg35] Justify and2_in3 inside Propagate. line.direction == IN The line : [Line:and2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
[Msg36] Justifying line : [Line:and2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 1
Here 4
[Msg37] Equalizing fanin/fanout values line : [Line:input_in3 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg38] Updating linelist with line : [Line:input_in3 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg39] Updating the maps 
[Msg40] Concluding. Reached PI line : [Line:input_in3 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg41] Equalizing fanin/fanout values line : [Line:and2_out4 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg42] Updating linelist with line : [Line:and2_out4 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg43] Updating the maps 
[Msg44] All i/p lines justified for and2_out4 to Propagate. The line : [Line:and2_out4 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg45] Current linelist status inside Propagate() after all input line justification        [and2_w2 D IN V=0] 
        [and2_in3 X IN V=0] 
        [and2_out4 D OUT V=0] 
        [or2_in3 X IN V=0] 
        [or2_out2 X IN V=0] 
        [or2_out3 X OUT V=0] 
        [not2_w2 X IN V=0] 
        [not2_out2 X OUT V=0] 
        [or1_in2 X IN V=0] 
        [or1_in1 X IN V=0] 
        [or1_w2 0 OUT V=1] 
        [not1_w1 X IN V=0] 
        [not1_out1 X OUT V=0] 
        [and1_in2 X IN V=0] 
        [and1_in1 X IN V=0] 
        [and1_w1 X OUT V=0] 
        [input_in3 1 OUT V=1] 
        [input_in2 0 OUT V=1] 
        [input_in1 0 OUT V=1] 
        [output_out4 X IN V=0] 
        [output_out3 X IN V=0] 
        [output_out2 X IN V=0] 
        [output_out1 X IN V=0] 
[Msg46] error_val :D and iv : 0
[Msg47] Input line : [Line:output_out4 Val:X Dir:IN Visited: 0 Type:PO] is propagated with val D (error_val^iv)
[Msg48] Propagating D for the line : output_out4
[Msg49] Updating linelist with line : [Line:output_out4 Val:D Dir:IN Visited: 0 Type:PO]
[Msg50] Updating the maps 
[Msg51] Updated linelist at this stage. - About to start  Propagate()
        [and2_w2 D IN V=0] 
        [and2_in3 X IN V=0] 
        [and2_out4 D OUT V=0] 
        [or2_in3 X IN V=0] 
        [or2_out2 X IN V=0] 
        [or2_out3 X OUT V=0] 
        [not2_w2 X IN V=0] 
        [not2_out2 X OUT V=0] 
        [or1_in2 X IN V=0] 
        [or1_in1 X IN V=0] 
        [or1_w2 0 OUT V=1] 
        [not1_w1 X IN V=0] 
        [not1_out1 X OUT V=0] 
        [and1_in2 X IN V=0] 
        [and1_in1 X IN V=0] 
        [and1_w1 X OUT V=0] 
        [input_in3 1 OUT V=1] 
        [input_in2 0 OUT V=1] 
        [input_in1 0 OUT V=1] 
        [output_out4 D IN V=0] 
        [output_out3 X IN V=0] 
        [output_out2 X IN V=0] 
        [output_out1 X IN V=0] 
[Msg52] Concluding. Reached PO line : [Line:output_out4 Val:D Dir:IN Visited: 0 Type:PO]
[Msg53] Current linelist status after Propagate()
        [Line:and2_w2 Val:D Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_out4 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out3 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not2_out2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_w2 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:not1_w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not1_out1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:and1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_w1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:input_in3 Val:1 Dir:OUT Visited: 1 Type:PI]
        [Line:input_in2 Val:0 Dir:OUT Visited: 1 Type:PI]
        [Line:input_in1 Val:0 Dir:OUT Visited: 1 Type:PI]
        [Line:output_out4 Val:D Dir:IN Visited: 0 Type:PO]
        [Line:output_out3 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out2 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO]

[Msg54] Updating linelist with line : [Line:and2_w2 Val:D Dir:IN Visited: 0 Type:INT_WIRE]
[Msg55] Updating the maps 
[Msg56] Current linelist status after pattern generation()
        [Line:and2_w2 Val:D Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_out4 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out3 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not2_out2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_w2 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:not1_w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not1_out1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:and1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_w1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:input_in3 Val:1 Dir:OUT Visited: 1 Type:PI]
        [Line:input_in2 Val:0 Dir:OUT Visited: 1 Type:PI]
        [Line:input_in1 Val:0 Dir:OUT Visited: 1 Type:PI]
        [Line:output_out4 Val:D Dir:IN Visited: 0 Type:PO]
        [Line:output_out3 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out2 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO]

[Msg] Printing PI patterns 
     input_in3 1
     input_in2 0
     input_in1 0
here file
Here !!!
---------------------------------------------------------
---------------------------------------------------------
TG for line #1 SA-0. Fault #2
[Msg0] Initialzed all line values to X and isVisited = false
[Msg1] Updated line : and2_w2 from linelist to [Line:and2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
[Msg2] Updating the maps 
[Msg] Printing PI patterns 
     input_in3 X
     input_in2 X
     input_in1 X
[Msg3] Current linelist status before Justify()
        [Line:and2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_out4 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out3 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not2_out2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_w2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not1_w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not1_out1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:and1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_w1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:input_in3 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:input_in2 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:input_in1 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:output_out4 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out3 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out2 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO]

[Msg4] Generating test patterns for line : [Line:and2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
[Msg5] Justifying line : [Line:and2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 1
Here 5
[Msg6] Equalizing fanin/fanout values line : [Line:or1_w2 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg7] One of the input lines of line : [Line:or1_w2 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE] to be justified
[Msg8] Trying line : [Line:or1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] to justify
[Msg9] Only [Line:or1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] of line : or1_w2 to be justified
[Msg10] Saving [Line:or1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] for future backtracking.
[Msg11] Justifying line : [Line:or1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 1
Here 6
[Msg12] Equalizing fanin/fanout values line : [Line:input_in1 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg13] Updating linelist with line : [Line:input_in1 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg14] Updating the maps 
[Msg15] Concluding. Reached PI line : [Line:input_in1 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg16] Updating linelist with line : [Line:or1_w2 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg17] Updating the maps 
[Msg18] All lines justified 
[Msg19] Updating linelist with line : [Line:or1_w2 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg20] Updating the maps 
[Msg21] Current linelist status before Propagate() and after Justify()
        [Line:and2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_out4 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out3 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not2_out2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_w2 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:not1_w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not1_out1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:and1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_w1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:input_in3 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:input_in2 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:input_in1 Val:1 Dir:OUT Visited: 1 Type:PI]
        [Line:output_out4 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out3 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out2 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO]

[Msg22] Propagating Dbar for the line : and2_w2
[Msg23] Updating linelist with line : [Line:and2_w2 Val:Dbar Dir:IN Visited: 0 Type:INT_WIRE]
[Msg24] Updating the maps 
[Msg25] Updated linelist at this stage. - About to start  Propagate()
        [and2_w2 Dbar IN V=0] 
        [and2_in3 X IN V=0] 
        [and2_out4 X OUT V=0] 
        [or2_in3 X IN V=0] 
        [or2_out2 X IN V=0] 
        [or2_out3 X OUT V=0] 
        [not2_w2 X IN V=0] 
        [not2_out2 X OUT V=0] 
        [or1_in2 X IN V=0] 
        [or1_in1 X IN V=0] 
        [or1_w2 1 OUT V=1] 
        [not1_w1 X IN V=0] 
        [not1_out1 X OUT V=0] 
        [and1_in2 X IN V=0] 
        [and1_in1 X IN V=0] 
        [and1_w1 X OUT V=0] 
        [input_in3 X OUT V=0] 
        [input_in2 X OUT V=0] 
        [input_in1 1 OUT V=1] 
        [output_out4 X IN V=0] 
        [output_out3 X IN V=0] 
        [output_out2 X IN V=0] 
        [output_out1 X IN V=0] 
[Msg26][Line:and2_w2 Val:Dbar Dir:IN Visited: 0 Type:INT_WIRE] is an input line to the component
[Msg27] Corresponding output line : and2_out4
[Msg28] Checking and2_in3 to be justified or not
[Msg29] Justify and2_in3 inside Propagate. line.direction == IN The line : [Line:and2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
[Msg30] Justifying line : [Line:and2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 1
Here 7
[Msg31] Equalizing fanin/fanout values line : [Line:input_in3 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg32] Updating linelist with line : [Line:input_in3 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg33] Updating the maps 
[Msg34] Concluding. Reached PI line : [Line:input_in3 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg35] Checking and2_w2 to be justified or not
[Msg36] Equalizing fanin/fanout values line : [Line:and2_out4 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg37] Updating linelist with line : [Line:and2_out4 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg38] Updating the maps 
[Msg39] All i/p lines justified for and2_out4 to Propagate. The line : [Line:and2_out4 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg40] Current linelist status inside Propagate() after all input line justification        [and2_w2 Dbar IN V=0] 
        [and2_in3 X IN V=0] 
        [and2_out4 Dbar OUT V=0] 
        [or2_in3 X IN V=0] 
        [or2_out2 X IN V=0] 
        [or2_out3 X OUT V=0] 
        [not2_w2 X IN V=0] 
        [not2_out2 X OUT V=0] 
        [or1_in2 X IN V=0] 
        [or1_in1 X IN V=0] 
        [or1_w2 1 OUT V=1] 
        [not1_w1 X IN V=0] 
        [not1_out1 X OUT V=0] 
        [and1_in2 X IN V=0] 
        [and1_in1 X IN V=0] 
        [and1_w1 X OUT V=0] 
        [input_in3 1 OUT V=1] 
        [input_in2 X OUT V=0] 
        [input_in1 1 OUT V=1] 
        [output_out4 X IN V=0] 
        [output_out3 X IN V=0] 
        [output_out2 X IN V=0] 
        [output_out1 X IN V=0] 
[Msg41] error_val :Dbar and iv : 0
[Msg42] Input line : [Line:output_out4 Val:X Dir:IN Visited: 0 Type:PO] is propagated with val Dbar (error_val^iv)
[Msg43] Propagating Dbar for the line : output_out4
[Msg44] Updating linelist with line : [Line:output_out4 Val:Dbar Dir:IN Visited: 0 Type:PO]
[Msg45] Updating the maps 
[Msg46] Updated linelist at this stage. - About to start  Propagate()
        [and2_w2 Dbar IN V=0] 
        [and2_in3 X IN V=0] 
        [and2_out4 Dbar OUT V=0] 
        [or2_in3 X IN V=0] 
        [or2_out2 X IN V=0] 
        [or2_out3 X OUT V=0] 
        [not2_w2 X IN V=0] 
        [not2_out2 X OUT V=0] 
        [or1_in2 X IN V=0] 
        [or1_in1 X IN V=0] 
        [or1_w2 1 OUT V=1] 
        [not1_w1 X IN V=0] 
        [not1_out1 X OUT V=0] 
        [and1_in2 X IN V=0] 
        [and1_in1 X IN V=0] 
        [and1_w1 X OUT V=0] 
        [input_in3 1 OUT V=1] 
        [input_in2 X OUT V=0] 
        [input_in1 1 OUT V=1] 
        [output_out4 Dbar IN V=0] 
        [output_out3 X IN V=0] 
        [output_out2 X IN V=0] 
        [output_out1 X IN V=0] 
[Msg47] Concluding. Reached PO line : [Line:output_out4 Val:Dbar Dir:IN Visited: 0 Type:PO]
[Msg48] Current linelist status after Propagate()
        [Line:and2_w2 Val:Dbar Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_out4 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out3 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not2_out2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_w2 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:not1_w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not1_out1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:and1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_w1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:input_in3 Val:1 Dir:OUT Visited: 1 Type:PI]
        [Line:input_in2 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:input_in1 Val:1 Dir:OUT Visited: 1 Type:PI]
        [Line:output_out4 Val:Dbar Dir:IN Visited: 0 Type:PO]
        [Line:output_out3 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out2 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO]

[Msg49] Updating linelist with line : [Line:and2_w2 Val:Dbar Dir:IN Visited: 0 Type:INT_WIRE]
[Msg50] Updating the maps 
[Msg51] Current linelist status after pattern generation()
        [Line:and2_w2 Val:Dbar Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_out4 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out3 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not2_out2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_w2 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:not1_w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not1_out1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:and1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_w1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:input_in3 Val:1 Dir:OUT Visited: 1 Type:PI]
        [Line:input_in2 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:input_in1 Val:1 Dir:OUT Visited: 1 Type:PI]
        [Line:output_out4 Val:Dbar Dir:IN Visited: 0 Type:PO]
        [Line:output_out3 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out2 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO]

[Msg] Printing PI patterns 
     input_in3 1
     input_in2 X
     input_in1 1
---------------------------------------------------------
---------------------------------------------------------
TG for line #2 SA-1. Fault #3
[Msg0] Initialzed all line values to X and isVisited = false
[Msg1] Updated line : and2_in3 from linelist to [Line:and2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
[Msg2] Updating the maps 
[Msg] Printing PI patterns 
     input_in3 X
     input_in2 X
     input_in1 X
[Msg3] Current linelist status before Justify()
        [Line:and2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_out4 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out3 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not2_out2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_w2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not1_w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not1_out1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:and1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_w1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:input_in3 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:input_in2 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:input_in1 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:output_out4 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out3 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out2 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO]

[Msg4] Generating test patterns for line : [Line:and2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
[Msg5] Justifying line : [Line:and2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 0
Here 8
[Msg6] Equalizing fanin/fanout values line : [Line:input_in3 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg7] Updating linelist with line : [Line:input_in3 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg8] Updating the maps 
[Msg9] Concluding. Reached PI line : [Line:input_in3 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg10] All lines justified 
[Msg11] Updating linelist with line : [Line:input_in3 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg12] Updating the maps 
[Msg13] Current linelist status before Propagate() and after Justify()
        [Line:and2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_out4 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out3 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not2_out2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_w2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not1_w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not1_out1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:and1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_w1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:input_in3 Val:0 Dir:OUT Visited: 1 Type:PI]
        [Line:input_in2 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:input_in1 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:output_out4 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out3 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out2 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO]

[Msg14] Propagating D for the line : and2_in3
[Msg15] Updating linelist with line : [Line:and2_in3 Val:D Dir:IN Visited: 0 Type:INT_WIRE]
[Msg16] Updating the maps 
[Msg17] Updated linelist at this stage. - About to start  Propagate()
        [and2_w2 X IN V=0] 
        [and2_in3 D IN V=0] 
        [and2_out4 X OUT V=0] 
        [or2_in3 X IN V=0] 
        [or2_out2 X IN V=0] 
        [or2_out3 X OUT V=0] 
        [not2_w2 X IN V=0] 
        [not2_out2 X OUT V=0] 
        [or1_in2 X IN V=0] 
        [or1_in1 X IN V=0] 
        [or1_w2 X OUT V=0] 
        [not1_w1 X IN V=0] 
        [not1_out1 X OUT V=0] 
        [and1_in2 X IN V=0] 
        [and1_in1 X IN V=0] 
        [and1_w1 X OUT V=0] 
        [input_in3 0 OUT V=1] 
        [input_in2 X OUT V=0] 
        [input_in1 X OUT V=0] 
        [output_out4 X IN V=0] 
        [output_out3 X IN V=0] 
        [output_out2 X IN V=0] 
        [output_out1 X IN V=0] 
[Msg18][Line:and2_in3 Val:D Dir:IN Visited: 0 Type:INT_WIRE] is an input line to the component
[Msg19] Corresponding output line : and2_out4
[Msg20] Checking and2_w2 to be justified or not
[Msg21] Justify and2_w2 inside Propagate. line.direction == IN The line : [Line:and2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
[Msg22] Justifying line : [Line:and2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 1
Here 9
[Msg23] Equalizing fanin/fanout values line : [Line:or1_w2 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg24] One of the input lines of line : [Line:or1_w2 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE] to be justified
[Msg25] Trying line : [Line:or1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] to justify
[Msg26] Only [Line:or1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] of line : or1_w2 to be justified
[Msg27] Saving [Line:or1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] for future backtracking.
[Msg28] Justifying line : [Line:or1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 1
Here 10
[Msg29] Equalizing fanin/fanout values line : [Line:input_in2 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg30] Updating linelist with line : [Line:input_in2 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg31] Updating the maps 
[Msg32] Concluding. Reached PI line : [Line:input_in2 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg33] Updating linelist with line : [Line:or1_w2 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg34] Updating the maps 
[Msg35] Checking and2_in3 to be justified or not
[Msg36] Equalizing fanin/fanout values line : [Line:and2_out4 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg37] Updating linelist with line : [Line:and2_out4 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg38] Updating the maps 
[Msg39] All i/p lines justified for and2_out4 to Propagate. The line : [Line:and2_out4 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg40] Current linelist status inside Propagate() after all input line justification        [and2_w2 X IN V=0] 
        [and2_in3 D IN V=0] 
        [and2_out4 D OUT V=0] 
        [or2_in3 X IN V=0] 
        [or2_out2 X IN V=0] 
        [or2_out3 X OUT V=0] 
        [not2_w2 X IN V=0] 
        [not2_out2 X OUT V=0] 
        [or1_in2 X IN V=0] 
        [or1_in1 X IN V=0] 
        [or1_w2 1 OUT V=1] 
        [not1_w1 X IN V=0] 
        [not1_out1 X OUT V=0] 
        [and1_in2 X IN V=0] 
        [and1_in1 X IN V=0] 
        [and1_w1 X OUT V=0] 
        [input_in3 0 OUT V=1] 
        [input_in2 1 OUT V=1] 
        [input_in1 X OUT V=0] 
        [output_out4 X IN V=0] 
        [output_out3 X IN V=0] 
        [output_out2 X IN V=0] 
        [output_out1 X IN V=0] 
[Msg41] error_val :D and iv : 0
[Msg42] Input line : [Line:output_out4 Val:X Dir:IN Visited: 0 Type:PO] is propagated with val D (error_val^iv)
[Msg43] Propagating D for the line : output_out4
[Msg44] Updating linelist with line : [Line:output_out4 Val:D Dir:IN Visited: 0 Type:PO]
[Msg45] Updating the maps 
[Msg46] Updated linelist at this stage. - About to start  Propagate()
        [and2_w2 X IN V=0] 
        [and2_in3 D IN V=0] 
        [and2_out4 D OUT V=0] 
        [or2_in3 X IN V=0] 
        [or2_out2 X IN V=0] 
        [or2_out3 X OUT V=0] 
        [not2_w2 X IN V=0] 
        [not2_out2 X OUT V=0] 
        [or1_in2 X IN V=0] 
        [or1_in1 X IN V=0] 
        [or1_w2 1 OUT V=1] 
        [not1_w1 X IN V=0] 
        [not1_out1 X OUT V=0] 
        [and1_in2 X IN V=0] 
        [and1_in1 X IN V=0] 
        [and1_w1 X OUT V=0] 
        [input_in3 0 OUT V=1] 
        [input_in2 1 OUT V=1] 
        [input_in1 X OUT V=0] 
        [output_out4 D IN V=0] 
        [output_out3 X IN V=0] 
        [output_out2 X IN V=0] 
        [output_out1 X IN V=0] 
[Msg47] Concluding. Reached PO line : [Line:output_out4 Val:D Dir:IN Visited: 0 Type:PO]
[Msg48] Current linelist status after Propagate()
        [Line:and2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_in3 Val:D Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_out4 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out3 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not2_out2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_w2 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:not1_w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not1_out1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:and1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_w1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:input_in3 Val:0 Dir:OUT Visited: 1 Type:PI]
        [Line:input_in2 Val:1 Dir:OUT Visited: 1 Type:PI]
        [Line:input_in1 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:output_out4 Val:D Dir:IN Visited: 0 Type:PO]
        [Line:output_out3 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out2 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO]

[Msg49] Updating linelist with line : [Line:and2_in3 Val:D Dir:IN Visited: 0 Type:INT_WIRE]
[Msg50] Updating the maps 
[Msg51] Current linelist status after pattern generation()
        [Line:and2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_in3 Val:D Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_out4 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out3 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not2_out2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_w2 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:not1_w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not1_out1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:and1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_w1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:input_in3 Val:0 Dir:OUT Visited: 1 Type:PI]
        [Line:input_in2 Val:1 Dir:OUT Visited: 1 Type:PI]
        [Line:input_in1 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:output_out4 Val:D Dir:IN Visited: 0 Type:PO]
        [Line:output_out3 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out2 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO]

[Msg] Printing PI patterns 
     input_in3 0
     input_in2 1
     input_in1 X
Here !!!
---------------------------------------------------------
---------------------------------------------------------
TG for line #2 SA-0. Fault #4
[Msg0] Initialzed all line values to X and isVisited = false
[Msg1] Updated line : and2_in3 from linelist to [Line:and2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
[Msg2] Updating the maps 
[Msg] Printing PI patterns 
     input_in3 X
     input_in2 X
     input_in1 X
[Msg3] Current linelist status before Justify()
        [Line:and2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_out4 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out3 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not2_out2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_w2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not1_w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not1_out1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:and1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_w1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:input_in3 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:input_in2 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:input_in1 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:output_out4 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out3 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out2 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO]

[Msg4] Generating test patterns for line : [Line:and2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
[Msg5] Justifying line : [Line:and2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 1
Here 11
[Msg6] Equalizing fanin/fanout values line : [Line:input_in3 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg7] Updating linelist with line : [Line:input_in3 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg8] Updating the maps 
[Msg9] Concluding. Reached PI line : [Line:input_in3 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg10] All lines justified 
[Msg11] Updating linelist with line : [Line:input_in3 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg12] Updating the maps 
[Msg13] Current linelist status before Propagate() and after Justify()
        [Line:and2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_out4 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out3 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not2_out2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_w2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not1_w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not1_out1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:and1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_w1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:input_in3 Val:1 Dir:OUT Visited: 1 Type:PI]
        [Line:input_in2 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:input_in1 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:output_out4 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out3 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out2 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO]

[Msg14] Propagating Dbar for the line : and2_in3
[Msg15] Updating linelist with line : [Line:and2_in3 Val:Dbar Dir:IN Visited: 0 Type:INT_WIRE]
[Msg16] Updating the maps 
[Msg17] Updated linelist at this stage. - About to start  Propagate()
        [and2_w2 X IN V=0] 
        [and2_in3 Dbar IN V=0] 
        [and2_out4 X OUT V=0] 
        [or2_in3 X IN V=0] 
        [or2_out2 X IN V=0] 
        [or2_out3 X OUT V=0] 
        [not2_w2 X IN V=0] 
        [not2_out2 X OUT V=0] 
        [or1_in2 X IN V=0] 
        [or1_in1 X IN V=0] 
        [or1_w2 X OUT V=0] 
        [not1_w1 X IN V=0] 
        [not1_out1 X OUT V=0] 
        [and1_in2 X IN V=0] 
        [and1_in1 X IN V=0] 
        [and1_w1 X OUT V=0] 
        [input_in3 1 OUT V=1] 
        [input_in2 X OUT V=0] 
        [input_in1 X OUT V=0] 
        [output_out4 X IN V=0] 
        [output_out3 X IN V=0] 
        [output_out2 X IN V=0] 
        [output_out1 X IN V=0] 
[Msg18][Line:and2_in3 Val:Dbar Dir:IN Visited: 0 Type:INT_WIRE] is an input line to the component
[Msg19] Corresponding output line : and2_out4
[Msg20] Checking and2_in3 to be justified or not
[Msg21] Checking and2_w2 to be justified or not
[Msg22] Justify and2_w2 inside Propagate. line.direction == IN The line : [Line:and2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
[Msg23] Justifying line : [Line:and2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 1
Here 12
[Msg24] Equalizing fanin/fanout values line : [Line:or1_w2 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg25] One of the input lines of line : [Line:or1_w2 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE] to be justified
[Msg26] Trying line : [Line:or1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] to justify
[Msg27] Only [Line:or1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] of line : or1_w2 to be justified
[Msg28] Saving [Line:or1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] for future backtracking.
[Msg29] Justifying line : [Line:or1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 1
Here 13
[Msg30] Equalizing fanin/fanout values line : [Line:input_in1 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg31] Updating linelist with line : [Line:input_in1 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg32] Updating the maps 
[Msg33] Concluding. Reached PI line : [Line:input_in1 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg34] Updating linelist with line : [Line:or1_w2 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg35] Updating the maps 
[Msg36] Equalizing fanin/fanout values line : [Line:and2_out4 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg37] Updating linelist with line : [Line:and2_out4 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg38] Updating the maps 
[Msg39] All i/p lines justified for and2_out4 to Propagate. The line : [Line:and2_out4 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg40] Current linelist status inside Propagate() after all input line justification        [and2_w2 X IN V=0] 
        [and2_in3 Dbar IN V=0] 
        [and2_out4 Dbar OUT V=0] 
        [or2_in3 X IN V=0] 
        [or2_out2 X IN V=0] 
        [or2_out3 X OUT V=0] 
        [not2_w2 X IN V=0] 
        [not2_out2 X OUT V=0] 
        [or1_in2 X IN V=0] 
        [or1_in1 X IN V=0] 
        [or1_w2 1 OUT V=1] 
        [not1_w1 X IN V=0] 
        [not1_out1 X OUT V=0] 
        [and1_in2 X IN V=0] 
        [and1_in1 X IN V=0] 
        [and1_w1 X OUT V=0] 
        [input_in3 1 OUT V=1] 
        [input_in2 X OUT V=0] 
        [input_in1 1 OUT V=1] 
        [output_out4 X IN V=0] 
        [output_out3 X IN V=0] 
        [output_out2 X IN V=0] 
        [output_out1 X IN V=0] 
[Msg41] error_val :Dbar and iv : 0
[Msg42] Input line : [Line:output_out4 Val:X Dir:IN Visited: 0 Type:PO] is propagated with val Dbar (error_val^iv)
[Msg43] Propagating Dbar for the line : output_out4
[Msg44] Updating linelist with line : [Line:output_out4 Val:Dbar Dir:IN Visited: 0 Type:PO]
[Msg45] Updating the maps 
[Msg46] Updated linelist at this stage. - About to start  Propagate()
        [and2_w2 X IN V=0] 
        [and2_in3 Dbar IN V=0] 
        [and2_out4 Dbar OUT V=0] 
        [or2_in3 X IN V=0] 
        [or2_out2 X IN V=0] 
        [or2_out3 X OUT V=0] 
        [not2_w2 X IN V=0] 
        [not2_out2 X OUT V=0] 
        [or1_in2 X IN V=0] 
        [or1_in1 X IN V=0] 
        [or1_w2 1 OUT V=1] 
        [not1_w1 X IN V=0] 
        [not1_out1 X OUT V=0] 
        [and1_in2 X IN V=0] 
        [and1_in1 X IN V=0] 
        [and1_w1 X OUT V=0] 
        [input_in3 1 OUT V=1] 
        [input_in2 X OUT V=0] 
        [input_in1 1 OUT V=1] 
        [output_out4 Dbar IN V=0] 
        [output_out3 X IN V=0] 
        [output_out2 X IN V=0] 
        [output_out1 X IN V=0] 
[Msg47] Concluding. Reached PO line : [Line:output_out4 Val:Dbar Dir:IN Visited: 0 Type:PO]
[Msg48] Current linelist status after Propagate()
        [Line:and2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_in3 Val:Dbar Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_out4 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out3 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not2_out2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_w2 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:not1_w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not1_out1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:and1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_w1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:input_in3 Val:1 Dir:OUT Visited: 1 Type:PI]
        [Line:input_in2 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:input_in1 Val:1 Dir:OUT Visited: 1 Type:PI]
        [Line:output_out4 Val:Dbar Dir:IN Visited: 0 Type:PO]
        [Line:output_out3 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out2 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO]

[Msg49] Updating linelist with line : [Line:and2_in3 Val:Dbar Dir:IN Visited: 0 Type:INT_WIRE]
[Msg50] Updating the maps 
[Msg51] Current linelist status after pattern generation()
        [Line:and2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_in3 Val:Dbar Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_out4 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out3 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not2_out2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_w2 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:not1_w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not1_out1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:and1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_w1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:input_in3 Val:1 Dir:OUT Visited: 1 Type:PI]
        [Line:input_in2 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:input_in1 Val:1 Dir:OUT Visited: 1 Type:PI]
        [Line:output_out4 Val:Dbar Dir:IN Visited: 0 Type:PO]
        [Line:output_out3 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out2 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO]

[Msg] Printing PI patterns 
     input_in3 1
     input_in2 X
     input_in1 1
---------------------------------------------------------
---------------------------------------------------------
TG for line #3 SA-1. Fault #5
[Msg0] Initialzed all line values to X and isVisited = false
[Msg1] Updated line : and2_out4 from linelist to [Line:and2_out4 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg2] Updating the maps 
[Msg] Printing PI patterns 
     input_in3 X
     input_in2 X
     input_in1 X
[Msg3] Current linelist status before Justify()
        [Line:and2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_out4 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out3 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not2_out2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_w2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not1_w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not1_out1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:and1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_w1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:input_in3 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:input_in2 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:input_in1 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:output_out4 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out3 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out2 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO]

[Msg4] Generating test patterns for line : [Line:and2_out4 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg5] Justifying line : [Line:and2_out4 Val:X Dir:OUT Visited: 0 Type:INT_WIRE] with value 0
Here 14
[Msg6] Equalizing fanin/fanout values line : [Line:and2_out4 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg7] One of the input lines of line : [Line:and2_out4 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE] to be justified
[Msg8] Trying line : [Line:and2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] to justify
[Msg9] Only [Line:and2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] of line : and2_out4 to be justified
[Msg10] Saving [Line:and2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] for future backtracking.
[Msg11] Justifying line : [Line:and2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 0
Here 15
[Msg12] Equalizing fanin/fanout values line : [Line:or1_w2 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg13] inval = 0] Justifying all input lines for the line : [Line:or1_w2 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg14] Following lines need to be justified. (Total 2 lines)
        [Line:or1_w2] -->  [Line:or1_in2] [Line:or1_in1]
[Msg15] Justifying line : [Line:or1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 0
Here 16
[Msg16] Equalizing fanin/fanout values line : [Line:input_in2 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg17] Updating linelist with line : [Line:input_in2 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg18] Updating the maps 
[Msg19] Concluding. Reached PI line : [Line:input_in2 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg20] Updating linelist with line : [Line:or1_w2 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg21] Updating the maps 
[Msg22] Justifying line : [Line:or1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 0
Here 17
[Msg23] Equalizing fanin/fanout values line : [Line:input_in1 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg24] Updating linelist with line : [Line:input_in1 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg25] Updating the maps 
[Msg26] Concluding. Reached PI line : [Line:input_in1 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg27] Updating linelist with line : [Line:or1_w2 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg28] Updating the maps 
[Msg29] Updating linelist with line : [Line:and2_out4 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg30] Updating the maps 
[Msg31] All lines justified 
[Msg32] Updating linelist with line : [Line:and2_out4 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg33] Updating the maps 
[Msg34] Current linelist status before Propagate() and after Justify()
        [Line:and2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_out4 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:or2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out3 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not2_out2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_w2 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:not1_w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not1_out1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:and1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_w1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:input_in3 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:input_in2 Val:0 Dir:OUT Visited: 1 Type:PI]
        [Line:input_in1 Val:0 Dir:OUT Visited: 1 Type:PI]
        [Line:output_out4 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out3 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out2 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO]

[Msg35] Propagating D for the line : and2_out4
[Msg36] Updating linelist with line : [Line:and2_out4 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg37] Updating the maps 
[Msg38] Updated linelist at this stage. - About to start  Propagate()
        [and2_w2 X IN V=0] 
        [and2_in3 X IN V=0] 
        [and2_out4 D OUT V=0] 
        [or2_in3 X IN V=0] 
        [or2_out2 X IN V=0] 
        [or2_out3 X OUT V=0] 
        [not2_w2 X IN V=0] 
        [not2_out2 X OUT V=0] 
        [or1_in2 X IN V=0] 
        [or1_in1 X IN V=0] 
        [or1_w2 0 OUT V=1] 
        [not1_w1 X IN V=0] 
        [not1_out1 X OUT V=0] 
        [and1_in2 X IN V=0] 
        [and1_in1 X IN V=0] 
        [and1_w1 X OUT V=0] 
        [input_in3 X OUT V=0] 
        [input_in2 0 OUT V=1] 
        [input_in1 0 OUT V=1] 
        [output_out4 X IN V=0] 
        [output_out3 X IN V=0] 
        [output_out2 X IN V=0] 
        [output_out1 X IN V=0] 
[Msg39 Concluding. Reached PO line : [Line:output_out4 Val:X Dir:IN Visited: 0 Type:PO]
[Msg40] Current linelist status after Propagate()
        [Line:and2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_out4 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out3 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not2_out2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_w2 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:not1_w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not1_out1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:and1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_w1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:input_in3 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:input_in2 Val:0 Dir:OUT Visited: 1 Type:PI]
        [Line:input_in1 Val:0 Dir:OUT Visited: 1 Type:PI]
        [Line:output_out4 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out3 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out2 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO]

[Msg41] Updating linelist with line : [Line:and2_out4 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg42] Updating the maps 
[Msg43] Current linelist status after pattern generation()
        [Line:and2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_out4 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out3 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not2_out2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_w2 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:not1_w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not1_out1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:and1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_w1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:input_in3 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:input_in2 Val:0 Dir:OUT Visited: 1 Type:PI]
        [Line:input_in1 Val:0 Dir:OUT Visited: 1 Type:PI]
        [Line:output_out4 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out3 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out2 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO]

[Msg] Printing PI patterns 
     input_in3 X
     input_in2 0
     input_in1 0
Here !!!
---------------------------------------------------------
---------------------------------------------------------
TG for line #3 SA-0. Fault #6
[Msg0] Initialzed all line values to X and isVisited = false
[Msg1] Updated line : and2_out4 from linelist to [Line:and2_out4 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg2] Updating the maps 
[Msg] Printing PI patterns 
     input_in3 X
     input_in2 X
     input_in1 X
[Msg3] Current linelist status before Justify()
        [Line:and2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_out4 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out3 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not2_out2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_w2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not1_w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not1_out1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:and1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_w1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:input_in3 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:input_in2 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:input_in1 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:output_out4 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out3 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out2 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO]

[Msg4] Generating test patterns for line : [Line:and2_out4 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg5] Justifying line : [Line:and2_out4 Val:X Dir:OUT Visited: 0 Type:INT_WIRE] with value 1
Here 18
[Msg6] Equalizing fanin/fanout values line : [Line:and2_out4 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg7] inval = 1] Justifying all input lines for the line : [Line:and2_out4 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg8] Following lines need to be justified. (Total 2 lines)
        [Line:and2_out4] -->  [Line:and2_in3] [Line:and2_w2]
[Msg9] Justifying line : [Line:and2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 1
Here 19
[Msg10] Equalizing fanin/fanout values line : [Line:input_in3 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg11] Updating linelist with line : [Line:input_in3 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg12] Updating the maps 
[Msg13] Concluding. Reached PI line : [Line:input_in3 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg14] Updating linelist with line : [Line:and2_out4 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg15] Updating the maps 
[Msg16] Justifying line : [Line:and2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 1
Here 20
[Msg17] Equalizing fanin/fanout values line : [Line:or1_w2 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg18] One of the input lines of line : [Line:or1_w2 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE] to be justified
[Msg19] Trying line : [Line:or1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] to justify
[Msg20] Only [Line:or1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] of line : or1_w2 to be justified
[Msg21] Saving [Line:or1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] for future backtracking.
[Msg22] Justifying line : [Line:or1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 1
Here 21
[Msg23] Equalizing fanin/fanout values line : [Line:input_in2 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg24] Updating linelist with line : [Line:input_in2 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg25] Updating the maps 
[Msg26] Concluding. Reached PI line : [Line:input_in2 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg27] Updating linelist with line : [Line:or1_w2 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg28] Updating the maps 
[Msg29] Updating linelist with line : [Line:and2_out4 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg30] Updating the maps 
[Msg31] All lines justified 
[Msg32] Updating linelist with line : [Line:and2_out4 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg33] Updating the maps 
[Msg34] Current linelist status before Propagate() and after Justify()
        [Line:and2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_out4 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:or2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out3 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not2_out2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_w2 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:not1_w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not1_out1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:and1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_w1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:input_in3 Val:1 Dir:OUT Visited: 1 Type:PI]
        [Line:input_in2 Val:1 Dir:OUT Visited: 1 Type:PI]
        [Line:input_in1 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:output_out4 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out3 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out2 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO]

[Msg35] Propagating Dbar for the line : and2_out4
[Msg36] Updating linelist with line : [Line:and2_out4 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg37] Updating the maps 
[Msg38] Updated linelist at this stage. - About to start  Propagate()
        [and2_w2 X IN V=0] 
        [and2_in3 X IN V=0] 
        [and2_out4 Dbar OUT V=0] 
        [or2_in3 X IN V=0] 
        [or2_out2 X IN V=0] 
        [or2_out3 X OUT V=0] 
        [not2_w2 X IN V=0] 
        [not2_out2 X OUT V=0] 
        [or1_in2 X IN V=0] 
        [or1_in1 X IN V=0] 
        [or1_w2 1 OUT V=1] 
        [not1_w1 X IN V=0] 
        [not1_out1 X OUT V=0] 
        [and1_in2 X IN V=0] 
        [and1_in1 X IN V=0] 
        [and1_w1 X OUT V=0] 
        [input_in3 1 OUT V=1] 
        [input_in2 1 OUT V=1] 
        [input_in1 X OUT V=0] 
        [output_out4 X IN V=0] 
        [output_out3 X IN V=0] 
        [output_out2 X IN V=0] 
        [output_out1 X IN V=0] 
[Msg39 Concluding. Reached PO line : [Line:output_out4 Val:X Dir:IN Visited: 0 Type:PO]
[Msg40] Current linelist status after Propagate()
        [Line:and2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_out4 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out3 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not2_out2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_w2 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:not1_w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not1_out1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:and1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_w1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:input_in3 Val:1 Dir:OUT Visited: 1 Type:PI]
        [Line:input_in2 Val:1 Dir:OUT Visited: 1 Type:PI]
        [Line:input_in1 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:output_out4 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out3 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out2 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO]

[Msg41] Updating linelist with line : [Line:and2_out4 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg42] Updating the maps 
[Msg43] Current linelist status after pattern generation()
        [Line:and2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_out4 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out3 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not2_out2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_w2 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:not1_w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not1_out1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:and1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_w1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:input_in3 Val:1 Dir:OUT Visited: 1 Type:PI]
        [Line:input_in2 Val:1 Dir:OUT Visited: 1 Type:PI]
        [Line:input_in1 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:output_out4 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out3 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out2 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO]

[Msg] Printing PI patterns 
     input_in3 1
     input_in2 1
     input_in1 X
---------------------------------------------------------
---------------------------------------------------------
TG for line #4 SA-1. Fault #7
[Msg0] Initialzed all line values to X and isVisited = false
[Msg1] Updated line : or2_in3 from linelist to [Line:or2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
[Msg2] Updating the maps 
[Msg] Printing PI patterns 
     input_in3 X
     input_in2 X
     input_in1 X
[Msg3] Current linelist status before Justify()
        [Line:and2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_out4 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out3 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not2_out2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_w2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not1_w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not1_out1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:and1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_w1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:input_in3 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:input_in2 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:input_in1 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:output_out4 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out3 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out2 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO]

[Msg4] Generating test patterns for line : [Line:or2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
[Msg5] Justifying line : [Line:or2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 0
Here 22
[Msg6] Equalizing fanin/fanout values line : [Line:input_in3 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg7] Updating linelist with line : [Line:input_in3 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg8] Updating the maps 
[Msg9] Concluding. Reached PI line : [Line:input_in3 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg10] All lines justified 
[Msg11] Updating linelist with line : [Line:input_in3 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg12] Updating the maps 
[Msg13] Current linelist status before Propagate() and after Justify()
        [Line:and2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_out4 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out3 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not2_out2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_w2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not1_w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not1_out1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:and1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_w1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:input_in3 Val:0 Dir:OUT Visited: 1 Type:PI]
        [Line:input_in2 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:input_in1 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:output_out4 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out3 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out2 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO]

[Msg14] Propagating D for the line : or2_in3
[Msg15] Updating linelist with line : [Line:or2_in3 Val:D Dir:IN Visited: 0 Type:INT_WIRE]
[Msg16] Updating the maps 
[Msg17] Updated linelist at this stage. - About to start  Propagate()
        [and2_w2 X IN V=0] 
        [and2_in3 X IN V=0] 
        [and2_out4 X OUT V=0] 
        [or2_in3 D IN V=0] 
        [or2_out2 X IN V=0] 
        [or2_out3 X OUT V=0] 
        [not2_w2 X IN V=0] 
        [not2_out2 X OUT V=0] 
        [or1_in2 X IN V=0] 
        [or1_in1 X IN V=0] 
        [or1_w2 X OUT V=0] 
        [not1_w1 X IN V=0] 
        [not1_out1 X OUT V=0] 
        [and1_in2 X IN V=0] 
        [and1_in1 X IN V=0] 
        [and1_w1 X OUT V=0] 
        [input_in3 0 OUT V=1] 
        [input_in2 X OUT V=0] 
        [input_in1 X OUT V=0] 
        [output_out4 X IN V=0] 
        [output_out3 X IN V=0] 
        [output_out2 X IN V=0] 
        [output_out1 X IN V=0] 
[Msg18][Line:or2_in3 Val:D Dir:IN Visited: 0 Type:INT_WIRE] is an input line to the component
[Msg19] Corresponding output line : or2_out3
[Msg20] Checking or2_in3 to be justified or not
[Msg21] Checking or2_out2 to be justified or not
[Msg22] Justify or2_out2 inside Propagate. line.direction == IN The line : [Line:or2_out2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
[Msg23] Justifying line : [Line:or2_out2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 0
Here 23
[Msg24] Equalizing fanin/fanout values line : [Line:not2_out2 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg25] inval = 1] Justifying all input lines for the line : [Line:not2_out2 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg26] Following lines need to be justified. (Total 1 lines)
        [Line:not2_out2] -->  [Line:not2_w2]
[Msg27] Justifying line : [Line:not2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 1
Here 24
[Msg28] Equalizing fanin/fanout values line : [Line:or1_w2 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg29] One of the input lines of line : [Line:or1_w2 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE] to be justified
[Msg30] Trying line : [Line:or1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] to justify
[Msg31] Only [Line:or1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] of line : or1_w2 to be justified
[Msg32] Saving [Line:or1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] for future backtracking.
[Msg33] Justifying line : [Line:or1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 1
Here 25
[Msg34] Equalizing fanin/fanout values line : [Line:input_in2 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg35] Updating linelist with line : [Line:input_in2 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg36] Updating the maps 
[Msg37] Concluding. Reached PI line : [Line:input_in2 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg38] Updating linelist with line : [Line:or1_w2 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg39] Updating the maps 
[Msg40] Updating linelist with line : [Line:not2_out2 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg41] Updating the maps 
[Msg42] Equalizing fanin/fanout values line : [Line:or2_out3 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg43] Updating linelist with line : [Line:or2_out3 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg44] Updating the maps 
[Msg45] All i/p lines justified for or2_out3 to Propagate. The line : [Line:or2_out3 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg46] Current linelist status inside Propagate() after all input line justification        [and2_w2 X IN V=0] 
        [and2_in3 X IN V=0] 
        [and2_out4 X OUT V=0] 
        [or2_in3 D IN V=0] 
        [or2_out2 X IN V=0] 
        [or2_out3 D OUT V=0] 
        [not2_w2 X IN V=0] 
        [not2_out2 0 OUT V=1] 
        [or1_in2 X IN V=0] 
        [or1_in1 X IN V=0] 
        [or1_w2 1 OUT V=1] 
        [not1_w1 X IN V=0] 
        [not1_out1 X OUT V=0] 
        [and1_in2 X IN V=0] 
        [and1_in1 X IN V=0] 
        [and1_w1 X OUT V=0] 
        [input_in3 0 OUT V=1] 
        [input_in2 1 OUT V=1] 
        [input_in1 X OUT V=0] 
        [output_out4 X IN V=0] 
        [output_out3 X IN V=0] 
        [output_out2 X IN V=0] 
        [output_out1 X IN V=0] 
[Msg47] error_val :D and iv : 0
[Msg48] Input line : [Line:output_out3 Val:X Dir:IN Visited: 0 Type:PO] is propagated with val D (error_val^iv)
[Msg49] Propagating D for the line : output_out3
[Msg50] Updating linelist with line : [Line:output_out3 Val:D Dir:IN Visited: 0 Type:PO]
[Msg51] Updating the maps 
[Msg52] Updated linelist at this stage. - About to start  Propagate()
        [and2_w2 X IN V=0] 
        [and2_in3 X IN V=0] 
        [and2_out4 X OUT V=0] 
        [or2_in3 D IN V=0] 
        [or2_out2 X IN V=0] 
        [or2_out3 D OUT V=0] 
        [not2_w2 X IN V=0] 
        [not2_out2 0 OUT V=1] 
        [or1_in2 X IN V=0] 
        [or1_in1 X IN V=0] 
        [or1_w2 1 OUT V=1] 
        [not1_w1 X IN V=0] 
        [not1_out1 X OUT V=0] 
        [and1_in2 X IN V=0] 
        [and1_in1 X IN V=0] 
        [and1_w1 X OUT V=0] 
        [input_in3 0 OUT V=1] 
        [input_in2 1 OUT V=1] 
        [input_in1 X OUT V=0] 
        [output_out4 X IN V=0] 
        [output_out3 D IN V=0] 
        [output_out2 X IN V=0] 
        [output_out1 X IN V=0] 
[Msg53] Concluding. Reached PO line : [Line:output_out3 Val:D Dir:IN Visited: 0 Type:PO]
[Msg54] Current linelist status after Propagate()
        [Line:and2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_out4 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or2_in3 Val:D Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out3 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not2_out2 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:or1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_w2 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:not1_w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not1_out1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:and1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_w1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:input_in3 Val:0 Dir:OUT Visited: 1 Type:PI]
        [Line:input_in2 Val:1 Dir:OUT Visited: 1 Type:PI]
        [Line:input_in1 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:output_out4 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out3 Val:D Dir:IN Visited: 0 Type:PO]
        [Line:output_out2 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO]

[Msg55] Updating linelist with line : [Line:or2_in3 Val:D Dir:IN Visited: 0 Type:INT_WIRE]
[Msg56] Updating the maps 
[Msg57] Current linelist status after pattern generation()
        [Line:and2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_out4 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or2_in3 Val:D Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out3 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not2_out2 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:or1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_w2 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:not1_w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not1_out1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:and1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_w1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:input_in3 Val:0 Dir:OUT Visited: 1 Type:PI]
        [Line:input_in2 Val:1 Dir:OUT Visited: 1 Type:PI]
        [Line:input_in1 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:output_out4 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out3 Val:D Dir:IN Visited: 0 Type:PO]
        [Line:output_out2 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO]

[Msg] Printing PI patterns 
     input_in3 0
     input_in2 1
     input_in1 X
Here !!!
---------------------------------------------------------
---------------------------------------------------------
TG for line #4 SA-0. Fault #8
[Msg0] Initialzed all line values to X and isVisited = false
[Msg1] Updated line : or2_in3 from linelist to [Line:or2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
[Msg2] Updating the maps 
[Msg] Printing PI patterns 
     input_in3 X
     input_in2 X
     input_in1 X
[Msg3] Current linelist status before Justify()
        [Line:and2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_out4 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out3 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not2_out2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_w2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not1_w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not1_out1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:and1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_w1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:input_in3 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:input_in2 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:input_in1 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:output_out4 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out3 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out2 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO]

[Msg4] Generating test patterns for line : [Line:or2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
[Msg5] Justifying line : [Line:or2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 1
Here 26
[Msg6] Equalizing fanin/fanout values line : [Line:input_in3 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg7] Updating linelist with line : [Line:input_in3 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg8] Updating the maps 
[Msg9] Concluding. Reached PI line : [Line:input_in3 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg10] All lines justified 
[Msg11] Updating linelist with line : [Line:input_in3 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg12] Updating the maps 
[Msg13] Current linelist status before Propagate() and after Justify()
        [Line:and2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_out4 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out3 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not2_out2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_w2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not1_w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not1_out1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:and1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_w1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:input_in3 Val:1 Dir:OUT Visited: 1 Type:PI]
        [Line:input_in2 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:input_in1 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:output_out4 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out3 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out2 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO]

[Msg14] Propagating Dbar for the line : or2_in3
[Msg15] Updating linelist with line : [Line:or2_in3 Val:Dbar Dir:IN Visited: 0 Type:INT_WIRE]
[Msg16] Updating the maps 
[Msg17] Updated linelist at this stage. - About to start  Propagate()
        [and2_w2 X IN V=0] 
        [and2_in3 X IN V=0] 
        [and2_out4 X OUT V=0] 
        [or2_in3 Dbar IN V=0] 
        [or2_out2 X IN V=0] 
        [or2_out3 X OUT V=0] 
        [not2_w2 X IN V=0] 
        [not2_out2 X OUT V=0] 
        [or1_in2 X IN V=0] 
        [or1_in1 X IN V=0] 
        [or1_w2 X OUT V=0] 
        [not1_w1 X IN V=0] 
        [not1_out1 X OUT V=0] 
        [and1_in2 X IN V=0] 
        [and1_in1 X IN V=0] 
        [and1_w1 X OUT V=0] 
        [input_in3 1 OUT V=1] 
        [input_in2 X OUT V=0] 
        [input_in1 X OUT V=0] 
        [output_out4 X IN V=0] 
        [output_out3 X IN V=0] 
        [output_out2 X IN V=0] 
        [output_out1 X IN V=0] 
[Msg18][Line:or2_in3 Val:Dbar Dir:IN Visited: 0 Type:INT_WIRE] is an input line to the component
[Msg19] Corresponding output line : or2_out3
[Msg20] Checking or2_out2 to be justified or not
[Msg21] Justify or2_out2 inside Propagate. line.direction == IN The line : [Line:or2_out2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
[Msg22] Justifying line : [Line:or2_out2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 0
Here 27
[Msg23] Equalizing fanin/fanout values line : [Line:not2_out2 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg24] inval = 1] Justifying all input lines for the line : [Line:not2_out2 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg25] Following lines need to be justified. (Total 1 lines)
        [Line:not2_out2] -->  [Line:not2_w2]
[Msg26] Justifying line : [Line:not2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 1
Here 28
[Msg27] Equalizing fanin/fanout values line : [Line:or1_w2 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg28] One of the input lines of line : [Line:or1_w2 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE] to be justified
[Msg29] Trying line : [Line:or1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] to justify
[Msg30] Only [Line:or1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] of line : or1_w2 to be justified
[Msg31] Saving [Line:or1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] for future backtracking.
[Msg32] Justifying line : [Line:or1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 1
Here 29
[Msg33] Equalizing fanin/fanout values line : [Line:input_in1 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg34] Updating linelist with line : [Line:input_in1 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg35] Updating the maps 
[Msg36] Concluding. Reached PI line : [Line:input_in1 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg37] Updating linelist with line : [Line:or1_w2 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg38] Updating the maps 
[Msg39] Updating linelist with line : [Line:not2_out2 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg40] Updating the maps 
[Msg41] Checking or2_in3 to be justified or not
[Msg42] Equalizing fanin/fanout values line : [Line:or2_out3 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg43] Updating linelist with line : [Line:or2_out3 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg44] Updating the maps 
[Msg45] All i/p lines justified for or2_out3 to Propagate. The line : [Line:or2_out3 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg46] Current linelist status inside Propagate() after all input line justification        [and2_w2 X IN V=0] 
        [and2_in3 X IN V=0] 
        [and2_out4 X OUT V=0] 
        [or2_in3 Dbar IN V=0] 
        [or2_out2 X IN V=0] 
        [or2_out3 Dbar OUT V=0] 
        [not2_w2 X IN V=0] 
        [not2_out2 0 OUT V=1] 
        [or1_in2 X IN V=0] 
        [or1_in1 X IN V=0] 
        [or1_w2 1 OUT V=1] 
        [not1_w1 X IN V=0] 
        [not1_out1 X OUT V=0] 
        [and1_in2 X IN V=0] 
        [and1_in1 X IN V=0] 
        [and1_w1 X OUT V=0] 
        [input_in3 1 OUT V=1] 
        [input_in2 X OUT V=0] 
        [input_in1 1 OUT V=1] 
        [output_out4 X IN V=0] 
        [output_out3 X IN V=0] 
        [output_out2 X IN V=0] 
        [output_out1 X IN V=0] 
[Msg47] error_val :Dbar and iv : 0
[Msg48] Input line : [Line:output_out3 Val:X Dir:IN Visited: 0 Type:PO] is propagated with val Dbar (error_val^iv)
[Msg49] Propagating Dbar for the line : output_out3
[Msg50] Updating linelist with line : [Line:output_out3 Val:Dbar Dir:IN Visited: 0 Type:PO]
[Msg51] Updating the maps 
[Msg52] Updated linelist at this stage. - About to start  Propagate()
        [and2_w2 X IN V=0] 
        [and2_in3 X IN V=0] 
        [and2_out4 X OUT V=0] 
        [or2_in3 Dbar IN V=0] 
        [or2_out2 X IN V=0] 
        [or2_out3 Dbar OUT V=0] 
        [not2_w2 X IN V=0] 
        [not2_out2 0 OUT V=1] 
        [or1_in2 X IN V=0] 
        [or1_in1 X IN V=0] 
        [or1_w2 1 OUT V=1] 
        [not1_w1 X IN V=0] 
        [not1_out1 X OUT V=0] 
        [and1_in2 X IN V=0] 
        [and1_in1 X IN V=0] 
        [and1_w1 X OUT V=0] 
        [input_in3 1 OUT V=1] 
        [input_in2 X OUT V=0] 
        [input_in1 1 OUT V=1] 
        [output_out4 X IN V=0] 
        [output_out3 Dbar IN V=0] 
        [output_out2 X IN V=0] 
        [output_out1 X IN V=0] 
[Msg53] Concluding. Reached PO line : [Line:output_out3 Val:Dbar Dir:IN Visited: 0 Type:PO]
[Msg54] Current linelist status after Propagate()
        [Line:and2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_out4 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or2_in3 Val:Dbar Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out3 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not2_out2 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:or1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_w2 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:not1_w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not1_out1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:and1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_w1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:input_in3 Val:1 Dir:OUT Visited: 1 Type:PI]
        [Line:input_in2 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:input_in1 Val:1 Dir:OUT Visited: 1 Type:PI]
        [Line:output_out4 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out3 Val:Dbar Dir:IN Visited: 0 Type:PO]
        [Line:output_out2 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO]

[Msg55] Updating linelist with line : [Line:or2_in3 Val:Dbar Dir:IN Visited: 0 Type:INT_WIRE]
[Msg56] Updating the maps 
[Msg57] Current linelist status after pattern generation()
        [Line:and2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_out4 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or2_in3 Val:Dbar Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out3 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not2_out2 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:or1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_w2 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:not1_w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not1_out1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:and1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_w1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:input_in3 Val:1 Dir:OUT Visited: 1 Type:PI]
        [Line:input_in2 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:input_in1 Val:1 Dir:OUT Visited: 1 Type:PI]
        [Line:output_out4 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out3 Val:Dbar Dir:IN Visited: 0 Type:PO]
        [Line:output_out2 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO]

[Msg] Printing PI patterns 
     input_in3 1
     input_in2 X
     input_in1 1
---------------------------------------------------------
---------------------------------------------------------
TG for line #5 SA-1. Fault #9
[Msg0] Initialzed all line values to X and isVisited = false
[Msg1] Updated line : or2_out2 from linelist to [Line:or2_out2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
[Msg2] Updating the maps 
[Msg] Printing PI patterns 
     input_in3 X
     input_in2 X
     input_in1 X
[Msg3] Current linelist status before Justify()
        [Line:and2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_out4 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out3 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not2_out2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_w2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not1_w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not1_out1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:and1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_w1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:input_in3 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:input_in2 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:input_in1 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:output_out4 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out3 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out2 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO]

[Msg4] Generating test patterns for line : [Line:or2_out2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
[Msg5] Justifying line : [Line:or2_out2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 0
Here 30
[Msg6] Equalizing fanin/fanout values line : [Line:not2_out2 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg7] inval = 1] Justifying all input lines for the line : [Line:not2_out2 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg8] Following lines need to be justified. (Total 1 lines)
        [Line:not2_out2] -->  [Line:not2_w2]
[Msg9] Justifying line : [Line:not2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 1
Here 31
[Msg10] Equalizing fanin/fanout values line : [Line:or1_w2 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg11] One of the input lines of line : [Line:or1_w2 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE] to be justified
[Msg12] Trying line : [Line:or1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] to justify
[Msg13] Only [Line:or1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] of line : or1_w2 to be justified
[Msg14] Saving [Line:or1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] for future backtracking.
[Msg15] Justifying line : [Line:or1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 1
Here 32
[Msg16] Equalizing fanin/fanout values line : [Line:input_in2 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg17] Updating linelist with line : [Line:input_in2 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg18] Updating the maps 
[Msg19] Concluding. Reached PI line : [Line:input_in2 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg20] Updating linelist with line : [Line:or1_w2 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg21] Updating the maps 
[Msg22] Updating linelist with line : [Line:not2_out2 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg23] Updating the maps 
[Msg24] All lines justified 
[Msg25] Updating linelist with line : [Line:not2_out2 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg26] Updating the maps 
[Msg27] Current linelist status before Propagate() and after Justify()
        [Line:and2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_out4 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out3 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not2_out2 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:or1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_w2 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:not1_w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not1_out1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:and1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_w1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:input_in3 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:input_in2 Val:1 Dir:OUT Visited: 1 Type:PI]
        [Line:input_in1 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:output_out4 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out3 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out2 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO]

[Msg28] Propagating D for the line : or2_out2
[Msg29] Updating linelist with line : [Line:or2_out2 Val:D Dir:IN Visited: 0 Type:INT_WIRE]
[Msg30] Updating the maps 
[Msg31] Updated linelist at this stage. - About to start  Propagate()
        [and2_w2 X IN V=0] 
        [and2_in3 X IN V=0] 
        [and2_out4 X OUT V=0] 
        [or2_in3 X IN V=0] 
        [or2_out2 D IN V=0] 
        [or2_out3 X OUT V=0] 
        [not2_w2 X IN V=0] 
        [not2_out2 0 OUT V=1] 
        [or1_in2 X IN V=0] 
        [or1_in1 X IN V=0] 
        [or1_w2 1 OUT V=1] 
        [not1_w1 X IN V=0] 
        [not1_out1 X OUT V=0] 
        [and1_in2 X IN V=0] 
        [and1_in1 X IN V=0] 
        [and1_w1 X OUT V=0] 
        [input_in3 X OUT V=0] 
        [input_in2 1 OUT V=1] 
        [input_in1 X OUT V=0] 
        [output_out4 X IN V=0] 
        [output_out3 X IN V=0] 
        [output_out2 X IN V=0] 
        [output_out1 X IN V=0] 
[Msg32][Line:or2_out2 Val:D Dir:IN Visited: 0 Type:INT_WIRE] is an input line to the component
[Msg33] Corresponding output line : or2_out3
[Msg34] Checking or2_out2 to be justified or not
[Msg35] Checking or2_in3 to be justified or not
[Msg36] Justify or2_in3 inside Propagate. line.direction == IN The line : [Line:or2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
[Msg37] Justifying line : [Line:or2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 0
Here 33
[Msg38] Equalizing fanin/fanout values line : [Line:input_in3 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg39] Updating linelist with line : [Line:input_in3 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg40] Updating the maps 
[Msg41] Concluding. Reached PI line : [Line:input_in3 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg42] Equalizing fanin/fanout values line : [Line:or2_out3 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg43] Updating linelist with line : [Line:or2_out3 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg44] Updating the maps 
[Msg45] All i/p lines justified for or2_out3 to Propagate. The line : [Line:or2_out3 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg46] Current linelist status inside Propagate() after all input line justification        [and2_w2 X IN V=0] 
        [and2_in3 X IN V=0] 
        [and2_out4 X OUT V=0] 
        [or2_in3 X IN V=0] 
        [or2_out2 D IN V=0] 
        [or2_out3 D OUT V=0] 
        [not2_w2 X IN V=0] 
        [not2_out2 0 OUT V=1] 
        [or1_in2 X IN V=0] 
        [or1_in1 X IN V=0] 
        [or1_w2 1 OUT V=1] 
        [not1_w1 X IN V=0] 
        [not1_out1 X OUT V=0] 
        [and1_in2 X IN V=0] 
        [and1_in1 X IN V=0] 
        [and1_w1 X OUT V=0] 
        [input_in3 0 OUT V=1] 
        [input_in2 1 OUT V=1] 
        [input_in1 X OUT V=0] 
        [output_out4 X IN V=0] 
        [output_out3 X IN V=0] 
        [output_out2 X IN V=0] 
        [output_out1 X IN V=0] 
[Msg47] error_val :D and iv : 0
[Msg48] Input line : [Line:output_out3 Val:X Dir:IN Visited: 0 Type:PO] is propagated with val D (error_val^iv)
[Msg49] Propagating D for the line : output_out3
[Msg50] Updating linelist with line : [Line:output_out3 Val:D Dir:IN Visited: 0 Type:PO]
[Msg51] Updating the maps 
[Msg52] Updated linelist at this stage. - About to start  Propagate()
        [and2_w2 X IN V=0] 
        [and2_in3 X IN V=0] 
        [and2_out4 X OUT V=0] 
        [or2_in3 X IN V=0] 
        [or2_out2 D IN V=0] 
        [or2_out3 D OUT V=0] 
        [not2_w2 X IN V=0] 
        [not2_out2 0 OUT V=1] 
        [or1_in2 X IN V=0] 
        [or1_in1 X IN V=0] 
        [or1_w2 1 OUT V=1] 
        [not1_w1 X IN V=0] 
        [not1_out1 X OUT V=0] 
        [and1_in2 X IN V=0] 
        [and1_in1 X IN V=0] 
        [and1_w1 X OUT V=0] 
        [input_in3 0 OUT V=1] 
        [input_in2 1 OUT V=1] 
        [input_in1 X OUT V=0] 
        [output_out4 X IN V=0] 
        [output_out3 D IN V=0] 
        [output_out2 X IN V=0] 
        [output_out1 X IN V=0] 
[Msg53] Concluding. Reached PO line : [Line:output_out3 Val:D Dir:IN Visited: 0 Type:PO]
[Msg54] Current linelist status after Propagate()
        [Line:and2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_out4 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out2 Val:D Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out3 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not2_out2 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:or1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_w2 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:not1_w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not1_out1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:and1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_w1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:input_in3 Val:0 Dir:OUT Visited: 1 Type:PI]
        [Line:input_in2 Val:1 Dir:OUT Visited: 1 Type:PI]
        [Line:input_in1 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:output_out4 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out3 Val:D Dir:IN Visited: 0 Type:PO]
        [Line:output_out2 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO]

[Msg55] Updating linelist with line : [Line:or2_out2 Val:D Dir:IN Visited: 0 Type:INT_WIRE]
[Msg56] Updating the maps 
[Msg57] Current linelist status after pattern generation()
        [Line:and2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_out4 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out2 Val:D Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out3 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not2_out2 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:or1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_w2 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:not1_w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not1_out1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:and1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_w1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:input_in3 Val:0 Dir:OUT Visited: 1 Type:PI]
        [Line:input_in2 Val:1 Dir:OUT Visited: 1 Type:PI]
        [Line:input_in1 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:output_out4 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out3 Val:D Dir:IN Visited: 0 Type:PO]
        [Line:output_out2 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO]

[Msg] Printing PI patterns 
     input_in3 0
     input_in2 1
     input_in1 X
Here !!!
---------------------------------------------------------
---------------------------------------------------------
TG for line #5 SA-0. Fault #10
[Msg0] Initialzed all line values to X and isVisited = false
[Msg1] Updated line : or2_out2 from linelist to [Line:or2_out2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
[Msg2] Updating the maps 
[Msg] Printing PI patterns 
     input_in3 X
     input_in2 X
     input_in1 X
[Msg3] Current linelist status before Justify()
        [Line:and2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_out4 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out3 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not2_out2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_w2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not1_w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not1_out1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:and1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_w1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:input_in3 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:input_in2 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:input_in1 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:output_out4 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out3 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out2 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO]

[Msg4] Generating test patterns for line : [Line:or2_out2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
[Msg5] Justifying line : [Line:or2_out2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 1
Here 34
[Msg6] Equalizing fanin/fanout values line : [Line:not2_out2 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg7] One of the input lines of line : [Line:not2_out2 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE] to be justified
[Msg8] Trying line : [Line:not2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] to justify
[Msg9] Only [Line:not2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] of line : not2_out2 to be justified
[Msg10] Saving [Line:not2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] for future backtracking.
[Msg11] Justifying line : [Line:not2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 0
Here 35
[Msg12] Equalizing fanin/fanout values line : [Line:or1_w2 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg13] inval = 0] Justifying all input lines for the line : [Line:or1_w2 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg14] Following lines need to be justified. (Total 2 lines)
        [Line:or1_w2] -->  [Line:or1_in1] [Line:or1_in2]
[Msg15] Justifying line : [Line:or1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 0
Here 36
[Msg16] Equalizing fanin/fanout values line : [Line:input_in1 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg17] Updating linelist with line : [Line:input_in1 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg18] Updating the maps 
[Msg19] Concluding. Reached PI line : [Line:input_in1 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg20] Updating linelist with line : [Line:or1_w2 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg21] Updating the maps 
[Msg22] Justifying line : [Line:or1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 0
Here 37
[Msg23] Equalizing fanin/fanout values line : [Line:input_in2 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg24] Updating linelist with line : [Line:input_in2 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg25] Updating the maps 
[Msg26] Concluding. Reached PI line : [Line:input_in2 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg27] Updating linelist with line : [Line:or1_w2 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg28] Updating the maps 
[Msg29] Updating linelist with line : [Line:not2_out2 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg30] Updating the maps 
[Msg31] All lines justified 
[Msg32] Updating linelist with line : [Line:not2_out2 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg33] Updating the maps 
[Msg34] Current linelist status before Propagate() and after Justify()
        [Line:and2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_out4 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out3 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not2_out2 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:or1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_w2 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:not1_w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not1_out1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:and1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_w1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:input_in3 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:input_in2 Val:0 Dir:OUT Visited: 1 Type:PI]
        [Line:input_in1 Val:0 Dir:OUT Visited: 1 Type:PI]
        [Line:output_out4 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out3 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out2 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO]

[Msg35] Propagating Dbar for the line : or2_out2
[Msg36] Updating linelist with line : [Line:or2_out2 Val:Dbar Dir:IN Visited: 0 Type:INT_WIRE]
[Msg37] Updating the maps 
[Msg38] Updated linelist at this stage. - About to start  Propagate()
        [and2_w2 X IN V=0] 
        [and2_in3 X IN V=0] 
        [and2_out4 X OUT V=0] 
        [or2_in3 X IN V=0] 
        [or2_out2 Dbar IN V=0] 
        [or2_out3 X OUT V=0] 
        [not2_w2 X IN V=0] 
        [not2_out2 1 OUT V=1] 
        [or1_in2 X IN V=0] 
        [or1_in1 X IN V=0] 
        [or1_w2 0 OUT V=1] 
        [not1_w1 X IN V=0] 
        [not1_out1 X OUT V=0] 
        [and1_in2 X IN V=0] 
        [and1_in1 X IN V=0] 
        [and1_w1 X OUT V=0] 
        [input_in3 X OUT V=0] 
        [input_in2 0 OUT V=1] 
        [input_in1 0 OUT V=1] 
        [output_out4 X IN V=0] 
        [output_out3 X IN V=0] 
        [output_out2 X IN V=0] 
        [output_out1 X IN V=0] 
[Msg39][Line:or2_out2 Val:Dbar Dir:IN Visited: 0 Type:INT_WIRE] is an input line to the component
[Msg40] Corresponding output line : or2_out3
[Msg41] Checking or2_out2 to be justified or not
[Msg42] Checking or2_in3 to be justified or not
[Msg43] Justify or2_in3 inside Propagate. line.direction == IN The line : [Line:or2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
[Msg44] Justifying line : [Line:or2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 0
Here 38
[Msg45] Equalizing fanin/fanout values line : [Line:input_in3 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg46] Updating linelist with line : [Line:input_in3 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg47] Updating the maps 
[Msg48] Concluding. Reached PI line : [Line:input_in3 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg49] Equalizing fanin/fanout values line : [Line:or2_out3 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg50] Updating linelist with line : [Line:or2_out3 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg51] Updating the maps 
[Msg52] All i/p lines justified for or2_out3 to Propagate. The line : [Line:or2_out3 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg53] Current linelist status inside Propagate() after all input line justification        [and2_w2 X IN V=0] 
        [and2_in3 X IN V=0] 
        [and2_out4 X OUT V=0] 
        [or2_in3 X IN V=0] 
        [or2_out2 Dbar IN V=0] 
        [or2_out3 Dbar OUT V=0] 
        [not2_w2 X IN V=0] 
        [not2_out2 1 OUT V=1] 
        [or1_in2 X IN V=0] 
        [or1_in1 X IN V=0] 
        [or1_w2 0 OUT V=1] 
        [not1_w1 X IN V=0] 
        [not1_out1 X OUT V=0] 
        [and1_in2 X IN V=0] 
        [and1_in1 X IN V=0] 
        [and1_w1 X OUT V=0] 
        [input_in3 0 OUT V=1] 
        [input_in2 0 OUT V=1] 
        [input_in1 0 OUT V=1] 
        [output_out4 X IN V=0] 
        [output_out3 X IN V=0] 
        [output_out2 X IN V=0] 
        [output_out1 X IN V=0] 
[Msg54] error_val :Dbar and iv : 0
[Msg55] Input line : [Line:output_out3 Val:X Dir:IN Visited: 0 Type:PO] is propagated with val Dbar (error_val^iv)
[Msg56] Propagating Dbar for the line : output_out3
[Msg57] Updating linelist with line : [Line:output_out3 Val:Dbar Dir:IN Visited: 0 Type:PO]
[Msg58] Updating the maps 
[Msg59] Updated linelist at this stage. - About to start  Propagate()
        [and2_w2 X IN V=0] 
        [and2_in3 X IN V=0] 
        [and2_out4 X OUT V=0] 
        [or2_in3 X IN V=0] 
        [or2_out2 Dbar IN V=0] 
        [or2_out3 Dbar OUT V=0] 
        [not2_w2 X IN V=0] 
        [not2_out2 1 OUT V=1] 
        [or1_in2 X IN V=0] 
        [or1_in1 X IN V=0] 
        [or1_w2 0 OUT V=1] 
        [not1_w1 X IN V=0] 
        [not1_out1 X OUT V=0] 
        [and1_in2 X IN V=0] 
        [and1_in1 X IN V=0] 
        [and1_w1 X OUT V=0] 
        [input_in3 0 OUT V=1] 
        [input_in2 0 OUT V=1] 
        [input_in1 0 OUT V=1] 
        [output_out4 X IN V=0] 
        [output_out3 Dbar IN V=0] 
        [output_out2 X IN V=0] 
        [output_out1 X IN V=0] 
[Msg60] Concluding. Reached PO line : [Line:output_out3 Val:Dbar Dir:IN Visited: 0 Type:PO]
[Msg61] Current linelist status after Propagate()
        [Line:and2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_out4 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out2 Val:Dbar Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out3 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not2_out2 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:or1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_w2 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:not1_w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not1_out1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:and1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_w1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:input_in3 Val:0 Dir:OUT Visited: 1 Type:PI]
        [Line:input_in2 Val:0 Dir:OUT Visited: 1 Type:PI]
        [Line:input_in1 Val:0 Dir:OUT Visited: 1 Type:PI]
        [Line:output_out4 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out3 Val:Dbar Dir:IN Visited: 0 Type:PO]
        [Line:output_out2 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO]

[Msg62] Updating linelist with line : [Line:or2_out2 Val:Dbar Dir:IN Visited: 0 Type:INT_WIRE]
[Msg63] Updating the maps 
[Msg64] Current linelist status after pattern generation()
        [Line:and2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_out4 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out2 Val:Dbar Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out3 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not2_out2 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:or1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_w2 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:not1_w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not1_out1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:and1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_w1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:input_in3 Val:0 Dir:OUT Visited: 1 Type:PI]
        [Line:input_in2 Val:0 Dir:OUT Visited: 1 Type:PI]
        [Line:input_in1 Val:0 Dir:OUT Visited: 1 Type:PI]
        [Line:output_out4 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out3 Val:Dbar Dir:IN Visited: 0 Type:PO]
        [Line:output_out2 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO]

[Msg] Printing PI patterns 
     input_in3 0
     input_in2 0
     input_in1 0
---------------------------------------------------------
---------------------------------------------------------
TG for line #6 SA-1. Fault #11
[Msg0] Initialzed all line values to X and isVisited = false
[Msg1] Updated line : or2_out3 from linelist to [Line:or2_out3 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg2] Updating the maps 
[Msg] Printing PI patterns 
     input_in3 X
     input_in2 X
     input_in1 X
[Msg3] Current linelist status before Justify()
        [Line:and2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_out4 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out3 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not2_out2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_w2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not1_w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not1_out1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:and1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_w1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:input_in3 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:input_in2 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:input_in1 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:output_out4 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out3 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out2 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO]

[Msg4] Generating test patterns for line : [Line:or2_out3 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg5] Justifying line : [Line:or2_out3 Val:X Dir:OUT Visited: 0 Type:INT_WIRE] with value 0
Here 39
[Msg6] Equalizing fanin/fanout values line : [Line:or2_out3 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg7] inval = 0] Justifying all input lines for the line : [Line:or2_out3 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg8] Following lines need to be justified. (Total 2 lines)
        [Line:or2_out3] -->  [Line:or2_in3] [Line:or2_out2]
[Msg9] Justifying line : [Line:or2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 0
Here 40
[Msg10] Equalizing fanin/fanout values line : [Line:input_in3 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg11] Updating linelist with line : [Line:input_in3 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg12] Updating the maps 
[Msg13] Concluding. Reached PI line : [Line:input_in3 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg14] Updating linelist with line : [Line:or2_out3 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg15] Updating the maps 
[Msg16] Justifying line : [Line:or2_out2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 0
Here 41
[Msg17] Equalizing fanin/fanout values line : [Line:not2_out2 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg18] inval = 1] Justifying all input lines for the line : [Line:not2_out2 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg19] Following lines need to be justified. (Total 1 lines)
        [Line:not2_out2] -->  [Line:not2_w2]
[Msg20] Justifying line : [Line:not2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 1
Here 42
[Msg21] Equalizing fanin/fanout values line : [Line:or1_w2 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg22] One of the input lines of line : [Line:or1_w2 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE] to be justified
[Msg23] Trying line : [Line:or1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] to justify
[Msg24] Only [Line:or1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] of line : or1_w2 to be justified
[Msg25] Saving [Line:or1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] for future backtracking.
[Msg26] Justifying line : [Line:or1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 1
Here 43
[Msg27] Equalizing fanin/fanout values line : [Line:input_in1 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg28] Updating linelist with line : [Line:input_in1 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg29] Updating the maps 
[Msg30] Concluding. Reached PI line : [Line:input_in1 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg31] Updating linelist with line : [Line:or1_w2 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg32] Updating the maps 
[Msg33] Updating linelist with line : [Line:not2_out2 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg34] Updating the maps 
[Msg35] Updating linelist with line : [Line:or2_out3 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg36] Updating the maps 
[Msg37] All lines justified 
[Msg38] Updating linelist with line : [Line:or2_out3 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg39] Updating the maps 
[Msg40] Current linelist status before Propagate() and after Justify()
        [Line:and2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_out4 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out3 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:not2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not2_out2 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:or1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_w2 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:not1_w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not1_out1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:and1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_w1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:input_in3 Val:0 Dir:OUT Visited: 1 Type:PI]
        [Line:input_in2 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:input_in1 Val:1 Dir:OUT Visited: 1 Type:PI]
        [Line:output_out4 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out3 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out2 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO]

[Msg41] Propagating D for the line : or2_out3
[Msg42] Updating linelist with line : [Line:or2_out3 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg43] Updating the maps 
[Msg44] Updated linelist at this stage. - About to start  Propagate()
        [and2_w2 X IN V=0] 
        [and2_in3 X IN V=0] 
        [and2_out4 X OUT V=0] 
        [or2_in3 X IN V=0] 
        [or2_out2 X IN V=0] 
        [or2_out3 D OUT V=0] 
        [not2_w2 X IN V=0] 
        [not2_out2 0 OUT V=1] 
        [or1_in2 X IN V=0] 
        [or1_in1 X IN V=0] 
        [or1_w2 1 OUT V=1] 
        [not1_w1 X IN V=0] 
        [not1_out1 X OUT V=0] 
        [and1_in2 X IN V=0] 
        [and1_in1 X IN V=0] 
        [and1_w1 X OUT V=0] 
        [input_in3 0 OUT V=1] 
        [input_in2 X OUT V=0] 
        [input_in1 1 OUT V=1] 
        [output_out4 X IN V=0] 
        [output_out3 X IN V=0] 
        [output_out2 X IN V=0] 
        [output_out1 X IN V=0] 
[Msg45 Concluding. Reached PO line : [Line:output_out3 Val:X Dir:IN Visited: 0 Type:PO]
[Msg46] Current linelist status after Propagate()
        [Line:and2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_out4 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out3 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not2_out2 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:or1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_w2 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:not1_w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not1_out1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:and1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_w1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:input_in3 Val:0 Dir:OUT Visited: 1 Type:PI]
        [Line:input_in2 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:input_in1 Val:1 Dir:OUT Visited: 1 Type:PI]
        [Line:output_out4 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out3 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out2 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO]

[Msg47] Updating linelist with line : [Line:or2_out3 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg48] Updating the maps 
[Msg49] Current linelist status after pattern generation()
        [Line:and2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_out4 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out3 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not2_out2 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:or1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_w2 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:not1_w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not1_out1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:and1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_w1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:input_in3 Val:0 Dir:OUT Visited: 1 Type:PI]
        [Line:input_in2 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:input_in1 Val:1 Dir:OUT Visited: 1 Type:PI]
        [Line:output_out4 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out3 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out2 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO]

[Msg] Printing PI patterns 
     input_in3 0
     input_in2 X
     input_in1 1
Here !!!
---------------------------------------------------------
---------------------------------------------------------
TG for line #6 SA-0. Fault #12
[Msg0] Initialzed all line values to X and isVisited = false
[Msg1] Updated line : or2_out3 from linelist to [Line:or2_out3 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg2] Updating the maps 
[Msg] Printing PI patterns 
     input_in3 X
     input_in2 X
     input_in1 X
[Msg3] Current linelist status before Justify()
        [Line:and2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_out4 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out3 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not2_out2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_w2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not1_w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not1_out1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:and1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_w1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:input_in3 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:input_in2 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:input_in1 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:output_out4 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out3 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out2 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO]

[Msg4] Generating test patterns for line : [Line:or2_out3 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg5] Justifying line : [Line:or2_out3 Val:X Dir:OUT Visited: 0 Type:INT_WIRE] with value 1
Here 44
[Msg6] Equalizing fanin/fanout values line : [Line:or2_out3 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg7] One of the input lines of line : [Line:or2_out3 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE] to be justified
[Msg8] Trying line : [Line:or2_out2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] to justify
[Msg9] Only [Line:or2_out2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] of line : or2_out3 to be justified
[Msg10] Saving [Line:or2_out2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] for future backtracking.
[Msg11] Justifying line : [Line:or2_out2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 1
Here 45
[Msg12] Equalizing fanin/fanout values line : [Line:not2_out2 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg13] One of the input lines of line : [Line:not2_out2 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE] to be justified
[Msg14] Trying line : [Line:not2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] to justify
[Msg15] Only [Line:not2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] of line : not2_out2 to be justified
[Msg16] Saving [Line:not2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] for future backtracking.
[Msg17] Justifying line : [Line:not2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 0
Here 46
[Msg18] Equalizing fanin/fanout values line : [Line:or1_w2 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg19] inval = 0] Justifying all input lines for the line : [Line:or1_w2 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg20] Following lines need to be justified. (Total 2 lines)
        [Line:or1_w2] -->  [Line:or1_in1] [Line:or1_in2]
[Msg21] Justifying line : [Line:or1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 0
Here 47
[Msg22] Equalizing fanin/fanout values line : [Line:input_in1 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg23] Updating linelist with line : [Line:input_in1 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg24] Updating the maps 
[Msg25] Concluding. Reached PI line : [Line:input_in1 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg26] Updating linelist with line : [Line:or1_w2 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg27] Updating the maps 
[Msg28] Justifying line : [Line:or1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 0
Here 48
[Msg29] Equalizing fanin/fanout values line : [Line:input_in2 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg30] Updating linelist with line : [Line:input_in2 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg31] Updating the maps 
[Msg32] Concluding. Reached PI line : [Line:input_in2 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg33] Updating linelist with line : [Line:or1_w2 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg34] Updating the maps 
[Msg35] Updating linelist with line : [Line:not2_out2 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg36] Updating the maps 
[Msg37] Updating linelist with line : [Line:or2_out3 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg38] Updating the maps 
[Msg39] All lines justified 
[Msg40] Updating linelist with line : [Line:or2_out3 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg41] Updating the maps 
[Msg42] Current linelist status before Propagate() and after Justify()
        [Line:and2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_out4 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out3 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:not2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not2_out2 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:or1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_w2 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:not1_w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not1_out1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:and1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_w1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:input_in3 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:input_in2 Val:0 Dir:OUT Visited: 1 Type:PI]
        [Line:input_in1 Val:0 Dir:OUT Visited: 1 Type:PI]
        [Line:output_out4 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out3 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out2 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO]

[Msg43] Propagating Dbar for the line : or2_out3
[Msg44] Updating linelist with line : [Line:or2_out3 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg45] Updating the maps 
[Msg46] Updated linelist at this stage. - About to start  Propagate()
        [and2_w2 X IN V=0] 
        [and2_in3 X IN V=0] 
        [and2_out4 X OUT V=0] 
        [or2_in3 X IN V=0] 
        [or2_out2 X IN V=0] 
        [or2_out3 Dbar OUT V=0] 
        [not2_w2 X IN V=0] 
        [not2_out2 1 OUT V=1] 
        [or1_in2 X IN V=0] 
        [or1_in1 X IN V=0] 
        [or1_w2 0 OUT V=1] 
        [not1_w1 X IN V=0] 
        [not1_out1 X OUT V=0] 
        [and1_in2 X IN V=0] 
        [and1_in1 X IN V=0] 
        [and1_w1 X OUT V=0] 
        [input_in3 X OUT V=0] 
        [input_in2 0 OUT V=1] 
        [input_in1 0 OUT V=1] 
        [output_out4 X IN V=0] 
        [output_out3 X IN V=0] 
        [output_out2 X IN V=0] 
        [output_out1 X IN V=0] 
[Msg47 Concluding. Reached PO line : [Line:output_out3 Val:X Dir:IN Visited: 0 Type:PO]
[Msg48] Current linelist status after Propagate()
        [Line:and2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_out4 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out3 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not2_out2 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:or1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_w2 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:not1_w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not1_out1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:and1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_w1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:input_in3 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:input_in2 Val:0 Dir:OUT Visited: 1 Type:PI]
        [Line:input_in1 Val:0 Dir:OUT Visited: 1 Type:PI]
        [Line:output_out4 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out3 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out2 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO]

[Msg49] Updating linelist with line : [Line:or2_out3 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg50] Updating the maps 
[Msg51] Current linelist status after pattern generation()
        [Line:and2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_out4 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out3 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not2_out2 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:or1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_w2 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:not1_w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not1_out1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:and1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_w1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:input_in3 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:input_in2 Val:0 Dir:OUT Visited: 1 Type:PI]
        [Line:input_in1 Val:0 Dir:OUT Visited: 1 Type:PI]
        [Line:output_out4 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out3 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out2 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO]

[Msg] Printing PI patterns 
     input_in3 X
     input_in2 0
     input_in1 0
---------------------------------------------------------
---------------------------------------------------------
TG for line #7 SA-1. Fault #13
[Msg0] Initialzed all line values to X and isVisited = false
[Msg1] Updated line : not2_w2 from linelist to [Line:not2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
[Msg2] Updating the maps 
[Msg] Printing PI patterns 
     input_in3 X
     input_in2 X
     input_in1 X
[Msg3] Current linelist status before Justify()
        [Line:and2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_out4 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out3 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not2_out2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_w2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not1_w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not1_out1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:and1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_w1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:input_in3 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:input_in2 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:input_in1 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:output_out4 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out3 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out2 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO]

[Msg4] Generating test patterns for line : [Line:not2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
[Msg5] Justifying line : [Line:not2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 0
Here 49
[Msg6] Equalizing fanin/fanout values line : [Line:or1_w2 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg7] inval = 0] Justifying all input lines for the line : [Line:or1_w2 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg8] Following lines need to be justified. (Total 2 lines)
        [Line:or1_w2] -->  [Line:or1_in2] [Line:or1_in1]
[Msg9] Justifying line : [Line:or1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 0
Here 50
[Msg10] Equalizing fanin/fanout values line : [Line:input_in2 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg11] Updating linelist with line : [Line:input_in2 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg12] Updating the maps 
[Msg13] Concluding. Reached PI line : [Line:input_in2 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg14] Updating linelist with line : [Line:or1_w2 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg15] Updating the maps 
[Msg16] Justifying line : [Line:or1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 0
Here 51
[Msg17] Equalizing fanin/fanout values line : [Line:input_in1 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg18] Updating linelist with line : [Line:input_in1 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg19] Updating the maps 
[Msg20] Concluding. Reached PI line : [Line:input_in1 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg21] Updating linelist with line : [Line:or1_w2 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg22] Updating the maps 
[Msg23] All lines justified 
[Msg24] Updating linelist with line : [Line:or1_w2 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg25] Updating the maps 
[Msg26] Current linelist status before Propagate() and after Justify()
        [Line:and2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_out4 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out3 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not2_out2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_w2 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:not1_w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not1_out1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:and1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_w1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:input_in3 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:input_in2 Val:0 Dir:OUT Visited: 1 Type:PI]
        [Line:input_in1 Val:0 Dir:OUT Visited: 1 Type:PI]
        [Line:output_out4 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out3 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out2 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO]

[Msg27] Propagating D for the line : not2_w2
[Msg28] Updating linelist with line : [Line:not2_w2 Val:D Dir:IN Visited: 0 Type:INT_WIRE]
[Msg29] Updating the maps 
[Msg30] Updated linelist at this stage. - About to start  Propagate()
        [and2_w2 X IN V=0] 
        [and2_in3 X IN V=0] 
        [and2_out4 X OUT V=0] 
        [or2_in3 X IN V=0] 
        [or2_out2 X IN V=0] 
        [or2_out3 X OUT V=0] 
        [not2_w2 D IN V=0] 
        [not2_out2 X OUT V=0] 
        [or1_in2 X IN V=0] 
        [or1_in1 X IN V=0] 
        [or1_w2 0 OUT V=1] 
        [not1_w1 X IN V=0] 
        [not1_out1 X OUT V=0] 
        [and1_in2 X IN V=0] 
        [and1_in1 X IN V=0] 
        [and1_w1 X OUT V=0] 
        [input_in3 X OUT V=0] 
        [input_in2 0 OUT V=1] 
        [input_in1 0 OUT V=1] 
        [output_out4 X IN V=0] 
        [output_out3 X IN V=0] 
        [output_out2 X IN V=0] 
        [output_out1 X IN V=0] 
[Msg31][Line:not2_w2 Val:D Dir:IN Visited: 0 Type:INT_WIRE] is an input line to the component
[Msg32] Corresponding output line : not2_out2
[Msg33] Checking not2_w2 to be justified or not
[Msg34] Equalizing fanin/fanout values line : [Line:not2_out2 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg35] Updating linelist with line : [Line:not2_out2 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg36] Updating the maps 
[Msg37] All i/p lines justified for not2_out2 to Propagate. The line : [Line:not2_out2 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg38] Current linelist status inside Propagate() after all input line justification        [and2_w2 X IN V=0] 
        [and2_in3 X IN V=0] 
        [and2_out4 X OUT V=0] 
        [or2_in3 X IN V=0] 
        [or2_out2 X IN V=0] 
        [or2_out3 X OUT V=0] 
        [not2_w2 D IN V=0] 
        [not2_out2 D OUT V=0] 
        [or1_in2 X IN V=0] 
        [or1_in1 X IN V=0] 
        [or1_w2 0 OUT V=1] 
        [not1_w1 X IN V=0] 
        [not1_out1 X OUT V=0] 
        [and1_in2 X IN V=0] 
        [and1_in1 X IN V=0] 
        [and1_w1 X OUT V=0] 
        [input_in3 X OUT V=0] 
        [input_in2 0 OUT V=1] 
        [input_in1 0 OUT V=1] 
        [output_out4 X IN V=0] 
        [output_out3 X IN V=0] 
        [output_out2 X IN V=0] 
        [output_out1 X IN V=0] 
[Msg39] error_val :D and iv : 1
[Msg40] Input line : [Line:output_out2 Val:X Dir:IN Visited: 0 Type:PO] is propagated with val Dbar (error_val^iv)
[Msg41] Propagating Dbar for the line : output_out2
[Msg42] Updating linelist with line : [Line:output_out2 Val:Dbar Dir:IN Visited: 0 Type:PO]
[Msg43] Updating the maps 
[Msg44] Updated linelist at this stage. - About to start  Propagate()
        [and2_w2 X IN V=0] 
        [and2_in3 X IN V=0] 
        [and2_out4 X OUT V=0] 
        [or2_in3 X IN V=0] 
        [or2_out2 X IN V=0] 
        [or2_out3 X OUT V=0] 
        [not2_w2 D IN V=0] 
        [not2_out2 D OUT V=0] 
        [or1_in2 X IN V=0] 
        [or1_in1 X IN V=0] 
        [or1_w2 0 OUT V=1] 
        [not1_w1 X IN V=0] 
        [not1_out1 X OUT V=0] 
        [and1_in2 X IN V=0] 
        [and1_in1 X IN V=0] 
        [and1_w1 X OUT V=0] 
        [input_in3 X OUT V=0] 
        [input_in2 0 OUT V=1] 
        [input_in1 0 OUT V=1] 
        [output_out4 X IN V=0] 
        [output_out3 X IN V=0] 
        [output_out2 Dbar IN V=0] 
        [output_out1 X IN V=0] 
[Msg45] Concluding. Reached PO line : [Line:output_out2 Val:Dbar Dir:IN Visited: 0 Type:PO]
[Msg46] Current linelist status after Propagate()
        [Line:and2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_out4 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out3 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not2_w2 Val:D Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not2_out2 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_w2 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:not1_w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not1_out1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:and1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_w1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:input_in3 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:input_in2 Val:0 Dir:OUT Visited: 1 Type:PI]
        [Line:input_in1 Val:0 Dir:OUT Visited: 1 Type:PI]
        [Line:output_out4 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out3 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out2 Val:Dbar Dir:IN Visited: 0 Type:PO]
        [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO]

[Msg47] Updating linelist with line : [Line:not2_w2 Val:D Dir:IN Visited: 0 Type:INT_WIRE]
[Msg48] Updating the maps 
[Msg49] Current linelist status after pattern generation()
        [Line:and2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_out4 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out3 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not2_w2 Val:D Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not2_out2 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_w2 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:not1_w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not1_out1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:and1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_w1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:input_in3 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:input_in2 Val:0 Dir:OUT Visited: 1 Type:PI]
        [Line:input_in1 Val:0 Dir:OUT Visited: 1 Type:PI]
        [Line:output_out4 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out3 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out2 Val:Dbar Dir:IN Visited: 0 Type:PO]
        [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO]

[Msg] Printing PI patterns 
     input_in3 X
     input_in2 0
     input_in1 0
Here !!!
---------------------------------------------------------
---------------------------------------------------------
TG for line #7 SA-0. Fault #14
[Msg0] Initialzed all line values to X and isVisited = false
[Msg1] Updated line : not2_w2 from linelist to [Line:not2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
[Msg2] Updating the maps 
[Msg] Printing PI patterns 
     input_in3 X
     input_in2 X
     input_in1 X
[Msg3] Current linelist status before Justify()
        [Line:and2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_out4 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out3 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not2_out2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_w2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not1_w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not1_out1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:and1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_w1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:input_in3 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:input_in2 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:input_in1 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:output_out4 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out3 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out2 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO]

[Msg4] Generating test patterns for line : [Line:not2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
[Msg5] Justifying line : [Line:not2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 1
Here 52
[Msg6] Equalizing fanin/fanout values line : [Line:or1_w2 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg7] One of the input lines of line : [Line:or1_w2 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE] to be justified
[Msg8] Trying line : [Line:or1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] to justify
[Msg9] Only [Line:or1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] of line : or1_w2 to be justified
[Msg10] Saving [Line:or1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] for future backtracking.
[Msg11] Justifying line : [Line:or1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 1
Here 53
[Msg12] Equalizing fanin/fanout values line : [Line:input_in1 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg13] Updating linelist with line : [Line:input_in1 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg14] Updating the maps 
[Msg15] Concluding. Reached PI line : [Line:input_in1 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg16] Updating linelist with line : [Line:or1_w2 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg17] Updating the maps 
[Msg18] All lines justified 
[Msg19] Updating linelist with line : [Line:or1_w2 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg20] Updating the maps 
[Msg21] Current linelist status before Propagate() and after Justify()
        [Line:and2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_out4 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out3 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not2_out2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_w2 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:not1_w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not1_out1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:and1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_w1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:input_in3 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:input_in2 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:input_in1 Val:1 Dir:OUT Visited: 1 Type:PI]
        [Line:output_out4 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out3 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out2 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO]

[Msg22] Propagating Dbar for the line : not2_w2
[Msg23] Updating linelist with line : [Line:not2_w2 Val:Dbar Dir:IN Visited: 0 Type:INT_WIRE]
[Msg24] Updating the maps 
[Msg25] Updated linelist at this stage. - About to start  Propagate()
        [and2_w2 X IN V=0] 
        [and2_in3 X IN V=0] 
        [and2_out4 X OUT V=0] 
        [or2_in3 X IN V=0] 
        [or2_out2 X IN V=0] 
        [or2_out3 X OUT V=0] 
        [not2_w2 Dbar IN V=0] 
        [not2_out2 X OUT V=0] 
        [or1_in2 X IN V=0] 
        [or1_in1 X IN V=0] 
        [or1_w2 1 OUT V=1] 
        [not1_w1 X IN V=0] 
        [not1_out1 X OUT V=0] 
        [and1_in2 X IN V=0] 
        [and1_in1 X IN V=0] 
        [and1_w1 X OUT V=0] 
        [input_in3 X OUT V=0] 
        [input_in2 X OUT V=0] 
        [input_in1 1 OUT V=1] 
        [output_out4 X IN V=0] 
        [output_out3 X IN V=0] 
        [output_out2 X IN V=0] 
        [output_out1 X IN V=0] 
[Msg26][Line:not2_w2 Val:Dbar Dir:IN Visited: 0 Type:INT_WIRE] is an input line to the component
[Msg27] Corresponding output line : not2_out2
[Msg28] Checking not2_w2 to be justified or not
[Msg29] Equalizing fanin/fanout values line : [Line:not2_out2 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg30] Updating linelist with line : [Line:not2_out2 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg31] Updating the maps 
[Msg32] All i/p lines justified for not2_out2 to Propagate. The line : [Line:not2_out2 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg33] Current linelist status inside Propagate() after all input line justification        [and2_w2 X IN V=0] 
        [and2_in3 X IN V=0] 
        [and2_out4 X OUT V=0] 
        [or2_in3 X IN V=0] 
        [or2_out2 X IN V=0] 
        [or2_out3 X OUT V=0] 
        [not2_w2 Dbar IN V=0] 
        [not2_out2 Dbar OUT V=0] 
        [or1_in2 X IN V=0] 
        [or1_in1 X IN V=0] 
        [or1_w2 1 OUT V=1] 
        [not1_w1 X IN V=0] 
        [not1_out1 X OUT V=0] 
        [and1_in2 X IN V=0] 
        [and1_in1 X IN V=0] 
        [and1_w1 X OUT V=0] 
        [input_in3 X OUT V=0] 
        [input_in2 X OUT V=0] 
        [input_in1 1 OUT V=1] 
        [output_out4 X IN V=0] 
        [output_out3 X IN V=0] 
        [output_out2 X IN V=0] 
        [output_out1 X IN V=0] 
[Msg34] error_val :Dbar and iv : 1
[Msg35] Input line : [Line:or2_out2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] is propagated with val D (error_val^iv)
[Msg36] Propagating D for the line : or2_out2
[Msg37] Updating linelist with line : [Line:or2_out2 Val:D Dir:IN Visited: 0 Type:INT_WIRE]
[Msg38] Updating the maps 
[Msg39] Updated linelist at this stage. - About to start  Propagate()
        [and2_w2 X IN V=0] 
        [and2_in3 X IN V=0] 
        [and2_out4 X OUT V=0] 
        [or2_in3 X IN V=0] 
        [or2_out2 D IN V=0] 
        [or2_out3 X OUT V=0] 
        [not2_w2 Dbar IN V=0] 
        [not2_out2 Dbar OUT V=0] 
        [or1_in2 X IN V=0] 
        [or1_in1 X IN V=0] 
        [or1_w2 1 OUT V=1] 
        [not1_w1 X IN V=0] 
        [not1_out1 X OUT V=0] 
        [and1_in2 X IN V=0] 
        [and1_in1 X IN V=0] 
        [and1_w1 X OUT V=0] 
        [input_in3 X OUT V=0] 
        [input_in2 X OUT V=0] 
        [input_in1 1 OUT V=1] 
        [output_out4 X IN V=0] 
        [output_out3 X IN V=0] 
        [output_out2 X IN V=0] 
        [output_out1 X IN V=0] 
[Msg40][Line:or2_out2 Val:D Dir:IN Visited: 0 Type:INT_WIRE] is an input line to the component
[Msg41] Corresponding output line : or2_out3
[Msg42] Checking or2_out2 to be justified or not
[Msg43] Checking or2_in3 to be justified or not
[Msg44] Justify or2_in3 inside Propagate. line.direction == IN The line : [Line:or2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
[Msg45] Justifying line : [Line:or2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 0
Here 54
[Msg46] Equalizing fanin/fanout values line : [Line:input_in3 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg47] Updating linelist with line : [Line:input_in3 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg48] Updating the maps 
[Msg49] Concluding. Reached PI line : [Line:input_in3 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg50] Equalizing fanin/fanout values line : [Line:or2_out3 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg51] Updating linelist with line : [Line:or2_out3 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg52] Updating the maps 
[Msg53] All i/p lines justified for or2_out3 to Propagate. The line : [Line:or2_out3 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg54] Current linelist status inside Propagate() after all input line justification        [and2_w2 X IN V=0] 
        [and2_in3 X IN V=0] 
        [and2_out4 X OUT V=0] 
        [or2_in3 X IN V=0] 
        [or2_out2 D IN V=0] 
        [or2_out3 D OUT V=0] 
        [not2_w2 Dbar IN V=0] 
        [not2_out2 Dbar OUT V=0] 
        [or1_in2 X IN V=0] 
        [or1_in1 X IN V=0] 
        [or1_w2 1 OUT V=1] 
        [not1_w1 X IN V=0] 
        [not1_out1 X OUT V=0] 
        [and1_in2 X IN V=0] 
        [and1_in1 X IN V=0] 
        [and1_w1 X OUT V=0] 
        [input_in3 0 OUT V=1] 
        [input_in2 X OUT V=0] 
        [input_in1 1 OUT V=1] 
        [output_out4 X IN V=0] 
        [output_out3 X IN V=0] 
        [output_out2 X IN V=0] 
        [output_out1 X IN V=0] 
[Msg55] error_val :D and iv : 0
[Msg56] Input line : [Line:output_out3 Val:X Dir:IN Visited: 0 Type:PO] is propagated with val D (error_val^iv)
[Msg57] Propagating D for the line : output_out3
[Msg58] Updating linelist with line : [Line:output_out3 Val:D Dir:IN Visited: 0 Type:PO]
[Msg59] Updating the maps 
[Msg60] Updated linelist at this stage. - About to start  Propagate()
        [and2_w2 X IN V=0] 
        [and2_in3 X IN V=0] 
        [and2_out4 X OUT V=0] 
        [or2_in3 X IN V=0] 
        [or2_out2 D IN V=0] 
        [or2_out3 D OUT V=0] 
        [not2_w2 Dbar IN V=0] 
        [not2_out2 Dbar OUT V=0] 
        [or1_in2 X IN V=0] 
        [or1_in1 X IN V=0] 
        [or1_w2 1 OUT V=1] 
        [not1_w1 X IN V=0] 
        [not1_out1 X OUT V=0] 
        [and1_in2 X IN V=0] 
        [and1_in1 X IN V=0] 
        [and1_w1 X OUT V=0] 
        [input_in3 0 OUT V=1] 
        [input_in2 X OUT V=0] 
        [input_in1 1 OUT V=1] 
        [output_out4 X IN V=0] 
        [output_out3 D IN V=0] 
        [output_out2 X IN V=0] 
        [output_out1 X IN V=0] 
[Msg61] Concluding. Reached PO line : [Line:output_out3 Val:D Dir:IN Visited: 0 Type:PO]
[Msg62] Current linelist status after Propagate()
        [Line:and2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_out4 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out2 Val:D Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out3 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not2_w2 Val:Dbar Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not2_out2 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_w2 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:not1_w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not1_out1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:and1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_w1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:input_in3 Val:0 Dir:OUT Visited: 1 Type:PI]
        [Line:input_in2 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:input_in1 Val:1 Dir:OUT Visited: 1 Type:PI]
        [Line:output_out4 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out3 Val:D Dir:IN Visited: 0 Type:PO]
        [Line:output_out2 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO]

[Msg63] Updating linelist with line : [Line:not2_w2 Val:Dbar Dir:IN Visited: 0 Type:INT_WIRE]
[Msg64] Updating the maps 
[Msg65] Current linelist status after pattern generation()
        [Line:and2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_out4 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out2 Val:D Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out3 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not2_w2 Val:Dbar Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not2_out2 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_w2 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:not1_w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not1_out1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:and1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_w1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:input_in3 Val:0 Dir:OUT Visited: 1 Type:PI]
        [Line:input_in2 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:input_in1 Val:1 Dir:OUT Visited: 1 Type:PI]
        [Line:output_out4 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out3 Val:D Dir:IN Visited: 0 Type:PO]
        [Line:output_out2 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO]

[Msg] Printing PI patterns 
     input_in3 0
     input_in2 X
     input_in1 1
---------------------------------------------------------
---------------------------------------------------------
TG for line #8 SA-1. Fault #15
[Msg0] Initialzed all line values to X and isVisited = false
[Msg1] Updated line : not2_out2 from linelist to [Line:not2_out2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg2] Updating the maps 
[Msg] Printing PI patterns 
     input_in3 X
     input_in2 X
     input_in1 X
[Msg3] Current linelist status before Justify()
        [Line:and2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_out4 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out3 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not2_out2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_w2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not1_w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not1_out1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:and1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_w1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:input_in3 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:input_in2 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:input_in1 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:output_out4 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out3 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out2 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO]

[Msg4] Generating test patterns for line : [Line:not2_out2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg5] Justifying line : [Line:not2_out2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE] with value 0
Here 55
[Msg6] Equalizing fanin/fanout values line : [Line:not2_out2 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg7] inval = 1] Justifying all input lines for the line : [Line:not2_out2 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg8] Following lines need to be justified. (Total 1 lines)
        [Line:not2_out2] -->  [Line:not2_w2]
[Msg9] Justifying line : [Line:not2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 1
Here 56
[Msg10] Equalizing fanin/fanout values line : [Line:or1_w2 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg11] One of the input lines of line : [Line:or1_w2 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE] to be justified
[Msg12] Trying line : [Line:or1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] to justify
[Msg13] Only [Line:or1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] of line : or1_w2 to be justified
[Msg14] Saving [Line:or1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] for future backtracking.
[Msg15] Justifying line : [Line:or1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 1
Here 57
[Msg16] Equalizing fanin/fanout values line : [Line:input_in2 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg17] Updating linelist with line : [Line:input_in2 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg18] Updating the maps 
[Msg19] Concluding. Reached PI line : [Line:input_in2 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg20] Updating linelist with line : [Line:or1_w2 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg21] Updating the maps 
[Msg22] Updating linelist with line : [Line:not2_out2 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg23] Updating the maps 
[Msg24] All lines justified 
[Msg25] Updating linelist with line : [Line:not2_out2 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg26] Updating the maps 
[Msg27] Current linelist status before Propagate() and after Justify()
        [Line:and2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_out4 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out3 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not2_out2 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:or1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_w2 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:not1_w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not1_out1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:and1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_w1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:input_in3 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:input_in2 Val:1 Dir:OUT Visited: 1 Type:PI]
        [Line:input_in1 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:output_out4 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out3 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out2 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO]

[Msg28] Propagating D for the line : not2_out2
[Msg29] Updating linelist with line : [Line:not2_out2 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg30] Updating the maps 
[Msg31] Updated linelist at this stage. - About to start  Propagate()
        [and2_w2 X IN V=0] 
        [and2_in3 X IN V=0] 
        [and2_out4 X OUT V=0] 
        [or2_in3 X IN V=0] 
        [or2_out2 X IN V=0] 
        [or2_out3 X OUT V=0] 
        [not2_w2 X IN V=0] 
        [not2_out2 D OUT V=0] 
        [or1_in2 X IN V=0] 
        [or1_in1 X IN V=0] 
        [or1_w2 1 OUT V=1] 
        [not1_w1 X IN V=0] 
        [not1_out1 X OUT V=0] 
        [and1_in2 X IN V=0] 
        [and1_in1 X IN V=0] 
        [and1_w1 X OUT V=0] 
        [input_in3 X OUT V=0] 
        [input_in2 1 OUT V=1] 
        [input_in1 X OUT V=0] 
        [output_out4 X IN V=0] 
        [output_out3 X IN V=0] 
        [output_out2 X IN V=0] 
        [output_out1 X IN V=0] 
[Msg32 Concluding. Reached PO line : [Line:output_out2 Val:X Dir:IN Visited: 0 Type:PO]
[Msg33] Current linelist status after Propagate()
        [Line:and2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_out4 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out3 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not2_out2 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_w2 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:not1_w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not1_out1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:and1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_w1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:input_in3 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:input_in2 Val:1 Dir:OUT Visited: 1 Type:PI]
        [Line:input_in1 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:output_out4 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out3 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out2 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO]

[Msg34] Updating linelist with line : [Line:not2_out2 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg35] Updating the maps 
[Msg36] Current linelist status after pattern generation()
        [Line:and2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_out4 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out3 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not2_out2 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_w2 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:not1_w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not1_out1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:and1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_w1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:input_in3 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:input_in2 Val:1 Dir:OUT Visited: 1 Type:PI]
        [Line:input_in1 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:output_out4 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out3 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out2 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO]

[Msg] Printing PI patterns 
     input_in3 X
     input_in2 1
     input_in1 X
Here !!!
---------------------------------------------------------
---------------------------------------------------------
TG for line #8 SA-0. Fault #16
[Msg0] Initialzed all line values to X and isVisited = false
[Msg1] Updated line : not2_out2 from linelist to [Line:not2_out2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg2] Updating the maps 
[Msg] Printing PI patterns 
     input_in3 X
     input_in2 X
     input_in1 X
[Msg3] Current linelist status before Justify()
        [Line:and2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_out4 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out3 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not2_out2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_w2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not1_w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not1_out1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:and1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_w1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:input_in3 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:input_in2 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:input_in1 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:output_out4 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out3 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out2 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO]

[Msg4] Generating test patterns for line : [Line:not2_out2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg5] Justifying line : [Line:not2_out2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE] with value 1
Here 58
[Msg6] Equalizing fanin/fanout values line : [Line:not2_out2 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg7] One of the input lines of line : [Line:not2_out2 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE] to be justified
[Msg8] Trying line : [Line:not2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] to justify
[Msg9] Only [Line:not2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] of line : not2_out2 to be justified
[Msg10] Saving [Line:not2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] for future backtracking.
[Msg11] Justifying line : [Line:not2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 0
Here 59
[Msg12] Equalizing fanin/fanout values line : [Line:or1_w2 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg13] inval = 0] Justifying all input lines for the line : [Line:or1_w2 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg14] Following lines need to be justified. (Total 2 lines)
        [Line:or1_w2] -->  [Line:or1_in1] [Line:or1_in2]
[Msg15] Justifying line : [Line:or1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 0
Here 60
[Msg16] Equalizing fanin/fanout values line : [Line:input_in1 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg17] Updating linelist with line : [Line:input_in1 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg18] Updating the maps 
[Msg19] Concluding. Reached PI line : [Line:input_in1 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg20] Updating linelist with line : [Line:or1_w2 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg21] Updating the maps 
[Msg22] Justifying line : [Line:or1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 0
Here 61
[Msg23] Equalizing fanin/fanout values line : [Line:input_in2 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg24] Updating linelist with line : [Line:input_in2 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg25] Updating the maps 
[Msg26] Concluding. Reached PI line : [Line:input_in2 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg27] Updating linelist with line : [Line:or1_w2 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg28] Updating the maps 
[Msg29] Updating linelist with line : [Line:not2_out2 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg30] Updating the maps 
[Msg31] All lines justified 
[Msg32] Updating linelist with line : [Line:not2_out2 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg33] Updating the maps 
[Msg34] Current linelist status before Propagate() and after Justify()
        [Line:and2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_out4 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out3 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not2_out2 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:or1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_w2 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:not1_w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not1_out1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:and1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_w1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:input_in3 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:input_in2 Val:0 Dir:OUT Visited: 1 Type:PI]
        [Line:input_in1 Val:0 Dir:OUT Visited: 1 Type:PI]
        [Line:output_out4 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out3 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out2 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO]

[Msg35] Propagating Dbar for the line : not2_out2
[Msg36] Updating linelist with line : [Line:not2_out2 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg37] Updating the maps 
[Msg38] Updated linelist at this stage. - About to start  Propagate()
        [and2_w2 X IN V=0] 
        [and2_in3 X IN V=0] 
        [and2_out4 X OUT V=0] 
        [or2_in3 X IN V=0] 
        [or2_out2 X IN V=0] 
        [or2_out3 X OUT V=0] 
        [not2_w2 X IN V=0] 
        [not2_out2 Dbar OUT V=0] 
        [or1_in2 X IN V=0] 
        [or1_in1 X IN V=0] 
        [or1_w2 0 OUT V=1] 
        [not1_w1 X IN V=0] 
        [not1_out1 X OUT V=0] 
        [and1_in2 X IN V=0] 
        [and1_in1 X IN V=0] 
        [and1_w1 X OUT V=0] 
        [input_in3 X OUT V=0] 
        [input_in2 0 OUT V=1] 
        [input_in1 0 OUT V=1] 
        [output_out4 X IN V=0] 
        [output_out3 X IN V=0] 
        [output_out2 X IN V=0] 
        [output_out1 X IN V=0] 
[Msg39 Concluding. Reached PO line : [Line:output_out2 Val:X Dir:IN Visited: 0 Type:PO]
[Msg40] Current linelist status after Propagate()
        [Line:and2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_out4 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out3 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not2_out2 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_w2 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:not1_w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not1_out1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:and1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_w1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:input_in3 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:input_in2 Val:0 Dir:OUT Visited: 1 Type:PI]
        [Line:input_in1 Val:0 Dir:OUT Visited: 1 Type:PI]
        [Line:output_out4 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out3 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out2 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO]

[Msg41] Updating linelist with line : [Line:not2_out2 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg42] Updating the maps 
[Msg43] Current linelist status after pattern generation()
        [Line:and2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_out4 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out3 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not2_out2 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_w2 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:not1_w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not1_out1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:and1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_w1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:input_in3 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:input_in2 Val:0 Dir:OUT Visited: 1 Type:PI]
        [Line:input_in1 Val:0 Dir:OUT Visited: 1 Type:PI]
        [Line:output_out4 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out3 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out2 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO]

[Msg] Printing PI patterns 
     input_in3 X
     input_in2 0
     input_in1 0
---------------------------------------------------------
---------------------------------------------------------
TG for line #9 SA-1. Fault #17
[Msg0] Initialzed all line values to X and isVisited = false
[Msg1] Updated line : or1_in2 from linelist to [Line:or1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
[Msg2] Updating the maps 
[Msg] Printing PI patterns 
     input_in3 X
     input_in2 X
     input_in1 X
[Msg3] Current linelist status before Justify()
        [Line:and2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_out4 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out3 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not2_out2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_w2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not1_w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not1_out1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:and1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_w1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:input_in3 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:input_in2 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:input_in1 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:output_out4 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out3 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out2 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO]

[Msg4] Generating test patterns for line : [Line:or1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
[Msg5] Justifying line : [Line:or1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 0
Here 62
[Msg6] Equalizing fanin/fanout values line : [Line:input_in2 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg7] Updating linelist with line : [Line:input_in2 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg8] Updating the maps 
[Msg9] Concluding. Reached PI line : [Line:input_in2 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg10] All lines justified 
[Msg11] Updating linelist with line : [Line:input_in2 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg12] Updating the maps 
[Msg13] Current linelist status before Propagate() and after Justify()
        [Line:and2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_out4 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out3 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not2_out2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_w2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not1_w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not1_out1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:and1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_w1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:input_in3 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:input_in2 Val:0 Dir:OUT Visited: 1 Type:PI]
        [Line:input_in1 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:output_out4 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out3 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out2 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO]

[Msg14] Propagating D for the line : or1_in2
[Msg15] Updating linelist with line : [Line:or1_in2 Val:D Dir:IN Visited: 0 Type:INT_WIRE]
[Msg16] Updating the maps 
[Msg17] Updated linelist at this stage. - About to start  Propagate()
        [and2_w2 X IN V=0] 
        [and2_in3 X IN V=0] 
        [and2_out4 X OUT V=0] 
        [or2_in3 X IN V=0] 
        [or2_out2 X IN V=0] 
        [or2_out3 X OUT V=0] 
        [not2_w2 X IN V=0] 
        [not2_out2 X OUT V=0] 
        [or1_in2 D IN V=0] 
        [or1_in1 X IN V=0] 
        [or1_w2 X OUT V=0] 
        [not1_w1 X IN V=0] 
        [not1_out1 X OUT V=0] 
        [and1_in2 X IN V=0] 
        [and1_in1 X IN V=0] 
        [and1_w1 X OUT V=0] 
        [input_in3 X OUT V=0] 
        [input_in2 0 OUT V=1] 
        [input_in1 X OUT V=0] 
        [output_out4 X IN V=0] 
        [output_out3 X IN V=0] 
        [output_out2 X IN V=0] 
        [output_out1 X IN V=0] 
[Msg18][Line:or1_in2 Val:D Dir:IN Visited: 0 Type:INT_WIRE] is an input line to the component
[Msg19] Corresponding output line : or1_w2
[Msg20] Checking or1_in2 to be justified or not
[Msg21] Checking or1_in1 to be justified or not
[Msg22] Justify or1_in1 inside Propagate. line.direction == IN The line : [Line:or1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
[Msg23] Justifying line : [Line:or1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 0
Here 63
[Msg24] Equalizing fanin/fanout values line : [Line:input_in1 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg25] Updating linelist with line : [Line:input_in1 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg26] Updating the maps 
[Msg27] Concluding. Reached PI line : [Line:input_in1 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg28] Equalizing fanin/fanout values line : [Line:or1_w2 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg29] Updating linelist with line : [Line:or1_w2 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg30] Updating the maps 
[Msg31] All i/p lines justified for or1_w2 to Propagate. The line : [Line:or1_w2 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg32] Current linelist status inside Propagate() after all input line justification        [and2_w2 X IN V=0] 
        [and2_in3 X IN V=0] 
        [and2_out4 X OUT V=0] 
        [or2_in3 X IN V=0] 
        [or2_out2 X IN V=0] 
        [or2_out3 X OUT V=0] 
        [not2_w2 X IN V=0] 
        [not2_out2 X OUT V=0] 
        [or1_in2 D IN V=0] 
        [or1_in1 X IN V=0] 
        [or1_w2 D OUT V=0] 
        [not1_w1 X IN V=0] 
        [not1_out1 X OUT V=0] 
        [and1_in2 X IN V=0] 
        [and1_in1 X IN V=0] 
        [and1_w1 X OUT V=0] 
        [input_in3 X OUT V=0] 
        [input_in2 0 OUT V=1] 
        [input_in1 0 OUT V=1] 
        [output_out4 X IN V=0] 
        [output_out3 X IN V=0] 
        [output_out2 X IN V=0] 
        [output_out1 X IN V=0] 
[Msg33] error_val :D and iv : 0
[Msg34] Input line : [Line:and2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] is propagated with val D (error_val^iv)
[Msg35] Propagating D for the line : and2_w2
[Msg36] Updating linelist with line : [Line:and2_w2 Val:D Dir:IN Visited: 0 Type:INT_WIRE]
[Msg37] Updating the maps 
[Msg38] Updated linelist at this stage. - About to start  Propagate()
        [and2_w2 D IN V=0] 
        [and2_in3 X IN V=0] 
        [and2_out4 X OUT V=0] 
        [or2_in3 X IN V=0] 
        [or2_out2 X IN V=0] 
        [or2_out3 X OUT V=0] 
        [not2_w2 X IN V=0] 
        [not2_out2 X OUT V=0] 
        [or1_in2 D IN V=0] 
        [or1_in1 X IN V=0] 
        [or1_w2 D OUT V=0] 
        [not1_w1 X IN V=0] 
        [not1_out1 X OUT V=0] 
        [and1_in2 X IN V=0] 
        [and1_in1 X IN V=0] 
        [and1_w1 X OUT V=0] 
        [input_in3 X OUT V=0] 
        [input_in2 0 OUT V=1] 
        [input_in1 0 OUT V=1] 
        [output_out4 X IN V=0] 
        [output_out3 X IN V=0] 
        [output_out2 X IN V=0] 
        [output_out1 X IN V=0] 
[Msg39][Line:and2_w2 Val:D Dir:IN Visited: 0 Type:INT_WIRE] is an input line to the component
[Msg40] Corresponding output line : and2_out4
[Msg41] Checking and2_w2 to be justified or not
[Msg42] Checking and2_in3 to be justified or not
[Msg43] Justify and2_in3 inside Propagate. line.direction == IN The line : [Line:and2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
[Msg44] Justifying line : [Line:and2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 1
Here 64
[Msg45] Equalizing fanin/fanout values line : [Line:input_in3 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg46] Updating linelist with line : [Line:input_in3 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg47] Updating the maps 
[Msg48] Concluding. Reached PI line : [Line:input_in3 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg49] Equalizing fanin/fanout values line : [Line:and2_out4 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg50] Updating linelist with line : [Line:and2_out4 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg51] Updating the maps 
[Msg52] All i/p lines justified for and2_out4 to Propagate. The line : [Line:and2_out4 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg53] Current linelist status inside Propagate() after all input line justification        [and2_w2 D IN V=0] 
        [and2_in3 X IN V=0] 
        [and2_out4 D OUT V=0] 
        [or2_in3 X IN V=0] 
        [or2_out2 X IN V=0] 
        [or2_out3 X OUT V=0] 
        [not2_w2 X IN V=0] 
        [not2_out2 X OUT V=0] 
        [or1_in2 D IN V=0] 
        [or1_in1 X IN V=0] 
        [or1_w2 D OUT V=0] 
        [not1_w1 X IN V=0] 
        [not1_out1 X OUT V=0] 
        [and1_in2 X IN V=0] 
        [and1_in1 X IN V=0] 
        [and1_w1 X OUT V=0] 
        [input_in3 1 OUT V=1] 
        [input_in2 0 OUT V=1] 
        [input_in1 0 OUT V=1] 
        [output_out4 X IN V=0] 
        [output_out3 X IN V=0] 
        [output_out2 X IN V=0] 
        [output_out1 X IN V=0] 
[Msg54] error_val :D and iv : 0
[Msg55] Input line : [Line:output_out4 Val:X Dir:IN Visited: 0 Type:PO] is propagated with val D (error_val^iv)
[Msg56] Propagating D for the line : output_out4
[Msg57] Updating linelist with line : [Line:output_out4 Val:D Dir:IN Visited: 0 Type:PO]
[Msg58] Updating the maps 
[Msg59] Updated linelist at this stage. - About to start  Propagate()
        [and2_w2 D IN V=0] 
        [and2_in3 X IN V=0] 
        [and2_out4 D OUT V=0] 
        [or2_in3 X IN V=0] 
        [or2_out2 X IN V=0] 
        [or2_out3 X OUT V=0] 
        [not2_w2 X IN V=0] 
        [not2_out2 X OUT V=0] 
        [or1_in2 D IN V=0] 
        [or1_in1 X IN V=0] 
        [or1_w2 D OUT V=0] 
        [not1_w1 X IN V=0] 
        [not1_out1 X OUT V=0] 
        [and1_in2 X IN V=0] 
        [and1_in1 X IN V=0] 
        [and1_w1 X OUT V=0] 
        [input_in3 1 OUT V=1] 
        [input_in2 0 OUT V=1] 
        [input_in1 0 OUT V=1] 
        [output_out4 D IN V=0] 
        [output_out3 X IN V=0] 
        [output_out2 X IN V=0] 
        [output_out1 X IN V=0] 
[Msg60] Concluding. Reached PO line : [Line:output_out4 Val:D Dir:IN Visited: 0 Type:PO]
[Msg61] Current linelist status after Propagate()
        [Line:and2_w2 Val:D Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_out4 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out3 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not2_out2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or1_in2 Val:D Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_w2 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not1_w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not1_out1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:and1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_w1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:input_in3 Val:1 Dir:OUT Visited: 1 Type:PI]
        [Line:input_in2 Val:0 Dir:OUT Visited: 1 Type:PI]
        [Line:input_in1 Val:0 Dir:OUT Visited: 1 Type:PI]
        [Line:output_out4 Val:D Dir:IN Visited: 0 Type:PO]
        [Line:output_out3 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out2 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO]

[Msg62] Updating linelist with line : [Line:or1_in2 Val:D Dir:IN Visited: 0 Type:INT_WIRE]
[Msg63] Updating the maps 
[Msg64] Current linelist status after pattern generation()
        [Line:and2_w2 Val:D Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_out4 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out3 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not2_out2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or1_in2 Val:D Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_w2 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not1_w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not1_out1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:and1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_w1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:input_in3 Val:1 Dir:OUT Visited: 1 Type:PI]
        [Line:input_in2 Val:0 Dir:OUT Visited: 1 Type:PI]
        [Line:input_in1 Val:0 Dir:OUT Visited: 1 Type:PI]
        [Line:output_out4 Val:D Dir:IN Visited: 0 Type:PO]
        [Line:output_out3 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out2 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO]

[Msg] Printing PI patterns 
     input_in3 1
     input_in2 0
     input_in1 0
Here !!!
---------------------------------------------------------
---------------------------------------------------------
TG for line #9 SA-0. Fault #18
[Msg0] Initialzed all line values to X and isVisited = false
[Msg1] Updated line : or1_in2 from linelist to [Line:or1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
[Msg2] Updating the maps 
[Msg] Printing PI patterns 
     input_in3 X
     input_in2 X
     input_in1 X
[Msg3] Current linelist status before Justify()
        [Line:and2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_out4 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out3 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not2_out2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_w2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not1_w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not1_out1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:and1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_w1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:input_in3 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:input_in2 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:input_in1 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:output_out4 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out3 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out2 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO]

[Msg4] Generating test patterns for line : [Line:or1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
[Msg5] Justifying line : [Line:or1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 1
Here 65
[Msg6] Equalizing fanin/fanout values line : [Line:input_in2 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg7] Updating linelist with line : [Line:input_in2 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg8] Updating the maps 
[Msg9] Concluding. Reached PI line : [Line:input_in2 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg10] All lines justified 
[Msg11] Updating linelist with line : [Line:input_in2 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg12] Updating the maps 
[Msg13] Current linelist status before Propagate() and after Justify()
        [Line:and2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_out4 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out3 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not2_out2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_w2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not1_w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not1_out1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:and1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_w1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:input_in3 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:input_in2 Val:1 Dir:OUT Visited: 1 Type:PI]
        [Line:input_in1 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:output_out4 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out3 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out2 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO]

[Msg14] Propagating Dbar for the line : or1_in2
[Msg15] Updating linelist with line : [Line:or1_in2 Val:Dbar Dir:IN Visited: 0 Type:INT_WIRE]
[Msg16] Updating the maps 
[Msg17] Updated linelist at this stage. - About to start  Propagate()
        [and2_w2 X IN V=0] 
        [and2_in3 X IN V=0] 
        [and2_out4 X OUT V=0] 
        [or2_in3 X IN V=0] 
        [or2_out2 X IN V=0] 
        [or2_out3 X OUT V=0] 
        [not2_w2 X IN V=0] 
        [not2_out2 X OUT V=0] 
        [or1_in2 Dbar IN V=0] 
        [or1_in1 X IN V=0] 
        [or1_w2 X OUT V=0] 
        [not1_w1 X IN V=0] 
        [not1_out1 X OUT V=0] 
        [and1_in2 X IN V=0] 
        [and1_in1 X IN V=0] 
        [and1_w1 X OUT V=0] 
        [input_in3 X OUT V=0] 
        [input_in2 1 OUT V=1] 
        [input_in1 X OUT V=0] 
        [output_out4 X IN V=0] 
        [output_out3 X IN V=0] 
        [output_out2 X IN V=0] 
        [output_out1 X IN V=0] 
[Msg18][Line:or1_in2 Val:Dbar Dir:IN Visited: 0 Type:INT_WIRE] is an input line to the component
[Msg19] Corresponding output line : or1_w2
[Msg20] Checking or1_in1 to be justified or not
[Msg21] Justify or1_in1 inside Propagate. line.direction == IN The line : [Line:or1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
[Msg22] Justifying line : [Line:or1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 0
Here 66
[Msg23] Equalizing fanin/fanout values line : [Line:input_in1 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg24] Updating linelist with line : [Line:input_in1 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg25] Updating the maps 
[Msg26] Concluding. Reached PI line : [Line:input_in1 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg27] Checking or1_in2 to be justified or not
[Msg28] Equalizing fanin/fanout values line : [Line:or1_w2 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg29] Updating linelist with line : [Line:or1_w2 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg30] Updating the maps 
[Msg31] All i/p lines justified for or1_w2 to Propagate. The line : [Line:or1_w2 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg32] Current linelist status inside Propagate() after all input line justification        [and2_w2 X IN V=0] 
        [and2_in3 X IN V=0] 
        [and2_out4 X OUT V=0] 
        [or2_in3 X IN V=0] 
        [or2_out2 X IN V=0] 
        [or2_out3 X OUT V=0] 
        [not2_w2 X IN V=0] 
        [not2_out2 X OUT V=0] 
        [or1_in2 Dbar IN V=0] 
        [or1_in1 X IN V=0] 
        [or1_w2 Dbar OUT V=0] 
        [not1_w1 X IN V=0] 
        [not1_out1 X OUT V=0] 
        [and1_in2 X IN V=0] 
        [and1_in1 X IN V=0] 
        [and1_w1 X OUT V=0] 
        [input_in3 X OUT V=0] 
        [input_in2 1 OUT V=1] 
        [input_in1 0 OUT V=1] 
        [output_out4 X IN V=0] 
        [output_out3 X IN V=0] 
        [output_out2 X IN V=0] 
        [output_out1 X IN V=0] 
[Msg33] error_val :Dbar and iv : 0
[Msg34] Input line : [Line:and2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] is propagated with val Dbar (error_val^iv)
[Msg35] Propagating Dbar for the line : and2_w2
[Msg36] Updating linelist with line : [Line:and2_w2 Val:Dbar Dir:IN Visited: 0 Type:INT_WIRE]
[Msg37] Updating the maps 
[Msg38] Updated linelist at this stage. - About to start  Propagate()
        [and2_w2 Dbar IN V=0] 
        [and2_in3 X IN V=0] 
        [and2_out4 X OUT V=0] 
        [or2_in3 X IN V=0] 
        [or2_out2 X IN V=0] 
        [or2_out3 X OUT V=0] 
        [not2_w2 X IN V=0] 
        [not2_out2 X OUT V=0] 
        [or1_in2 Dbar IN V=0] 
        [or1_in1 X IN V=0] 
        [or1_w2 Dbar OUT V=0] 
        [not1_w1 X IN V=0] 
        [not1_out1 X OUT V=0] 
        [and1_in2 X IN V=0] 
        [and1_in1 X IN V=0] 
        [and1_w1 X OUT V=0] 
        [input_in3 X OUT V=0] 
        [input_in2 1 OUT V=1] 
        [input_in1 0 OUT V=1] 
        [output_out4 X IN V=0] 
        [output_out3 X IN V=0] 
        [output_out2 X IN V=0] 
        [output_out1 X IN V=0] 
[Msg39][Line:and2_w2 Val:Dbar Dir:IN Visited: 0 Type:INT_WIRE] is an input line to the component
[Msg40] Corresponding output line : and2_out4
[Msg41] Checking and2_in3 to be justified or not
[Msg42] Justify and2_in3 inside Propagate. line.direction == IN The line : [Line:and2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
[Msg43] Justifying line : [Line:and2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 1
Here 67
[Msg44] Equalizing fanin/fanout values line : [Line:input_in3 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg45] Updating linelist with line : [Line:input_in3 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg46] Updating the maps 
[Msg47] Concluding. Reached PI line : [Line:input_in3 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg48] Checking and2_w2 to be justified or not
[Msg49] Equalizing fanin/fanout values line : [Line:and2_out4 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg50] Updating linelist with line : [Line:and2_out4 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg51] Updating the maps 
[Msg52] All i/p lines justified for and2_out4 to Propagate. The line : [Line:and2_out4 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg53] Current linelist status inside Propagate() after all input line justification        [and2_w2 Dbar IN V=0] 
        [and2_in3 X IN V=0] 
        [and2_out4 Dbar OUT V=0] 
        [or2_in3 X IN V=0] 
        [or2_out2 X IN V=0] 
        [or2_out3 X OUT V=0] 
        [not2_w2 X IN V=0] 
        [not2_out2 X OUT V=0] 
        [or1_in2 Dbar IN V=0] 
        [or1_in1 X IN V=0] 
        [or1_w2 Dbar OUT V=0] 
        [not1_w1 X IN V=0] 
        [not1_out1 X OUT V=0] 
        [and1_in2 X IN V=0] 
        [and1_in1 X IN V=0] 
        [and1_w1 X OUT V=0] 
        [input_in3 1 OUT V=1] 
        [input_in2 1 OUT V=1] 
        [input_in1 0 OUT V=1] 
        [output_out4 X IN V=0] 
        [output_out3 X IN V=0] 
        [output_out2 X IN V=0] 
        [output_out1 X IN V=0] 
[Msg54] error_val :Dbar and iv : 0
[Msg55] Input line : [Line:output_out4 Val:X Dir:IN Visited: 0 Type:PO] is propagated with val Dbar (error_val^iv)
[Msg56] Propagating Dbar for the line : output_out4
[Msg57] Updating linelist with line : [Line:output_out4 Val:Dbar Dir:IN Visited: 0 Type:PO]
[Msg58] Updating the maps 
[Msg59] Updated linelist at this stage. - About to start  Propagate()
        [and2_w2 Dbar IN V=0] 
        [and2_in3 X IN V=0] 
        [and2_out4 Dbar OUT V=0] 
        [or2_in3 X IN V=0] 
        [or2_out2 X IN V=0] 
        [or2_out3 X OUT V=0] 
        [not2_w2 X IN V=0] 
        [not2_out2 X OUT V=0] 
        [or1_in2 Dbar IN V=0] 
        [or1_in1 X IN V=0] 
        [or1_w2 Dbar OUT V=0] 
        [not1_w1 X IN V=0] 
        [not1_out1 X OUT V=0] 
        [and1_in2 X IN V=0] 
        [and1_in1 X IN V=0] 
        [and1_w1 X OUT V=0] 
        [input_in3 1 OUT V=1] 
        [input_in2 1 OUT V=1] 
        [input_in1 0 OUT V=1] 
        [output_out4 Dbar IN V=0] 
        [output_out3 X IN V=0] 
        [output_out2 X IN V=0] 
        [output_out1 X IN V=0] 
[Msg60] Concluding. Reached PO line : [Line:output_out4 Val:Dbar Dir:IN Visited: 0 Type:PO]
[Msg61] Current linelist status after Propagate()
        [Line:and2_w2 Val:Dbar Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_out4 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out3 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not2_out2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or1_in2 Val:Dbar Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_w2 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not1_w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not1_out1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:and1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_w1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:input_in3 Val:1 Dir:OUT Visited: 1 Type:PI]
        [Line:input_in2 Val:1 Dir:OUT Visited: 1 Type:PI]
        [Line:input_in1 Val:0 Dir:OUT Visited: 1 Type:PI]
        [Line:output_out4 Val:Dbar Dir:IN Visited: 0 Type:PO]
        [Line:output_out3 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out2 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO]

[Msg62] Updating linelist with line : [Line:or1_in2 Val:Dbar Dir:IN Visited: 0 Type:INT_WIRE]
[Msg63] Updating the maps 
[Msg64] Current linelist status after pattern generation()
        [Line:and2_w2 Val:Dbar Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_out4 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out3 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not2_out2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or1_in2 Val:Dbar Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_w2 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not1_w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not1_out1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:and1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_w1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:input_in3 Val:1 Dir:OUT Visited: 1 Type:PI]
        [Line:input_in2 Val:1 Dir:OUT Visited: 1 Type:PI]
        [Line:input_in1 Val:0 Dir:OUT Visited: 1 Type:PI]
        [Line:output_out4 Val:Dbar Dir:IN Visited: 0 Type:PO]
        [Line:output_out3 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out2 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO]

[Msg] Printing PI patterns 
     input_in3 1
     input_in2 1
     input_in1 0
---------------------------------------------------------
---------------------------------------------------------
TG for line #10 SA-1. Fault #19
[Msg0] Initialzed all line values to X and isVisited = false
[Msg1] Updated line : or1_in1 from linelist to [Line:or1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
[Msg2] Updating the maps 
[Msg] Printing PI patterns 
     input_in3 X
     input_in2 X
     input_in1 X
[Msg3] Current linelist status before Justify()
        [Line:and2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_out4 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out3 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not2_out2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_w2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not1_w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not1_out1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:and1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_w1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:input_in3 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:input_in2 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:input_in1 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:output_out4 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out3 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out2 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO]

[Msg4] Generating test patterns for line : [Line:or1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
[Msg5] Justifying line : [Line:or1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 0
Here 68
[Msg6] Equalizing fanin/fanout values line : [Line:input_in1 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg7] Updating linelist with line : [Line:input_in1 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg8] Updating the maps 
[Msg9] Concluding. Reached PI line : [Line:input_in1 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg10] All lines justified 
[Msg11] Updating linelist with line : [Line:input_in1 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg12] Updating the maps 
[Msg13] Current linelist status before Propagate() and after Justify()
        [Line:and2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_out4 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out3 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not2_out2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_w2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not1_w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not1_out1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:and1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_w1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:input_in3 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:input_in2 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:input_in1 Val:0 Dir:OUT Visited: 1 Type:PI]
        [Line:output_out4 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out3 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out2 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO]

[Msg14] Propagating D for the line : or1_in1
[Msg15] Updating linelist with line : [Line:or1_in1 Val:D Dir:IN Visited: 0 Type:INT_WIRE]
[Msg16] Updating the maps 
[Msg17] Updated linelist at this stage. - About to start  Propagate()
        [and2_w2 X IN V=0] 
        [and2_in3 X IN V=0] 
        [and2_out4 X OUT V=0] 
        [or2_in3 X IN V=0] 
        [or2_out2 X IN V=0] 
        [or2_out3 X OUT V=0] 
        [not2_w2 X IN V=0] 
        [not2_out2 X OUT V=0] 
        [or1_in2 X IN V=0] 
        [or1_in1 D IN V=0] 
        [or1_w2 X OUT V=0] 
        [not1_w1 X IN V=0] 
        [not1_out1 X OUT V=0] 
        [and1_in2 X IN V=0] 
        [and1_in1 X IN V=0] 
        [and1_w1 X OUT V=0] 
        [input_in3 X OUT V=0] 
        [input_in2 X OUT V=0] 
        [input_in1 0 OUT V=1] 
        [output_out4 X IN V=0] 
        [output_out3 X IN V=0] 
        [output_out2 X IN V=0] 
        [output_out1 X IN V=0] 
[Msg18][Line:or1_in1 Val:D Dir:IN Visited: 0 Type:INT_WIRE] is an input line to the component
[Msg19] Corresponding output line : or1_w2
[Msg20] Checking or1_in2 to be justified or not
[Msg21] Justify or1_in2 inside Propagate. line.direction == IN The line : [Line:or1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
[Msg22] Justifying line : [Line:or1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 0
Here 69
[Msg23] Equalizing fanin/fanout values line : [Line:input_in2 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg24] Updating linelist with line : [Line:input_in2 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg25] Updating the maps 
[Msg26] Concluding. Reached PI line : [Line:input_in2 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg27] Checking or1_in1 to be justified or not
[Msg28] Equalizing fanin/fanout values line : [Line:or1_w2 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg29] Updating linelist with line : [Line:or1_w2 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg30] Updating the maps 
[Msg31] All i/p lines justified for or1_w2 to Propagate. The line : [Line:or1_w2 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg32] Current linelist status inside Propagate() after all input line justification        [and2_w2 X IN V=0] 
        [and2_in3 X IN V=0] 
        [and2_out4 X OUT V=0] 
        [or2_in3 X IN V=0] 
        [or2_out2 X IN V=0] 
        [or2_out3 X OUT V=0] 
        [not2_w2 X IN V=0] 
        [not2_out2 X OUT V=0] 
        [or1_in2 X IN V=0] 
        [or1_in1 D IN V=0] 
        [or1_w2 D OUT V=0] 
        [not1_w1 X IN V=0] 
        [not1_out1 X OUT V=0] 
        [and1_in2 X IN V=0] 
        [and1_in1 X IN V=0] 
        [and1_w1 X OUT V=0] 
        [input_in3 X OUT V=0] 
        [input_in2 0 OUT V=1] 
        [input_in1 0 OUT V=1] 
        [output_out4 X IN V=0] 
        [output_out3 X IN V=0] 
        [output_out2 X IN V=0] 
        [output_out1 X IN V=0] 
[Msg33] error_val :D and iv : 0
[Msg34] Input line : [Line:and2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] is propagated with val D (error_val^iv)
[Msg35] Propagating D for the line : and2_w2
[Msg36] Updating linelist with line : [Line:and2_w2 Val:D Dir:IN Visited: 0 Type:INT_WIRE]
[Msg37] Updating the maps 
[Msg38] Updated linelist at this stage. - About to start  Propagate()
        [and2_w2 D IN V=0] 
        [and2_in3 X IN V=0] 
        [and2_out4 X OUT V=0] 
        [or2_in3 X IN V=0] 
        [or2_out2 X IN V=0] 
        [or2_out3 X OUT V=0] 
        [not2_w2 X IN V=0] 
        [not2_out2 X OUT V=0] 
        [or1_in2 X IN V=0] 
        [or1_in1 D IN V=0] 
        [or1_w2 D OUT V=0] 
        [not1_w1 X IN V=0] 
        [not1_out1 X OUT V=0] 
        [and1_in2 X IN V=0] 
        [and1_in1 X IN V=0] 
        [and1_w1 X OUT V=0] 
        [input_in3 X OUT V=0] 
        [input_in2 0 OUT V=1] 
        [input_in1 0 OUT V=1] 
        [output_out4 X IN V=0] 
        [output_out3 X IN V=0] 
        [output_out2 X IN V=0] 
        [output_out1 X IN V=0] 
[Msg39][Line:and2_w2 Val:D Dir:IN Visited: 0 Type:INT_WIRE] is an input line to the component
[Msg40] Corresponding output line : and2_out4
[Msg41] Checking and2_w2 to be justified or not
[Msg42] Checking and2_in3 to be justified or not
[Msg43] Justify and2_in3 inside Propagate. line.direction == IN The line : [Line:and2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
[Msg44] Justifying line : [Line:and2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 1
Here 70
[Msg45] Equalizing fanin/fanout values line : [Line:input_in3 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg46] Updating linelist with line : [Line:input_in3 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg47] Updating the maps 
[Msg48] Concluding. Reached PI line : [Line:input_in3 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg49] Equalizing fanin/fanout values line : [Line:and2_out4 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg50] Updating linelist with line : [Line:and2_out4 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg51] Updating the maps 
[Msg52] All i/p lines justified for and2_out4 to Propagate. The line : [Line:and2_out4 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg53] Current linelist status inside Propagate() after all input line justification        [and2_w2 D IN V=0] 
        [and2_in3 X IN V=0] 
        [and2_out4 D OUT V=0] 
        [or2_in3 X IN V=0] 
        [or2_out2 X IN V=0] 
        [or2_out3 X OUT V=0] 
        [not2_w2 X IN V=0] 
        [not2_out2 X OUT V=0] 
        [or1_in2 X IN V=0] 
        [or1_in1 D IN V=0] 
        [or1_w2 D OUT V=0] 
        [not1_w1 X IN V=0] 
        [not1_out1 X OUT V=0] 
        [and1_in2 X IN V=0] 
        [and1_in1 X IN V=0] 
        [and1_w1 X OUT V=0] 
        [input_in3 1 OUT V=1] 
        [input_in2 0 OUT V=1] 
        [input_in1 0 OUT V=1] 
        [output_out4 X IN V=0] 
        [output_out3 X IN V=0] 
        [output_out2 X IN V=0] 
        [output_out1 X IN V=0] 
[Msg54] error_val :D and iv : 0
[Msg55] Input line : [Line:output_out4 Val:X Dir:IN Visited: 0 Type:PO] is propagated with val D (error_val^iv)
[Msg56] Propagating D for the line : output_out4
[Msg57] Updating linelist with line : [Line:output_out4 Val:D Dir:IN Visited: 0 Type:PO]
[Msg58] Updating the maps 
[Msg59] Updated linelist at this stage. - About to start  Propagate()
        [and2_w2 D IN V=0] 
        [and2_in3 X IN V=0] 
        [and2_out4 D OUT V=0] 
        [or2_in3 X IN V=0] 
        [or2_out2 X IN V=0] 
        [or2_out3 X OUT V=0] 
        [not2_w2 X IN V=0] 
        [not2_out2 X OUT V=0] 
        [or1_in2 X IN V=0] 
        [or1_in1 D IN V=0] 
        [or1_w2 D OUT V=0] 
        [not1_w1 X IN V=0] 
        [not1_out1 X OUT V=0] 
        [and1_in2 X IN V=0] 
        [and1_in1 X IN V=0] 
        [and1_w1 X OUT V=0] 
        [input_in3 1 OUT V=1] 
        [input_in2 0 OUT V=1] 
        [input_in1 0 OUT V=1] 
        [output_out4 D IN V=0] 
        [output_out3 X IN V=0] 
        [output_out2 X IN V=0] 
        [output_out1 X IN V=0] 
[Msg60] Concluding. Reached PO line : [Line:output_out4 Val:D Dir:IN Visited: 0 Type:PO]
[Msg61] Current linelist status after Propagate()
        [Line:and2_w2 Val:D Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_out4 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out3 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not2_out2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_in1 Val:D Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_w2 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not1_w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not1_out1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:and1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_w1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:input_in3 Val:1 Dir:OUT Visited: 1 Type:PI]
        [Line:input_in2 Val:0 Dir:OUT Visited: 1 Type:PI]
        [Line:input_in1 Val:0 Dir:OUT Visited: 1 Type:PI]
        [Line:output_out4 Val:D Dir:IN Visited: 0 Type:PO]
        [Line:output_out3 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out2 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO]

[Msg62] Updating linelist with line : [Line:or1_in1 Val:D Dir:IN Visited: 0 Type:INT_WIRE]
[Msg63] Updating the maps 
[Msg64] Current linelist status after pattern generation()
        [Line:and2_w2 Val:D Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_out4 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out3 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not2_out2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_in1 Val:D Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_w2 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not1_w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not1_out1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:and1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_w1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:input_in3 Val:1 Dir:OUT Visited: 1 Type:PI]
        [Line:input_in2 Val:0 Dir:OUT Visited: 1 Type:PI]
        [Line:input_in1 Val:0 Dir:OUT Visited: 1 Type:PI]
        [Line:output_out4 Val:D Dir:IN Visited: 0 Type:PO]
        [Line:output_out3 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out2 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO]

[Msg] Printing PI patterns 
     input_in3 1
     input_in2 0
     input_in1 0
Here !!!
---------------------------------------------------------
---------------------------------------------------------
TG for line #10 SA-0. Fault #20
[Msg0] Initialzed all line values to X and isVisited = false
[Msg1] Updated line : or1_in1 from linelist to [Line:or1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
[Msg2] Updating the maps 
[Msg] Printing PI patterns 
     input_in3 X
     input_in2 X
     input_in1 X
[Msg3] Current linelist status before Justify()
        [Line:and2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_out4 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out3 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not2_out2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_w2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not1_w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not1_out1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:and1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_w1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:input_in3 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:input_in2 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:input_in1 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:output_out4 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out3 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out2 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO]

[Msg4] Generating test patterns for line : [Line:or1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
[Msg5] Justifying line : [Line:or1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 1
Here 71
[Msg6] Equalizing fanin/fanout values line : [Line:input_in1 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg7] Updating linelist with line : [Line:input_in1 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg8] Updating the maps 
[Msg9] Concluding. Reached PI line : [Line:input_in1 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg10] All lines justified 
[Msg11] Updating linelist with line : [Line:input_in1 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg12] Updating the maps 
[Msg13] Current linelist status before Propagate() and after Justify()
        [Line:and2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_out4 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out3 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not2_out2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_w2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not1_w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not1_out1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:and1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_w1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:input_in3 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:input_in2 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:input_in1 Val:1 Dir:OUT Visited: 1 Type:PI]
        [Line:output_out4 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out3 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out2 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO]

[Msg14] Propagating Dbar for the line : or1_in1
[Msg15] Updating linelist with line : [Line:or1_in1 Val:Dbar Dir:IN Visited: 0 Type:INT_WIRE]
[Msg16] Updating the maps 
[Msg17] Updated linelist at this stage. - About to start  Propagate()
        [and2_w2 X IN V=0] 
        [and2_in3 X IN V=0] 
        [and2_out4 X OUT V=0] 
        [or2_in3 X IN V=0] 
        [or2_out2 X IN V=0] 
        [or2_out3 X OUT V=0] 
        [not2_w2 X IN V=0] 
        [not2_out2 X OUT V=0] 
        [or1_in2 X IN V=0] 
        [or1_in1 Dbar IN V=0] 
        [or1_w2 X OUT V=0] 
        [not1_w1 X IN V=0] 
        [not1_out1 X OUT V=0] 
        [and1_in2 X IN V=0] 
        [and1_in1 X IN V=0] 
        [and1_w1 X OUT V=0] 
        [input_in3 X OUT V=0] 
        [input_in2 X OUT V=0] 
        [input_in1 1 OUT V=1] 
        [output_out4 X IN V=0] 
        [output_out3 X IN V=0] 
        [output_out2 X IN V=0] 
        [output_out1 X IN V=0] 
[Msg18][Line:or1_in1 Val:Dbar Dir:IN Visited: 0 Type:INT_WIRE] is an input line to the component
[Msg19] Corresponding output line : or1_w2
[Msg20] Checking or1_in1 to be justified or not
[Msg21] Checking or1_in2 to be justified or not
[Msg22] Justify or1_in2 inside Propagate. line.direction == IN The line : [Line:or1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
[Msg23] Justifying line : [Line:or1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 0
Here 72
[Msg24] Equalizing fanin/fanout values line : [Line:input_in2 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg25] Updating linelist with line : [Line:input_in2 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg26] Updating the maps 
[Msg27] Concluding. Reached PI line : [Line:input_in2 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg28] Equalizing fanin/fanout values line : [Line:or1_w2 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg29] Updating linelist with line : [Line:or1_w2 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg30] Updating the maps 
[Msg31] All i/p lines justified for or1_w2 to Propagate. The line : [Line:or1_w2 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg32] Current linelist status inside Propagate() after all input line justification        [and2_w2 X IN V=0] 
        [and2_in3 X IN V=0] 
        [and2_out4 X OUT V=0] 
        [or2_in3 X IN V=0] 
        [or2_out2 X IN V=0] 
        [or2_out3 X OUT V=0] 
        [not2_w2 X IN V=0] 
        [not2_out2 X OUT V=0] 
        [or1_in2 X IN V=0] 
        [or1_in1 Dbar IN V=0] 
        [or1_w2 Dbar OUT V=0] 
        [not1_w1 X IN V=0] 
        [not1_out1 X OUT V=0] 
        [and1_in2 X IN V=0] 
        [and1_in1 X IN V=0] 
        [and1_w1 X OUT V=0] 
        [input_in3 X OUT V=0] 
        [input_in2 0 OUT V=1] 
        [input_in1 1 OUT V=1] 
        [output_out4 X IN V=0] 
        [output_out3 X IN V=0] 
        [output_out2 X IN V=0] 
        [output_out1 X IN V=0] 
[Msg33] error_val :Dbar and iv : 0
[Msg34] Input line : [Line:and2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] is propagated with val Dbar (error_val^iv)
[Msg35] Propagating Dbar for the line : and2_w2
[Msg36] Updating linelist with line : [Line:and2_w2 Val:Dbar Dir:IN Visited: 0 Type:INT_WIRE]
[Msg37] Updating the maps 
[Msg38] Updated linelist at this stage. - About to start  Propagate()
        [and2_w2 Dbar IN V=0] 
        [and2_in3 X IN V=0] 
        [and2_out4 X OUT V=0] 
        [or2_in3 X IN V=0] 
        [or2_out2 X IN V=0] 
        [or2_out3 X OUT V=0] 
        [not2_w2 X IN V=0] 
        [not2_out2 X OUT V=0] 
        [or1_in2 X IN V=0] 
        [or1_in1 Dbar IN V=0] 
        [or1_w2 Dbar OUT V=0] 
        [not1_w1 X IN V=0] 
        [not1_out1 X OUT V=0] 
        [and1_in2 X IN V=0] 
        [and1_in1 X IN V=0] 
        [and1_w1 X OUT V=0] 
        [input_in3 X OUT V=0] 
        [input_in2 0 OUT V=1] 
        [input_in1 1 OUT V=1] 
        [output_out4 X IN V=0] 
        [output_out3 X IN V=0] 
        [output_out2 X IN V=0] 
        [output_out1 X IN V=0] 
[Msg39][Line:and2_w2 Val:Dbar Dir:IN Visited: 0 Type:INT_WIRE] is an input line to the component
[Msg40] Corresponding output line : and2_out4
[Msg41] Checking and2_in3 to be justified or not
[Msg42] Justify and2_in3 inside Propagate. line.direction == IN The line : [Line:and2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
[Msg43] Justifying line : [Line:and2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 1
Here 73
[Msg44] Equalizing fanin/fanout values line : [Line:input_in3 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg45] Updating linelist with line : [Line:input_in3 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg46] Updating the maps 
[Msg47] Concluding. Reached PI line : [Line:input_in3 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg48] Checking and2_w2 to be justified or not
[Msg49] Equalizing fanin/fanout values line : [Line:and2_out4 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg50] Updating linelist with line : [Line:and2_out4 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg51] Updating the maps 
[Msg52] All i/p lines justified for and2_out4 to Propagate. The line : [Line:and2_out4 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg53] Current linelist status inside Propagate() after all input line justification        [and2_w2 Dbar IN V=0] 
        [and2_in3 X IN V=0] 
        [and2_out4 Dbar OUT V=0] 
        [or2_in3 X IN V=0] 
        [or2_out2 X IN V=0] 
        [or2_out3 X OUT V=0] 
        [not2_w2 X IN V=0] 
        [not2_out2 X OUT V=0] 
        [or1_in2 X IN V=0] 
        [or1_in1 Dbar IN V=0] 
        [or1_w2 Dbar OUT V=0] 
        [not1_w1 X IN V=0] 
        [not1_out1 X OUT V=0] 
        [and1_in2 X IN V=0] 
        [and1_in1 X IN V=0] 
        [and1_w1 X OUT V=0] 
        [input_in3 1 OUT V=1] 
        [input_in2 0 OUT V=1] 
        [input_in1 1 OUT V=1] 
        [output_out4 X IN V=0] 
        [output_out3 X IN V=0] 
        [output_out2 X IN V=0] 
        [output_out1 X IN V=0] 
[Msg54] error_val :Dbar and iv : 0
[Msg55] Input line : [Line:output_out4 Val:X Dir:IN Visited: 0 Type:PO] is propagated with val Dbar (error_val^iv)
[Msg56] Propagating Dbar for the line : output_out4
[Msg57] Updating linelist with line : [Line:output_out4 Val:Dbar Dir:IN Visited: 0 Type:PO]
[Msg58] Updating the maps 
[Msg59] Updated linelist at this stage. - About to start  Propagate()
        [and2_w2 Dbar IN V=0] 
        [and2_in3 X IN V=0] 
        [and2_out4 Dbar OUT V=0] 
        [or2_in3 X IN V=0] 
        [or2_out2 X IN V=0] 
        [or2_out3 X OUT V=0] 
        [not2_w2 X IN V=0] 
        [not2_out2 X OUT V=0] 
        [or1_in2 X IN V=0] 
        [or1_in1 Dbar IN V=0] 
        [or1_w2 Dbar OUT V=0] 
        [not1_w1 X IN V=0] 
        [not1_out1 X OUT V=0] 
        [and1_in2 X IN V=0] 
        [and1_in1 X IN V=0] 
        [and1_w1 X OUT V=0] 
        [input_in3 1 OUT V=1] 
        [input_in2 0 OUT V=1] 
        [input_in1 1 OUT V=1] 
        [output_out4 Dbar IN V=0] 
        [output_out3 X IN V=0] 
        [output_out2 X IN V=0] 
        [output_out1 X IN V=0] 
[Msg60] Concluding. Reached PO line : [Line:output_out4 Val:Dbar Dir:IN Visited: 0 Type:PO]
[Msg61] Current linelist status after Propagate()
        [Line:and2_w2 Val:Dbar Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_out4 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out3 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not2_out2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_in1 Val:Dbar Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_w2 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not1_w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not1_out1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:and1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_w1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:input_in3 Val:1 Dir:OUT Visited: 1 Type:PI]
        [Line:input_in2 Val:0 Dir:OUT Visited: 1 Type:PI]
        [Line:input_in1 Val:1 Dir:OUT Visited: 1 Type:PI]
        [Line:output_out4 Val:Dbar Dir:IN Visited: 0 Type:PO]
        [Line:output_out3 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out2 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO]

[Msg62] Updating linelist with line : [Line:or1_in1 Val:Dbar Dir:IN Visited: 0 Type:INT_WIRE]
[Msg63] Updating the maps 
[Msg64] Current linelist status after pattern generation()
        [Line:and2_w2 Val:Dbar Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_out4 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out3 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not2_out2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_in1 Val:Dbar Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_w2 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not1_w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not1_out1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:and1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_w1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:input_in3 Val:1 Dir:OUT Visited: 1 Type:PI]
        [Line:input_in2 Val:0 Dir:OUT Visited: 1 Type:PI]
        [Line:input_in1 Val:1 Dir:OUT Visited: 1 Type:PI]
        [Line:output_out4 Val:Dbar Dir:IN Visited: 0 Type:PO]
        [Line:output_out3 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out2 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO]

[Msg] Printing PI patterns 
     input_in3 1
     input_in2 0
     input_in1 1
---------------------------------------------------------
---------------------------------------------------------
TG for line #11 SA-1. Fault #21
[Msg0] Initialzed all line values to X and isVisited = false
[Msg1] Updated line : or1_w2 from linelist to [Line:or1_w2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg2] Updating the maps 
[Msg] Printing PI patterns 
     input_in3 X
     input_in2 X
     input_in1 X
[Msg3] Current linelist status before Justify()
        [Line:and2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_out4 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out3 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not2_out2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_w2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not1_w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not1_out1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:and1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_w1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:input_in3 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:input_in2 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:input_in1 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:output_out4 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out3 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out2 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO]

[Msg4] Generating test patterns for line : [Line:or1_w2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg5] Justifying line : [Line:or1_w2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE] with value 0
Here 74
[Msg6] Equalizing fanin/fanout values line : [Line:or1_w2 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg7] inval = 0] Justifying all input lines for the line : [Line:or1_w2 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg8] Following lines need to be justified. (Total 2 lines)
        [Line:or1_w2] -->  [Line:or1_in2] [Line:or1_in1]
[Msg9] Justifying line : [Line:or1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 0
Here 75
[Msg10] Equalizing fanin/fanout values line : [Line:input_in2 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg11] Updating linelist with line : [Line:input_in2 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg12] Updating the maps 
[Msg13] Concluding. Reached PI line : [Line:input_in2 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg14] Updating linelist with line : [Line:or1_w2 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg15] Updating the maps 
[Msg16] Justifying line : [Line:or1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 0
Here 76
[Msg17] Equalizing fanin/fanout values line : [Line:input_in1 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg18] Updating linelist with line : [Line:input_in1 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg19] Updating the maps 
[Msg20] Concluding. Reached PI line : [Line:input_in1 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg21] Updating linelist with line : [Line:or1_w2 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg22] Updating the maps 
[Msg23] All lines justified 
[Msg24] Updating linelist with line : [Line:or1_w2 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg25] Updating the maps 
[Msg26] Current linelist status before Propagate() and after Justify()
        [Line:and2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_out4 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out3 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not2_out2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_w2 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:not1_w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not1_out1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:and1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_w1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:input_in3 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:input_in2 Val:0 Dir:OUT Visited: 1 Type:PI]
        [Line:input_in1 Val:0 Dir:OUT Visited: 1 Type:PI]
        [Line:output_out4 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out3 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out2 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO]

[Msg27] Propagating D for the line : or1_w2
[Msg28] Updating linelist with line : [Line:or1_w2 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg29] Updating the maps 
[Msg30] Updated linelist at this stage. - About to start  Propagate()
        [and2_w2 X IN V=0] 
        [and2_in3 X IN V=0] 
        [and2_out4 X OUT V=0] 
        [or2_in3 X IN V=0] 
        [or2_out2 X IN V=0] 
        [or2_out3 X OUT V=0] 
        [not2_w2 X IN V=0] 
        [not2_out2 X OUT V=0] 
        [or1_in2 X IN V=0] 
        [or1_in1 X IN V=0] 
        [or1_w2 D OUT V=0] 
        [not1_w1 X IN V=0] 
        [not1_out1 X OUT V=0] 
        [and1_in2 X IN V=0] 
        [and1_in1 X IN V=0] 
        [and1_w1 X OUT V=0] 
        [input_in3 X OUT V=0] 
        [input_in2 0 OUT V=1] 
        [input_in1 0 OUT V=1] 
        [output_out4 X IN V=0] 
        [output_out3 X IN V=0] 
        [output_out2 X IN V=0] 
        [output_out1 X IN V=0] 
[Msg31] Equalizing fanin/fanout values line : [Line:or1_w2 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg32] Updating linelist with line : [Line:or1_w2 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg33] Updating the maps 
[Msg34 Input line  [Line:and2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] is propagated
[Msg35] Propagating D for the line : and2_w2
[Msg36] Updating linelist with line : [Line:and2_w2 Val:D Dir:IN Visited: 0 Type:INT_WIRE]
[Msg37] Updating the maps 
[Msg38] Updated linelist at this stage. - About to start  Propagate()
        [and2_w2 D IN V=0] 
        [and2_in3 X IN V=0] 
        [and2_out4 X OUT V=0] 
        [or2_in3 X IN V=0] 
        [or2_out2 X IN V=0] 
        [or2_out3 X OUT V=0] 
        [not2_w2 X IN V=0] 
        [not2_out2 X OUT V=0] 
        [or1_in2 X IN V=0] 
        [or1_in1 X IN V=0] 
        [or1_w2 D OUT V=0] 
        [not1_w1 X IN V=0] 
        [not1_out1 X OUT V=0] 
        [and1_in2 X IN V=0] 
        [and1_in1 X IN V=0] 
        [and1_w1 X OUT V=0] 
        [input_in3 X OUT V=0] 
        [input_in2 0 OUT V=1] 
        [input_in1 0 OUT V=1] 
        [output_out4 X IN V=0] 
        [output_out3 X IN V=0] 
        [output_out2 X IN V=0] 
        [output_out1 X IN V=0] 
[Msg39][Line:and2_w2 Val:D Dir:IN Visited: 0 Type:INT_WIRE] is an input line to the component
[Msg40] Corresponding output line : and2_out4
[Msg41] Checking and2_w2 to be justified or not
[Msg42] Checking and2_in3 to be justified or not
[Msg43] Justify and2_in3 inside Propagate. line.direction == IN The line : [Line:and2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
[Msg44] Justifying line : [Line:and2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 1
Here 77
[Msg45] Equalizing fanin/fanout values line : [Line:input_in3 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg46] Updating linelist with line : [Line:input_in3 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg47] Updating the maps 
[Msg48] Concluding. Reached PI line : [Line:input_in3 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg49] Equalizing fanin/fanout values line : [Line:and2_out4 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg50] Updating linelist with line : [Line:and2_out4 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg51] Updating the maps 
[Msg52] All i/p lines justified for and2_out4 to Propagate. The line : [Line:and2_out4 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg53] Current linelist status inside Propagate() after all input line justification        [and2_w2 D IN V=0] 
        [and2_in3 X IN V=0] 
        [and2_out4 D OUT V=0] 
        [or2_in3 X IN V=0] 
        [or2_out2 X IN V=0] 
        [or2_out3 X OUT V=0] 
        [not2_w2 X IN V=0] 
        [not2_out2 X OUT V=0] 
        [or1_in2 X IN V=0] 
        [or1_in1 X IN V=0] 
        [or1_w2 D OUT V=0] 
        [not1_w1 X IN V=0] 
        [not1_out1 X OUT V=0] 
        [and1_in2 X IN V=0] 
        [and1_in1 X IN V=0] 
        [and1_w1 X OUT V=0] 
        [input_in3 1 OUT V=1] 
        [input_in2 0 OUT V=1] 
        [input_in1 0 OUT V=1] 
        [output_out4 X IN V=0] 
        [output_out3 X IN V=0] 
        [output_out2 X IN V=0] 
        [output_out1 X IN V=0] 
[Msg54] error_val :D and iv : 0
[Msg55] Input line : [Line:output_out4 Val:X Dir:IN Visited: 0 Type:PO] is propagated with val D (error_val^iv)
[Msg56] Propagating D for the line : output_out4
[Msg57] Updating linelist with line : [Line:output_out4 Val:D Dir:IN Visited: 0 Type:PO]
[Msg58] Updating the maps 
[Msg59] Updated linelist at this stage. - About to start  Propagate()
        [and2_w2 D IN V=0] 
        [and2_in3 X IN V=0] 
        [and2_out4 D OUT V=0] 
        [or2_in3 X IN V=0] 
        [or2_out2 X IN V=0] 
        [or2_out3 X OUT V=0] 
        [not2_w2 X IN V=0] 
        [not2_out2 X OUT V=0] 
        [or1_in2 X IN V=0] 
        [or1_in1 X IN V=0] 
        [or1_w2 D OUT V=0] 
        [not1_w1 X IN V=0] 
        [not1_out1 X OUT V=0] 
        [and1_in2 X IN V=0] 
        [and1_in1 X IN V=0] 
        [and1_w1 X OUT V=0] 
        [input_in3 1 OUT V=1] 
        [input_in2 0 OUT V=1] 
        [input_in1 0 OUT V=1] 
        [output_out4 D IN V=0] 
        [output_out3 X IN V=0] 
        [output_out2 X IN V=0] 
        [output_out1 X IN V=0] 
[Msg60] Concluding. Reached PO line : [Line:output_out4 Val:D Dir:IN Visited: 0 Type:PO]
[Msg61] Current linelist status after Propagate()
        [Line:and2_w2 Val:D Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_out4 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out3 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not2_out2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_w2 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not1_w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not1_out1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:and1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_w1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:input_in3 Val:1 Dir:OUT Visited: 1 Type:PI]
        [Line:input_in2 Val:0 Dir:OUT Visited: 1 Type:PI]
        [Line:input_in1 Val:0 Dir:OUT Visited: 1 Type:PI]
        [Line:output_out4 Val:D Dir:IN Visited: 0 Type:PO]
        [Line:output_out3 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out2 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO]

[Msg62] Updating linelist with line : [Line:or1_w2 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg63] Updating the maps 
[Msg64] Current linelist status after pattern generation()
        [Line:and2_w2 Val:D Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_out4 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out3 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not2_out2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_w2 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not1_w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not1_out1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:and1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_w1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:input_in3 Val:1 Dir:OUT Visited: 1 Type:PI]
        [Line:input_in2 Val:0 Dir:OUT Visited: 1 Type:PI]
        [Line:input_in1 Val:0 Dir:OUT Visited: 1 Type:PI]
        [Line:output_out4 Val:D Dir:IN Visited: 0 Type:PO]
        [Line:output_out3 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out2 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO]

[Msg] Printing PI patterns 
     input_in3 1
     input_in2 0
     input_in1 0
Here !!!
---------------------------------------------------------
---------------------------------------------------------
TG for line #11 SA-0. Fault #22
[Msg0] Initialzed all line values to X and isVisited = false
[Msg1] Updated line : or1_w2 from linelist to [Line:or1_w2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg2] Updating the maps 
[Msg] Printing PI patterns 
     input_in3 X
     input_in2 X
     input_in1 X
[Msg3] Current linelist status before Justify()
        [Line:and2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_out4 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out3 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not2_out2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_w2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not1_w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not1_out1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:and1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_w1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:input_in3 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:input_in2 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:input_in1 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:output_out4 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out3 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out2 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO]

[Msg4] Generating test patterns for line : [Line:or1_w2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg5] Justifying line : [Line:or1_w2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE] with value 1
Here 78
[Msg6] Equalizing fanin/fanout values line : [Line:or1_w2 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg7] One of the input lines of line : [Line:or1_w2 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE] to be justified
[Msg8] Trying line : [Line:or1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] to justify
[Msg9] Only [Line:or1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] of line : or1_w2 to be justified
[Msg10] Saving [Line:or1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] for future backtracking.
[Msg11] Justifying line : [Line:or1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 1
Here 79
[Msg12] Equalizing fanin/fanout values line : [Line:input_in1 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg13] Updating linelist with line : [Line:input_in1 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg14] Updating the maps 
[Msg15] Concluding. Reached PI line : [Line:input_in1 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg16] Updating linelist with line : [Line:or1_w2 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg17] Updating the maps 
[Msg18] All lines justified 
[Msg19] Updating linelist with line : [Line:or1_w2 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg20] Updating the maps 
[Msg21] Current linelist status before Propagate() and after Justify()
        [Line:and2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_out4 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out3 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not2_out2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_w2 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:not1_w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not1_out1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:and1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_w1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:input_in3 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:input_in2 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:input_in1 Val:1 Dir:OUT Visited: 1 Type:PI]
        [Line:output_out4 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out3 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out2 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO]

[Msg22] Propagating Dbar for the line : or1_w2
[Msg23] Updating linelist with line : [Line:or1_w2 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg24] Updating the maps 
[Msg25] Updated linelist at this stage. - About to start  Propagate()
        [and2_w2 X IN V=0] 
        [and2_in3 X IN V=0] 
        [and2_out4 X OUT V=0] 
        [or2_in3 X IN V=0] 
        [or2_out2 X IN V=0] 
        [or2_out3 X OUT V=0] 
        [not2_w2 X IN V=0] 
        [not2_out2 X OUT V=0] 
        [or1_in2 X IN V=0] 
        [or1_in1 X IN V=0] 
        [or1_w2 Dbar OUT V=0] 
        [not1_w1 X IN V=0] 
        [not1_out1 X OUT V=0] 
        [and1_in2 X IN V=0] 
        [and1_in1 X IN V=0] 
        [and1_w1 X OUT V=0] 
        [input_in3 X OUT V=0] 
        [input_in2 X OUT V=0] 
        [input_in1 1 OUT V=1] 
        [output_out4 X IN V=0] 
        [output_out3 X IN V=0] 
        [output_out2 X IN V=0] 
        [output_out1 X IN V=0] 
[Msg26] Equalizing fanin/fanout values line : [Line:or1_w2 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg27] Updating linelist with line : [Line:or1_w2 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg28] Updating the maps 
[Msg29 Input line  [Line:and2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] is propagated
[Msg30] Propagating Dbar for the line : and2_w2
[Msg31] Updating linelist with line : [Line:and2_w2 Val:Dbar Dir:IN Visited: 0 Type:INT_WIRE]
[Msg32] Updating the maps 
[Msg33] Updated linelist at this stage. - About to start  Propagate()
        [and2_w2 Dbar IN V=0] 
        [and2_in3 X IN V=0] 
        [and2_out4 X OUT V=0] 
        [or2_in3 X IN V=0] 
        [or2_out2 X IN V=0] 
        [or2_out3 X OUT V=0] 
        [not2_w2 X IN V=0] 
        [not2_out2 X OUT V=0] 
        [or1_in2 X IN V=0] 
        [or1_in1 X IN V=0] 
        [or1_w2 Dbar OUT V=0] 
        [not1_w1 X IN V=0] 
        [not1_out1 X OUT V=0] 
        [and1_in2 X IN V=0] 
        [and1_in1 X IN V=0] 
        [and1_w1 X OUT V=0] 
        [input_in3 X OUT V=0] 
        [input_in2 X OUT V=0] 
        [input_in1 1 OUT V=1] 
        [output_out4 X IN V=0] 
        [output_out3 X IN V=0] 
        [output_out2 X IN V=0] 
        [output_out1 X IN V=0] 
[Msg34][Line:and2_w2 Val:Dbar Dir:IN Visited: 0 Type:INT_WIRE] is an input line to the component
[Msg35] Corresponding output line : and2_out4
[Msg36] Checking and2_in3 to be justified or not
[Msg37] Justify and2_in3 inside Propagate. line.direction == IN The line : [Line:and2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
[Msg38] Justifying line : [Line:and2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 1
Here 80
[Msg39] Equalizing fanin/fanout values line : [Line:input_in3 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg40] Updating linelist with line : [Line:input_in3 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg41] Updating the maps 
[Msg42] Concluding. Reached PI line : [Line:input_in3 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg43] Checking and2_w2 to be justified or not
[Msg44] Equalizing fanin/fanout values line : [Line:and2_out4 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg45] Updating linelist with line : [Line:and2_out4 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg46] Updating the maps 
[Msg47] All i/p lines justified for and2_out4 to Propagate. The line : [Line:and2_out4 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg48] Current linelist status inside Propagate() after all input line justification        [and2_w2 Dbar IN V=0] 
        [and2_in3 X IN V=0] 
        [and2_out4 Dbar OUT V=0] 
        [or2_in3 X IN V=0] 
        [or2_out2 X IN V=0] 
        [or2_out3 X OUT V=0] 
        [not2_w2 X IN V=0] 
        [not2_out2 X OUT V=0] 
        [or1_in2 X IN V=0] 
        [or1_in1 X IN V=0] 
        [or1_w2 Dbar OUT V=0] 
        [not1_w1 X IN V=0] 
        [not1_out1 X OUT V=0] 
        [and1_in2 X IN V=0] 
        [and1_in1 X IN V=0] 
        [and1_w1 X OUT V=0] 
        [input_in3 1 OUT V=1] 
        [input_in2 X OUT V=0] 
        [input_in1 1 OUT V=1] 
        [output_out4 X IN V=0] 
        [output_out3 X IN V=0] 
        [output_out2 X IN V=0] 
        [output_out1 X IN V=0] 
[Msg49] error_val :Dbar and iv : 0
[Msg50] Input line : [Line:output_out4 Val:X Dir:IN Visited: 0 Type:PO] is propagated with val Dbar (error_val^iv)
[Msg51] Propagating Dbar for the line : output_out4
[Msg52] Updating linelist with line : [Line:output_out4 Val:Dbar Dir:IN Visited: 0 Type:PO]
[Msg53] Updating the maps 
[Msg54] Updated linelist at this stage. - About to start  Propagate()
        [and2_w2 Dbar IN V=0] 
        [and2_in3 X IN V=0] 
        [and2_out4 Dbar OUT V=0] 
        [or2_in3 X IN V=0] 
        [or2_out2 X IN V=0] 
        [or2_out3 X OUT V=0] 
        [not2_w2 X IN V=0] 
        [not2_out2 X OUT V=0] 
        [or1_in2 X IN V=0] 
        [or1_in1 X IN V=0] 
        [or1_w2 Dbar OUT V=0] 
        [not1_w1 X IN V=0] 
        [not1_out1 X OUT V=0] 
        [and1_in2 X IN V=0] 
        [and1_in1 X IN V=0] 
        [and1_w1 X OUT V=0] 
        [input_in3 1 OUT V=1] 
        [input_in2 X OUT V=0] 
        [input_in1 1 OUT V=1] 
        [output_out4 Dbar IN V=0] 
        [output_out3 X IN V=0] 
        [output_out2 X IN V=0] 
        [output_out1 X IN V=0] 
[Msg55] Concluding. Reached PO line : [Line:output_out4 Val:Dbar Dir:IN Visited: 0 Type:PO]
[Msg56] Current linelist status after Propagate()
        [Line:and2_w2 Val:Dbar Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_out4 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out3 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not2_out2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_w2 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not1_w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not1_out1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:and1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_w1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:input_in3 Val:1 Dir:OUT Visited: 1 Type:PI]
        [Line:input_in2 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:input_in1 Val:1 Dir:OUT Visited: 1 Type:PI]
        [Line:output_out4 Val:Dbar Dir:IN Visited: 0 Type:PO]
        [Line:output_out3 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out2 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO]

[Msg57] Updating linelist with line : [Line:or1_w2 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg58] Updating the maps 
[Msg59] Current linelist status after pattern generation()
        [Line:and2_w2 Val:Dbar Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_out4 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out3 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not2_out2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_w2 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not1_w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not1_out1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:and1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_w1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:input_in3 Val:1 Dir:OUT Visited: 1 Type:PI]
        [Line:input_in2 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:input_in1 Val:1 Dir:OUT Visited: 1 Type:PI]
        [Line:output_out4 Val:Dbar Dir:IN Visited: 0 Type:PO]
        [Line:output_out3 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out2 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO]

[Msg] Printing PI patterns 
     input_in3 1
     input_in2 X
     input_in1 1
---------------------------------------------------------
---------------------------------------------------------
TG for line #12 SA-1. Fault #23
[Msg0] Initialzed all line values to X and isVisited = false
[Msg1] Updated line : not1_w1 from linelist to [Line:not1_w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
[Msg2] Updating the maps 
[Msg] Printing PI patterns 
     input_in3 X
     input_in2 X
     input_in1 X
[Msg3] Current linelist status before Justify()
        [Line:and2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_out4 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out3 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not2_out2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_w2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not1_w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not1_out1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:and1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_w1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:input_in3 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:input_in2 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:input_in1 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:output_out4 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out3 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out2 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO]

[Msg4] Generating test patterns for line : [Line:not1_w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
[Msg5] Justifying line : [Line:not1_w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 0
Here 81
[Msg6] Equalizing fanin/fanout values line : [Line:and1_w1 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg7] One of the input lines of line : [Line:and1_w1 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE] to be justified
[Msg8] Trying line : [Line:and1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] to justify
[Msg9] Only [Line:and1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] of line : and1_w1 to be justified
[Msg10] Saving [Line:and1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] for future backtracking.
[Msg11] Justifying line : [Line:and1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 0
Here 82
[Msg12] Equalizing fanin/fanout values line : [Line:input_in2 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg13] Updating linelist with line : [Line:input_in2 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg14] Updating the maps 
[Msg15] Concluding. Reached PI line : [Line:input_in2 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg16] Updating linelist with line : [Line:and1_w1 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg17] Updating the maps 
[Msg18] All lines justified 
[Msg19] Updating linelist with line : [Line:and1_w1 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg20] Updating the maps 
[Msg21] Current linelist status before Propagate() and after Justify()
        [Line:and2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_out4 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out3 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not2_out2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_w2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not1_w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not1_out1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:and1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_w1 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:input_in3 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:input_in2 Val:0 Dir:OUT Visited: 1 Type:PI]
        [Line:input_in1 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:output_out4 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out3 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out2 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO]

[Msg22] Propagating D for the line : not1_w1
[Msg23] Updating linelist with line : [Line:not1_w1 Val:D Dir:IN Visited: 0 Type:INT_WIRE]
[Msg24] Updating the maps 
[Msg25] Updated linelist at this stage. - About to start  Propagate()
        [and2_w2 X IN V=0] 
        [and2_in3 X IN V=0] 
        [and2_out4 X OUT V=0] 
        [or2_in3 X IN V=0] 
        [or2_out2 X IN V=0] 
        [or2_out3 X OUT V=0] 
        [not2_w2 X IN V=0] 
        [not2_out2 X OUT V=0] 
        [or1_in2 X IN V=0] 
        [or1_in1 X IN V=0] 
        [or1_w2 X OUT V=0] 
        [not1_w1 D IN V=0] 
        [not1_out1 X OUT V=0] 
        [and1_in2 X IN V=0] 
        [and1_in1 X IN V=0] 
        [and1_w1 0 OUT V=1] 
        [input_in3 X OUT V=0] 
        [input_in2 0 OUT V=1] 
        [input_in1 X OUT V=0] 
        [output_out4 X IN V=0] 
        [output_out3 X IN V=0] 
        [output_out2 X IN V=0] 
        [output_out1 X IN V=0] 
[Msg26][Line:not1_w1 Val:D Dir:IN Visited: 0 Type:INT_WIRE] is an input line to the component
[Msg27] Corresponding output line : not1_out1
[Msg28] Checking not1_w1 to be justified or not
[Msg29] Equalizing fanin/fanout values line : [Line:not1_out1 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg30] Updating linelist with line : [Line:not1_out1 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg31] Updating the maps 
[Msg32] All i/p lines justified for not1_out1 to Propagate. The line : [Line:not1_out1 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg33] Current linelist status inside Propagate() after all input line justification        [and2_w2 X IN V=0] 
        [and2_in3 X IN V=0] 
        [and2_out4 X OUT V=0] 
        [or2_in3 X IN V=0] 
        [or2_out2 X IN V=0] 
        [or2_out3 X OUT V=0] 
        [not2_w2 X IN V=0] 
        [not2_out2 X OUT V=0] 
        [or1_in2 X IN V=0] 
        [or1_in1 X IN V=0] 
        [or1_w2 X OUT V=0] 
        [not1_w1 D IN V=0] 
        [not1_out1 D OUT V=0] 
        [and1_in2 X IN V=0] 
        [and1_in1 X IN V=0] 
        [and1_w1 0 OUT V=1] 
        [input_in3 X OUT V=0] 
        [input_in2 0 OUT V=1] 
        [input_in1 X OUT V=0] 
        [output_out4 X IN V=0] 
        [output_out3 X IN V=0] 
        [output_out2 X IN V=0] 
        [output_out1 X IN V=0] 
[Msg34] error_val :D and iv : 1
[Msg35] Input line : [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO] is propagated with val Dbar (error_val^iv)
[Msg36] Propagating Dbar for the line : output_out1
[Msg37] Updating linelist with line : [Line:output_out1 Val:Dbar Dir:IN Visited: 0 Type:PO]
[Msg38] Updating the maps 
[Msg39] Updated linelist at this stage. - About to start  Propagate()
        [and2_w2 X IN V=0] 
        [and2_in3 X IN V=0] 
        [and2_out4 X OUT V=0] 
        [or2_in3 X IN V=0] 
        [or2_out2 X IN V=0] 
        [or2_out3 X OUT V=0] 
        [not2_w2 X IN V=0] 
        [not2_out2 X OUT V=0] 
        [or1_in2 X IN V=0] 
        [or1_in1 X IN V=0] 
        [or1_w2 X OUT V=0] 
        [not1_w1 D IN V=0] 
        [not1_out1 D OUT V=0] 
        [and1_in2 X IN V=0] 
        [and1_in1 X IN V=0] 
        [and1_w1 0 OUT V=1] 
        [input_in3 X OUT V=0] 
        [input_in2 0 OUT V=1] 
        [input_in1 X OUT V=0] 
        [output_out4 X IN V=0] 
        [output_out3 X IN V=0] 
        [output_out2 X IN V=0] 
        [output_out1 Dbar IN V=0] 
[Msg40] Concluding. Reached PO line : [Line:output_out1 Val:Dbar Dir:IN Visited: 0 Type:PO]
[Msg41] Current linelist status after Propagate()
        [Line:and2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_out4 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out3 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not2_out2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_w2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not1_w1 Val:D Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not1_out1 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:and1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_w1 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:input_in3 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:input_in2 Val:0 Dir:OUT Visited: 1 Type:PI]
        [Line:input_in1 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:output_out4 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out3 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out2 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out1 Val:Dbar Dir:IN Visited: 0 Type:PO]

[Msg42] Updating linelist with line : [Line:not1_w1 Val:D Dir:IN Visited: 0 Type:INT_WIRE]
[Msg43] Updating the maps 
[Msg44] Current linelist status after pattern generation()
        [Line:and2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_out4 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out3 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not2_out2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_w2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not1_w1 Val:D Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not1_out1 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:and1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_w1 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:input_in3 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:input_in2 Val:0 Dir:OUT Visited: 1 Type:PI]
        [Line:input_in1 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:output_out4 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out3 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out2 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out1 Val:Dbar Dir:IN Visited: 0 Type:PO]

[Msg] Printing PI patterns 
     input_in3 X
     input_in2 0
     input_in1 X
Here !!!
---------------------------------------------------------
---------------------------------------------------------
TG for line #12 SA-0. Fault #24
[Msg0] Initialzed all line values to X and isVisited = false
[Msg1] Updated line : not1_w1 from linelist to [Line:not1_w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
[Msg2] Updating the maps 
[Msg] Printing PI patterns 
     input_in3 X
     input_in2 X
     input_in1 X
[Msg3] Current linelist status before Justify()
        [Line:and2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_out4 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out3 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not2_out2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_w2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not1_w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not1_out1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:and1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_w1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:input_in3 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:input_in2 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:input_in1 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:output_out4 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out3 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out2 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO]

[Msg4] Generating test patterns for line : [Line:not1_w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
[Msg5] Justifying line : [Line:not1_w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 1
Here 83
[Msg6] Equalizing fanin/fanout values line : [Line:and1_w1 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg7] inval = 1] Justifying all input lines for the line : [Line:and1_w1 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg8] Following lines need to be justified. (Total 2 lines)
        [Line:and1_w1] -->  [Line:and1_in1] [Line:and1_in2]
[Msg9] Justifying line : [Line:and1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 1
Here 84
[Msg10] Equalizing fanin/fanout values line : [Line:input_in1 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg11] Updating linelist with line : [Line:input_in1 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg12] Updating the maps 
[Msg13] Concluding. Reached PI line : [Line:input_in1 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg14] Updating linelist with line : [Line:and1_w1 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg15] Updating the maps 
[Msg16] Justifying line : [Line:and1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 1
Here 85
[Msg17] Equalizing fanin/fanout values line : [Line:input_in2 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg18] Updating linelist with line : [Line:input_in2 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg19] Updating the maps 
[Msg20] Concluding. Reached PI line : [Line:input_in2 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg21] Updating linelist with line : [Line:and1_w1 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg22] Updating the maps 
[Msg23] All lines justified 
[Msg24] Updating linelist with line : [Line:and1_w1 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg25] Updating the maps 
[Msg26] Current linelist status before Propagate() and after Justify()
        [Line:and2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_out4 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out3 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not2_out2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_w2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not1_w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not1_out1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:and1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_w1 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:input_in3 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:input_in2 Val:1 Dir:OUT Visited: 1 Type:PI]
        [Line:input_in1 Val:1 Dir:OUT Visited: 1 Type:PI]
        [Line:output_out4 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out3 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out2 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO]

[Msg27] Propagating Dbar for the line : not1_w1
[Msg28] Updating linelist with line : [Line:not1_w1 Val:Dbar Dir:IN Visited: 0 Type:INT_WIRE]
[Msg29] Updating the maps 
[Msg30] Updated linelist at this stage. - About to start  Propagate()
        [and2_w2 X IN V=0] 
        [and2_in3 X IN V=0] 
        [and2_out4 X OUT V=0] 
        [or2_in3 X IN V=0] 
        [or2_out2 X IN V=0] 
        [or2_out3 X OUT V=0] 
        [not2_w2 X IN V=0] 
        [not2_out2 X OUT V=0] 
        [or1_in2 X IN V=0] 
        [or1_in1 X IN V=0] 
        [or1_w2 X OUT V=0] 
        [not1_w1 Dbar IN V=0] 
        [not1_out1 X OUT V=0] 
        [and1_in2 X IN V=0] 
        [and1_in1 X IN V=0] 
        [and1_w1 1 OUT V=1] 
        [input_in3 X OUT V=0] 
        [input_in2 1 OUT V=1] 
        [input_in1 1 OUT V=1] 
        [output_out4 X IN V=0] 
        [output_out3 X IN V=0] 
        [output_out2 X IN V=0] 
        [output_out1 X IN V=0] 
[Msg31][Line:not1_w1 Val:Dbar Dir:IN Visited: 0 Type:INT_WIRE] is an input line to the component
[Msg32] Corresponding output line : not1_out1
[Msg33] Checking not1_w1 to be justified or not
[Msg34] Equalizing fanin/fanout values line : [Line:not1_out1 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg35] Updating linelist with line : [Line:not1_out1 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg36] Updating the maps 
[Msg37] All i/p lines justified for not1_out1 to Propagate. The line : [Line:not1_out1 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg38] Current linelist status inside Propagate() after all input line justification        [and2_w2 X IN V=0] 
        [and2_in3 X IN V=0] 
        [and2_out4 X OUT V=0] 
        [or2_in3 X IN V=0] 
        [or2_out2 X IN V=0] 
        [or2_out3 X OUT V=0] 
        [not2_w2 X IN V=0] 
        [not2_out2 X OUT V=0] 
        [or1_in2 X IN V=0] 
        [or1_in1 X IN V=0] 
        [or1_w2 X OUT V=0] 
        [not1_w1 Dbar IN V=0] 
        [not1_out1 Dbar OUT V=0] 
        [and1_in2 X IN V=0] 
        [and1_in1 X IN V=0] 
        [and1_w1 1 OUT V=1] 
        [input_in3 X OUT V=0] 
        [input_in2 1 OUT V=1] 
        [input_in1 1 OUT V=1] 
        [output_out4 X IN V=0] 
        [output_out3 X IN V=0] 
        [output_out2 X IN V=0] 
        [output_out1 X IN V=0] 
[Msg39] error_val :Dbar and iv : 1
[Msg40] Input line : [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO] is propagated with val D (error_val^iv)
[Msg41] Propagating D for the line : output_out1
[Msg42] Updating linelist with line : [Line:output_out1 Val:D Dir:IN Visited: 0 Type:PO]
[Msg43] Updating the maps 
[Msg44] Updated linelist at this stage. - About to start  Propagate()
        [and2_w2 X IN V=0] 
        [and2_in3 X IN V=0] 
        [and2_out4 X OUT V=0] 
        [or2_in3 X IN V=0] 
        [or2_out2 X IN V=0] 
        [or2_out3 X OUT V=0] 
        [not2_w2 X IN V=0] 
        [not2_out2 X OUT V=0] 
        [or1_in2 X IN V=0] 
        [or1_in1 X IN V=0] 
        [or1_w2 X OUT V=0] 
        [not1_w1 Dbar IN V=0] 
        [not1_out1 Dbar OUT V=0] 
        [and1_in2 X IN V=0] 
        [and1_in1 X IN V=0] 
        [and1_w1 1 OUT V=1] 
        [input_in3 X OUT V=0] 
        [input_in2 1 OUT V=1] 
        [input_in1 1 OUT V=1] 
        [output_out4 X IN V=0] 
        [output_out3 X IN V=0] 
        [output_out2 X IN V=0] 
        [output_out1 D IN V=0] 
[Msg45] Concluding. Reached PO line : [Line:output_out1 Val:D Dir:IN Visited: 0 Type:PO]
[Msg46] Current linelist status after Propagate()
        [Line:and2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_out4 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out3 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not2_out2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_w2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not1_w1 Val:Dbar Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not1_out1 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:and1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_w1 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:input_in3 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:input_in2 Val:1 Dir:OUT Visited: 1 Type:PI]
        [Line:input_in1 Val:1 Dir:OUT Visited: 1 Type:PI]
        [Line:output_out4 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out3 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out2 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out1 Val:D Dir:IN Visited: 0 Type:PO]

[Msg47] Updating linelist with line : [Line:not1_w1 Val:Dbar Dir:IN Visited: 0 Type:INT_WIRE]
[Msg48] Updating the maps 
[Msg49] Current linelist status after pattern generation()
        [Line:and2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_out4 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out3 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not2_out2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_w2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not1_w1 Val:Dbar Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not1_out1 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:and1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_w1 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:input_in3 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:input_in2 Val:1 Dir:OUT Visited: 1 Type:PI]
        [Line:input_in1 Val:1 Dir:OUT Visited: 1 Type:PI]
        [Line:output_out4 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out3 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out2 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out1 Val:D Dir:IN Visited: 0 Type:PO]

[Msg] Printing PI patterns 
     input_in3 X
     input_in2 1
     input_in1 1
---------------------------------------------------------
---------------------------------------------------------
TG for line #13 SA-1. Fault #25
[Msg0] Initialzed all line values to X and isVisited = false
[Msg1] Updated line : not1_out1 from linelist to [Line:not1_out1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg2] Updating the maps 
[Msg] Printing PI patterns 
     input_in3 X
     input_in2 X
     input_in1 X
[Msg3] Current linelist status before Justify()
        [Line:and2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_out4 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out3 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not2_out2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_w2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not1_w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not1_out1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:and1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_w1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:input_in3 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:input_in2 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:input_in1 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:output_out4 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out3 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out2 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO]

[Msg4] Generating test patterns for line : [Line:not1_out1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg5] Justifying line : [Line:not1_out1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE] with value 0
Here 86
[Msg6] Equalizing fanin/fanout values line : [Line:not1_out1 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg7] inval = 1] Justifying all input lines for the line : [Line:not1_out1 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg8] Following lines need to be justified. (Total 1 lines)
        [Line:not1_out1] -->  [Line:not1_w1]
[Msg9] Justifying line : [Line:not1_w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 1
Here 87
[Msg10] Equalizing fanin/fanout values line : [Line:and1_w1 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg11] inval = 1] Justifying all input lines for the line : [Line:and1_w1 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg12] Following lines need to be justified. (Total 2 lines)
        [Line:and1_w1] -->  [Line:and1_in2] [Line:and1_in1]
[Msg13] Justifying line : [Line:and1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 1
Here 88
[Msg14] Equalizing fanin/fanout values line : [Line:input_in2 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg15] Updating linelist with line : [Line:input_in2 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg16] Updating the maps 
[Msg17] Concluding. Reached PI line : [Line:input_in2 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg18] Updating linelist with line : [Line:and1_w1 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg19] Updating the maps 
[Msg20] Justifying line : [Line:and1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 1
Here 89
[Msg21] Equalizing fanin/fanout values line : [Line:input_in1 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg22] Updating linelist with line : [Line:input_in1 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg23] Updating the maps 
[Msg24] Concluding. Reached PI line : [Line:input_in1 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg25] Updating linelist with line : [Line:and1_w1 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg26] Updating the maps 
[Msg27] Updating linelist with line : [Line:not1_out1 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg28] Updating the maps 
[Msg29] All lines justified 
[Msg30] Updating linelist with line : [Line:not1_out1 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg31] Updating the maps 
[Msg32] Current linelist status before Propagate() and after Justify()
        [Line:and2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_out4 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out3 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not2_out2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_w2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not1_w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not1_out1 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:and1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_w1 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:input_in3 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:input_in2 Val:1 Dir:OUT Visited: 1 Type:PI]
        [Line:input_in1 Val:1 Dir:OUT Visited: 1 Type:PI]
        [Line:output_out4 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out3 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out2 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO]

[Msg33] Propagating D for the line : not1_out1
[Msg34] Updating linelist with line : [Line:not1_out1 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg35] Updating the maps 
[Msg36] Updated linelist at this stage. - About to start  Propagate()
        [and2_w2 X IN V=0] 
        [and2_in3 X IN V=0] 
        [and2_out4 X OUT V=0] 
        [or2_in3 X IN V=0] 
        [or2_out2 X IN V=0] 
        [or2_out3 X OUT V=0] 
        [not2_w2 X IN V=0] 
        [not2_out2 X OUT V=0] 
        [or1_in2 X IN V=0] 
        [or1_in1 X IN V=0] 
        [or1_w2 X OUT V=0] 
        [not1_w1 X IN V=0] 
        [not1_out1 D OUT V=0] 
        [and1_in2 X IN V=0] 
        [and1_in1 X IN V=0] 
        [and1_w1 1 OUT V=1] 
        [input_in3 X OUT V=0] 
        [input_in2 1 OUT V=1] 
        [input_in1 1 OUT V=1] 
        [output_out4 X IN V=0] 
        [output_out3 X IN V=0] 
        [output_out2 X IN V=0] 
        [output_out1 X IN V=0] 
[Msg37 Concluding. Reached PO line : [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO]
[Msg38] Current linelist status after Propagate()
        [Line:and2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_out4 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out3 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not2_out2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_w2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not1_w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not1_out1 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:and1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_w1 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:input_in3 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:input_in2 Val:1 Dir:OUT Visited: 1 Type:PI]
        [Line:input_in1 Val:1 Dir:OUT Visited: 1 Type:PI]
        [Line:output_out4 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out3 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out2 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO]

[Msg39] Updating linelist with line : [Line:not1_out1 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg40] Updating the maps 
[Msg41] Current linelist status after pattern generation()
        [Line:and2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_out4 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out3 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not2_out2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_w2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not1_w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not1_out1 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:and1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_w1 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:input_in3 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:input_in2 Val:1 Dir:OUT Visited: 1 Type:PI]
        [Line:input_in1 Val:1 Dir:OUT Visited: 1 Type:PI]
        [Line:output_out4 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out3 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out2 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO]

[Msg] Printing PI patterns 
     input_in3 X
     input_in2 1
     input_in1 1
Here !!!
---------------------------------------------------------
---------------------------------------------------------
TG for line #13 SA-0. Fault #26
[Msg0] Initialzed all line values to X and isVisited = false
[Msg1] Updated line : not1_out1 from linelist to [Line:not1_out1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg2] Updating the maps 
[Msg] Printing PI patterns 
     input_in3 X
     input_in2 X
     input_in1 X
[Msg3] Current linelist status before Justify()
        [Line:and2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_out4 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out3 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not2_out2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_w2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not1_w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not1_out1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:and1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_w1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:input_in3 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:input_in2 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:input_in1 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:output_out4 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out3 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out2 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO]

[Msg4] Generating test patterns for line : [Line:not1_out1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg5] Justifying line : [Line:not1_out1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE] with value 1
Here 90
[Msg6] Equalizing fanin/fanout values line : [Line:not1_out1 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg7] One of the input lines of line : [Line:not1_out1 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE] to be justified
[Msg8] Trying line : [Line:not1_w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] to justify
[Msg9] Only [Line:not1_w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] of line : not1_out1 to be justified
[Msg10] Saving [Line:not1_w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] for future backtracking.
[Msg11] Justifying line : [Line:not1_w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 0
Here 91
[Msg12] Equalizing fanin/fanout values line : [Line:and1_w1 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg13] One of the input lines of line : [Line:and1_w1 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE] to be justified
[Msg14] Trying line : [Line:and1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] to justify
[Msg15] Only [Line:and1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] of line : and1_w1 to be justified
[Msg16] Saving [Line:and1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] for future backtracking.
[Msg17] Justifying line : [Line:and1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 0
Here 92
[Msg18] Equalizing fanin/fanout values line : [Line:input_in1 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg19] Updating linelist with line : [Line:input_in1 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg20] Updating the maps 
[Msg21] Concluding. Reached PI line : [Line:input_in1 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg22] Updating linelist with line : [Line:and1_w1 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg23] Updating the maps 
[Msg24] Updating linelist with line : [Line:not1_out1 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg25] Updating the maps 
[Msg26] All lines justified 
[Msg27] Updating linelist with line : [Line:not1_out1 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg28] Updating the maps 
[Msg29] Current linelist status before Propagate() and after Justify()
        [Line:and2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_out4 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out3 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not2_out2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_w2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not1_w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not1_out1 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:and1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_w1 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:input_in3 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:input_in2 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:input_in1 Val:0 Dir:OUT Visited: 1 Type:PI]
        [Line:output_out4 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out3 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out2 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO]

[Msg30] Propagating Dbar for the line : not1_out1
[Msg31] Updating linelist with line : [Line:not1_out1 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg32] Updating the maps 
[Msg33] Updated linelist at this stage. - About to start  Propagate()
        [and2_w2 X IN V=0] 
        [and2_in3 X IN V=0] 
        [and2_out4 X OUT V=0] 
        [or2_in3 X IN V=0] 
        [or2_out2 X IN V=0] 
        [or2_out3 X OUT V=0] 
        [not2_w2 X IN V=0] 
        [not2_out2 X OUT V=0] 
        [or1_in2 X IN V=0] 
        [or1_in1 X IN V=0] 
        [or1_w2 X OUT V=0] 
        [not1_w1 X IN V=0] 
        [not1_out1 Dbar OUT V=0] 
        [and1_in2 X IN V=0] 
        [and1_in1 X IN V=0] 
        [and1_w1 0 OUT V=1] 
        [input_in3 X OUT V=0] 
        [input_in2 X OUT V=0] 
        [input_in1 0 OUT V=1] 
        [output_out4 X IN V=0] 
        [output_out3 X IN V=0] 
        [output_out2 X IN V=0] 
        [output_out1 X IN V=0] 
[Msg34 Concluding. Reached PO line : [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO]
[Msg35] Current linelist status after Propagate()
        [Line:and2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_out4 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out3 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not2_out2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_w2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not1_w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not1_out1 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:and1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_w1 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:input_in3 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:input_in2 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:input_in1 Val:0 Dir:OUT Visited: 1 Type:PI]
        [Line:output_out4 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out3 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out2 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO]

[Msg36] Updating linelist with line : [Line:not1_out1 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg37] Updating the maps 
[Msg38] Current linelist status after pattern generation()
        [Line:and2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_out4 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out3 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not2_out2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_w2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not1_w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not1_out1 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:and1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_w1 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:input_in3 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:input_in2 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:input_in1 Val:0 Dir:OUT Visited: 1 Type:PI]
        [Line:output_out4 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out3 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out2 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO]

[Msg] Printing PI patterns 
     input_in3 X
     input_in2 X
     input_in1 0
---------------------------------------------------------
---------------------------------------------------------
TG for line #14 SA-1. Fault #27
[Msg0] Initialzed all line values to X and isVisited = false
[Msg1] Updated line : and1_in2 from linelist to [Line:and1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
[Msg2] Updating the maps 
[Msg] Printing PI patterns 
     input_in3 X
     input_in2 X
     input_in1 X
[Msg3] Current linelist status before Justify()
        [Line:and2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_out4 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out3 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not2_out2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_w2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not1_w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not1_out1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:and1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_w1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:input_in3 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:input_in2 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:input_in1 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:output_out4 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out3 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out2 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO]

[Msg4] Generating test patterns for line : [Line:and1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
[Msg5] Justifying line : [Line:and1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 0
Here 93
[Msg6] Equalizing fanin/fanout values line : [Line:input_in2 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg7] Updating linelist with line : [Line:input_in2 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg8] Updating the maps 
[Msg9] Concluding. Reached PI line : [Line:input_in2 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg10] All lines justified 
[Msg11] Updating linelist with line : [Line:input_in2 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg12] Updating the maps 
[Msg13] Current linelist status before Propagate() and after Justify()
        [Line:and2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_out4 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out3 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not2_out2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_w2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not1_w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not1_out1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:and1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_w1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:input_in3 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:input_in2 Val:0 Dir:OUT Visited: 1 Type:PI]
        [Line:input_in1 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:output_out4 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out3 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out2 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO]

[Msg14] Propagating D for the line : and1_in2
[Msg15] Updating linelist with line : [Line:and1_in2 Val:D Dir:IN Visited: 0 Type:INT_WIRE]
[Msg16] Updating the maps 
[Msg17] Updated linelist at this stage. - About to start  Propagate()
        [and2_w2 X IN V=0] 
        [and2_in3 X IN V=0] 
        [and2_out4 X OUT V=0] 
        [or2_in3 X IN V=0] 
        [or2_out2 X IN V=0] 
        [or2_out3 X OUT V=0] 
        [not2_w2 X IN V=0] 
        [not2_out2 X OUT V=0] 
        [or1_in2 X IN V=0] 
        [or1_in1 X IN V=0] 
        [or1_w2 X OUT V=0] 
        [not1_w1 X IN V=0] 
        [not1_out1 X OUT V=0] 
        [and1_in2 D IN V=0] 
        [and1_in1 X IN V=0] 
        [and1_w1 X OUT V=0] 
        [input_in3 X OUT V=0] 
        [input_in2 0 OUT V=1] 
        [input_in1 X OUT V=0] 
        [output_out4 X IN V=0] 
        [output_out3 X IN V=0] 
        [output_out2 X IN V=0] 
        [output_out1 X IN V=0] 
[Msg18][Line:and1_in2 Val:D Dir:IN Visited: 0 Type:INT_WIRE] is an input line to the component
[Msg19] Corresponding output line : and1_w1
[Msg20] Checking and1_in2 to be justified or not
[Msg21] Checking and1_in1 to be justified or not
[Msg22] Justify and1_in1 inside Propagate. line.direction == IN The line : [Line:and1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
[Msg23] Justifying line : [Line:and1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 1
Here 94
[Msg24] Equalizing fanin/fanout values line : [Line:input_in1 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg25] Updating linelist with line : [Line:input_in1 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg26] Updating the maps 
[Msg27] Concluding. Reached PI line : [Line:input_in1 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg28] Equalizing fanin/fanout values line : [Line:and1_w1 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg29] Updating linelist with line : [Line:and1_w1 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg30] Updating the maps 
[Msg31] All i/p lines justified for and1_w1 to Propagate. The line : [Line:and1_w1 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg32] Current linelist status inside Propagate() after all input line justification        [and2_w2 X IN V=0] 
        [and2_in3 X IN V=0] 
        [and2_out4 X OUT V=0] 
        [or2_in3 X IN V=0] 
        [or2_out2 X IN V=0] 
        [or2_out3 X OUT V=0] 
        [not2_w2 X IN V=0] 
        [not2_out2 X OUT V=0] 
        [or1_in2 X IN V=0] 
        [or1_in1 X IN V=0] 
        [or1_w2 X OUT V=0] 
        [not1_w1 X IN V=0] 
        [not1_out1 X OUT V=0] 
        [and1_in2 D IN V=0] 
        [and1_in1 X IN V=0] 
        [and1_w1 D OUT V=0] 
        [input_in3 X OUT V=0] 
        [input_in2 0 OUT V=1] 
        [input_in1 1 OUT V=1] 
        [output_out4 X IN V=0] 
        [output_out3 X IN V=0] 
        [output_out2 X IN V=0] 
        [output_out1 X IN V=0] 
[Msg33] error_val :D and iv : 0
[Msg34] Input line : [Line:not1_w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] is propagated with val D (error_val^iv)
[Msg35] Propagating D for the line : not1_w1
[Msg36] Updating linelist with line : [Line:not1_w1 Val:D Dir:IN Visited: 0 Type:INT_WIRE]
[Msg37] Updating the maps 
[Msg38] Updated linelist at this stage. - About to start  Propagate()
        [and2_w2 X IN V=0] 
        [and2_in3 X IN V=0] 
        [and2_out4 X OUT V=0] 
        [or2_in3 X IN V=0] 
        [or2_out2 X IN V=0] 
        [or2_out3 X OUT V=0] 
        [not2_w2 X IN V=0] 
        [not2_out2 X OUT V=0] 
        [or1_in2 X IN V=0] 
        [or1_in1 X IN V=0] 
        [or1_w2 X OUT V=0] 
        [not1_w1 D IN V=0] 
        [not1_out1 X OUT V=0] 
        [and1_in2 D IN V=0] 
        [and1_in1 X IN V=0] 
        [and1_w1 D OUT V=0] 
        [input_in3 X OUT V=0] 
        [input_in2 0 OUT V=1] 
        [input_in1 1 OUT V=1] 
        [output_out4 X IN V=0] 
        [output_out3 X IN V=0] 
        [output_out2 X IN V=0] 
        [output_out1 X IN V=0] 
[Msg39][Line:not1_w1 Val:D Dir:IN Visited: 0 Type:INT_WIRE] is an input line to the component
[Msg40] Corresponding output line : not1_out1
[Msg41] Checking not1_w1 to be justified or not
[Msg42] Equalizing fanin/fanout values line : [Line:not1_out1 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg43] Updating linelist with line : [Line:not1_out1 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg44] Updating the maps 
[Msg45] All i/p lines justified for not1_out1 to Propagate. The line : [Line:not1_out1 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg46] Current linelist status inside Propagate() after all input line justification        [and2_w2 X IN V=0] 
        [and2_in3 X IN V=0] 
        [and2_out4 X OUT V=0] 
        [or2_in3 X IN V=0] 
        [or2_out2 X IN V=0] 
        [or2_out3 X OUT V=0] 
        [not2_w2 X IN V=0] 
        [not2_out2 X OUT V=0] 
        [or1_in2 X IN V=0] 
        [or1_in1 X IN V=0] 
        [or1_w2 X OUT V=0] 
        [not1_w1 D IN V=0] 
        [not1_out1 D OUT V=0] 
        [and1_in2 D IN V=0] 
        [and1_in1 X IN V=0] 
        [and1_w1 D OUT V=0] 
        [input_in3 X OUT V=0] 
        [input_in2 0 OUT V=1] 
        [input_in1 1 OUT V=1] 
        [output_out4 X IN V=0] 
        [output_out3 X IN V=0] 
        [output_out2 X IN V=0] 
        [output_out1 X IN V=0] 
[Msg47] error_val :D and iv : 1
[Msg48] Input line : [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO] is propagated with val Dbar (error_val^iv)
[Msg49] Propagating Dbar for the line : output_out1
[Msg50] Updating linelist with line : [Line:output_out1 Val:Dbar Dir:IN Visited: 0 Type:PO]
[Msg51] Updating the maps 
[Msg52] Updated linelist at this stage. - About to start  Propagate()
        [and2_w2 X IN V=0] 
        [and2_in3 X IN V=0] 
        [and2_out4 X OUT V=0] 
        [or2_in3 X IN V=0] 
        [or2_out2 X IN V=0] 
        [or2_out3 X OUT V=0] 
        [not2_w2 X IN V=0] 
        [not2_out2 X OUT V=0] 
        [or1_in2 X IN V=0] 
        [or1_in1 X IN V=0] 
        [or1_w2 X OUT V=0] 
        [not1_w1 D IN V=0] 
        [not1_out1 D OUT V=0] 
        [and1_in2 D IN V=0] 
        [and1_in1 X IN V=0] 
        [and1_w1 D OUT V=0] 
        [input_in3 X OUT V=0] 
        [input_in2 0 OUT V=1] 
        [input_in1 1 OUT V=1] 
        [output_out4 X IN V=0] 
        [output_out3 X IN V=0] 
        [output_out2 X IN V=0] 
        [output_out1 Dbar IN V=0] 
[Msg53] Concluding. Reached PO line : [Line:output_out1 Val:Dbar Dir:IN Visited: 0 Type:PO]
[Msg54] Current linelist status after Propagate()
        [Line:and2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_out4 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out3 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not2_out2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_w2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not1_w1 Val:D Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not1_out1 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:and1_in2 Val:D Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_w1 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:input_in3 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:input_in2 Val:0 Dir:OUT Visited: 1 Type:PI]
        [Line:input_in1 Val:1 Dir:OUT Visited: 1 Type:PI]
        [Line:output_out4 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out3 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out2 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out1 Val:Dbar Dir:IN Visited: 0 Type:PO]

[Msg55] Updating linelist with line : [Line:and1_in2 Val:D Dir:IN Visited: 0 Type:INT_WIRE]
[Msg56] Updating the maps 
[Msg57] Current linelist status after pattern generation()
        [Line:and2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_out4 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out3 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not2_out2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_w2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not1_w1 Val:D Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not1_out1 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:and1_in2 Val:D Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_w1 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:input_in3 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:input_in2 Val:0 Dir:OUT Visited: 1 Type:PI]
        [Line:input_in1 Val:1 Dir:OUT Visited: 1 Type:PI]
        [Line:output_out4 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out3 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out2 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out1 Val:Dbar Dir:IN Visited: 0 Type:PO]

[Msg] Printing PI patterns 
     input_in3 X
     input_in2 0
     input_in1 1
Here !!!
---------------------------------------------------------
---------------------------------------------------------
TG for line #14 SA-0. Fault #28
[Msg0] Initialzed all line values to X and isVisited = false
[Msg1] Updated line : and1_in2 from linelist to [Line:and1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
[Msg2] Updating the maps 
[Msg] Printing PI patterns 
     input_in3 X
     input_in2 X
     input_in1 X
[Msg3] Current linelist status before Justify()
        [Line:and2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_out4 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out3 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not2_out2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_w2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not1_w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not1_out1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:and1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_w1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:input_in3 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:input_in2 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:input_in1 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:output_out4 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out3 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out2 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO]

[Msg4] Generating test patterns for line : [Line:and1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
[Msg5] Justifying line : [Line:and1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 1
Here 95
[Msg6] Equalizing fanin/fanout values line : [Line:input_in2 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg7] Updating linelist with line : [Line:input_in2 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg8] Updating the maps 
[Msg9] Concluding. Reached PI line : [Line:input_in2 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg10] All lines justified 
[Msg11] Updating linelist with line : [Line:input_in2 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg12] Updating the maps 
[Msg13] Current linelist status before Propagate() and after Justify()
        [Line:and2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_out4 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out3 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not2_out2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_w2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not1_w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not1_out1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:and1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_w1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:input_in3 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:input_in2 Val:1 Dir:OUT Visited: 1 Type:PI]
        [Line:input_in1 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:output_out4 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out3 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out2 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO]

[Msg14] Propagating Dbar for the line : and1_in2
[Msg15] Updating linelist with line : [Line:and1_in2 Val:Dbar Dir:IN Visited: 0 Type:INT_WIRE]
[Msg16] Updating the maps 
[Msg17] Updated linelist at this stage. - About to start  Propagate()
        [and2_w2 X IN V=0] 
        [and2_in3 X IN V=0] 
        [and2_out4 X OUT V=0] 
        [or2_in3 X IN V=0] 
        [or2_out2 X IN V=0] 
        [or2_out3 X OUT V=0] 
        [not2_w2 X IN V=0] 
        [not2_out2 X OUT V=0] 
        [or1_in2 X IN V=0] 
        [or1_in1 X IN V=0] 
        [or1_w2 X OUT V=0] 
        [not1_w1 X IN V=0] 
        [not1_out1 X OUT V=0] 
        [and1_in2 Dbar IN V=0] 
        [and1_in1 X IN V=0] 
        [and1_w1 X OUT V=0] 
        [input_in3 X OUT V=0] 
        [input_in2 1 OUT V=1] 
        [input_in1 X OUT V=0] 
        [output_out4 X IN V=0] 
        [output_out3 X IN V=0] 
        [output_out2 X IN V=0] 
        [output_out1 X IN V=0] 
[Msg18][Line:and1_in2 Val:Dbar Dir:IN Visited: 0 Type:INT_WIRE] is an input line to the component
[Msg19] Corresponding output line : and1_w1
[Msg20] Checking and1_in1 to be justified or not
[Msg21] Justify and1_in1 inside Propagate. line.direction == IN The line : [Line:and1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
[Msg22] Justifying line : [Line:and1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 1
Here 96
[Msg23] Equalizing fanin/fanout values line : [Line:input_in1 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg24] Updating linelist with line : [Line:input_in1 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg25] Updating the maps 
[Msg26] Concluding. Reached PI line : [Line:input_in1 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg27] Checking and1_in2 to be justified or not
[Msg28] Equalizing fanin/fanout values line : [Line:and1_w1 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg29] Updating linelist with line : [Line:and1_w1 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg30] Updating the maps 
[Msg31] All i/p lines justified for and1_w1 to Propagate. The line : [Line:and1_w1 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg32] Current linelist status inside Propagate() after all input line justification        [and2_w2 X IN V=0] 
        [and2_in3 X IN V=0] 
        [and2_out4 X OUT V=0] 
        [or2_in3 X IN V=0] 
        [or2_out2 X IN V=0] 
        [or2_out3 X OUT V=0] 
        [not2_w2 X IN V=0] 
        [not2_out2 X OUT V=0] 
        [or1_in2 X IN V=0] 
        [or1_in1 X IN V=0] 
        [or1_w2 X OUT V=0] 
        [not1_w1 X IN V=0] 
        [not1_out1 X OUT V=0] 
        [and1_in2 Dbar IN V=0] 
        [and1_in1 X IN V=0] 
        [and1_w1 Dbar OUT V=0] 
        [input_in3 X OUT V=0] 
        [input_in2 1 OUT V=1] 
        [input_in1 1 OUT V=1] 
        [output_out4 X IN V=0] 
        [output_out3 X IN V=0] 
        [output_out2 X IN V=0] 
        [output_out1 X IN V=0] 
[Msg33] error_val :Dbar and iv : 0
[Msg34] Input line : [Line:not1_w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] is propagated with val Dbar (error_val^iv)
[Msg35] Propagating Dbar for the line : not1_w1
[Msg36] Updating linelist with line : [Line:not1_w1 Val:Dbar Dir:IN Visited: 0 Type:INT_WIRE]
[Msg37] Updating the maps 
[Msg38] Updated linelist at this stage. - About to start  Propagate()
        [and2_w2 X IN V=0] 
        [and2_in3 X IN V=0] 
        [and2_out4 X OUT V=0] 
        [or2_in3 X IN V=0] 
        [or2_out2 X IN V=0] 
        [or2_out3 X OUT V=0] 
        [not2_w2 X IN V=0] 
        [not2_out2 X OUT V=0] 
        [or1_in2 X IN V=0] 
        [or1_in1 X IN V=0] 
        [or1_w2 X OUT V=0] 
        [not1_w1 Dbar IN V=0] 
        [not1_out1 X OUT V=0] 
        [and1_in2 Dbar IN V=0] 
        [and1_in1 X IN V=0] 
        [and1_w1 Dbar OUT V=0] 
        [input_in3 X OUT V=0] 
        [input_in2 1 OUT V=1] 
        [input_in1 1 OUT V=1] 
        [output_out4 X IN V=0] 
        [output_out3 X IN V=0] 
        [output_out2 X IN V=0] 
        [output_out1 X IN V=0] 
[Msg39][Line:not1_w1 Val:Dbar Dir:IN Visited: 0 Type:INT_WIRE] is an input line to the component
[Msg40] Corresponding output line : not1_out1
[Msg41] Checking not1_w1 to be justified or not
[Msg42] Equalizing fanin/fanout values line : [Line:not1_out1 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg43] Updating linelist with line : [Line:not1_out1 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg44] Updating the maps 
[Msg45] All i/p lines justified for not1_out1 to Propagate. The line : [Line:not1_out1 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg46] Current linelist status inside Propagate() after all input line justification        [and2_w2 X IN V=0] 
        [and2_in3 X IN V=0] 
        [and2_out4 X OUT V=0] 
        [or2_in3 X IN V=0] 
        [or2_out2 X IN V=0] 
        [or2_out3 X OUT V=0] 
        [not2_w2 X IN V=0] 
        [not2_out2 X OUT V=0] 
        [or1_in2 X IN V=0] 
        [or1_in1 X IN V=0] 
        [or1_w2 X OUT V=0] 
        [not1_w1 Dbar IN V=0] 
        [not1_out1 Dbar OUT V=0] 
        [and1_in2 Dbar IN V=0] 
        [and1_in1 X IN V=0] 
        [and1_w1 Dbar OUT V=0] 
        [input_in3 X OUT V=0] 
        [input_in2 1 OUT V=1] 
        [input_in1 1 OUT V=1] 
        [output_out4 X IN V=0] 
        [output_out3 X IN V=0] 
        [output_out2 X IN V=0] 
        [output_out1 X IN V=0] 
[Msg47] error_val :Dbar and iv : 1
[Msg48] Input line : [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO] is propagated with val D (error_val^iv)
[Msg49] Propagating D for the line : output_out1
[Msg50] Updating linelist with line : [Line:output_out1 Val:D Dir:IN Visited: 0 Type:PO]
[Msg51] Updating the maps 
[Msg52] Updated linelist at this stage. - About to start  Propagate()
        [and2_w2 X IN V=0] 
        [and2_in3 X IN V=0] 
        [and2_out4 X OUT V=0] 
        [or2_in3 X IN V=0] 
        [or2_out2 X IN V=0] 
        [or2_out3 X OUT V=0] 
        [not2_w2 X IN V=0] 
        [not2_out2 X OUT V=0] 
        [or1_in2 X IN V=0] 
        [or1_in1 X IN V=0] 
        [or1_w2 X OUT V=0] 
        [not1_w1 Dbar IN V=0] 
        [not1_out1 Dbar OUT V=0] 
        [and1_in2 Dbar IN V=0] 
        [and1_in1 X IN V=0] 
        [and1_w1 Dbar OUT V=0] 
        [input_in3 X OUT V=0] 
        [input_in2 1 OUT V=1] 
        [input_in1 1 OUT V=1] 
        [output_out4 X IN V=0] 
        [output_out3 X IN V=0] 
        [output_out2 X IN V=0] 
        [output_out1 D IN V=0] 
[Msg53] Concluding. Reached PO line : [Line:output_out1 Val:D Dir:IN Visited: 0 Type:PO]
[Msg54] Current linelist status after Propagate()
        [Line:and2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_out4 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out3 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not2_out2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_w2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not1_w1 Val:Dbar Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not1_out1 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:and1_in2 Val:Dbar Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_w1 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:input_in3 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:input_in2 Val:1 Dir:OUT Visited: 1 Type:PI]
        [Line:input_in1 Val:1 Dir:OUT Visited: 1 Type:PI]
        [Line:output_out4 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out3 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out2 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out1 Val:D Dir:IN Visited: 0 Type:PO]

[Msg55] Updating linelist with line : [Line:and1_in2 Val:Dbar Dir:IN Visited: 0 Type:INT_WIRE]
[Msg56] Updating the maps 
[Msg57] Current linelist status after pattern generation()
        [Line:and2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_out4 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out3 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not2_out2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_w2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not1_w1 Val:Dbar Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not1_out1 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:and1_in2 Val:Dbar Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_w1 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:input_in3 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:input_in2 Val:1 Dir:OUT Visited: 1 Type:PI]
        [Line:input_in1 Val:1 Dir:OUT Visited: 1 Type:PI]
        [Line:output_out4 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out3 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out2 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out1 Val:D Dir:IN Visited: 0 Type:PO]

[Msg] Printing PI patterns 
     input_in3 X
     input_in2 1
     input_in1 1
---------------------------------------------------------
---------------------------------------------------------
TG for line #15 SA-1. Fault #29
[Msg0] Initialzed all line values to X and isVisited = false
[Msg1] Updated line : and1_in1 from linelist to [Line:and1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
[Msg2] Updating the maps 
[Msg] Printing PI patterns 
     input_in3 X
     input_in2 X
     input_in1 X
[Msg3] Current linelist status before Justify()
        [Line:and2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_out4 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out3 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not2_out2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_w2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not1_w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not1_out1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:and1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_w1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:input_in3 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:input_in2 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:input_in1 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:output_out4 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out3 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out2 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO]

[Msg4] Generating test patterns for line : [Line:and1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
[Msg5] Justifying line : [Line:and1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 0
Here 97
[Msg6] Equalizing fanin/fanout values line : [Line:input_in1 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg7] Updating linelist with line : [Line:input_in1 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg8] Updating the maps 
[Msg9] Concluding. Reached PI line : [Line:input_in1 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg10] All lines justified 
[Msg11] Updating linelist with line : [Line:input_in1 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg12] Updating the maps 
[Msg13] Current linelist status before Propagate() and after Justify()
        [Line:and2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_out4 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out3 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not2_out2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_w2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not1_w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not1_out1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:and1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_w1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:input_in3 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:input_in2 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:input_in1 Val:0 Dir:OUT Visited: 1 Type:PI]
        [Line:output_out4 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out3 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out2 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO]

[Msg14] Propagating D for the line : and1_in1
[Msg15] Updating linelist with line : [Line:and1_in1 Val:D Dir:IN Visited: 0 Type:INT_WIRE]
[Msg16] Updating the maps 
[Msg17] Updated linelist at this stage. - About to start  Propagate()
        [and2_w2 X IN V=0] 
        [and2_in3 X IN V=0] 
        [and2_out4 X OUT V=0] 
        [or2_in3 X IN V=0] 
        [or2_out2 X IN V=0] 
        [or2_out3 X OUT V=0] 
        [not2_w2 X IN V=0] 
        [not2_out2 X OUT V=0] 
        [or1_in2 X IN V=0] 
        [or1_in1 X IN V=0] 
        [or1_w2 X OUT V=0] 
        [not1_w1 X IN V=0] 
        [not1_out1 X OUT V=0] 
        [and1_in2 X IN V=0] 
        [and1_in1 D IN V=0] 
        [and1_w1 X OUT V=0] 
        [input_in3 X OUT V=0] 
        [input_in2 X OUT V=0] 
        [input_in1 0 OUT V=1] 
        [output_out4 X IN V=0] 
        [output_out3 X IN V=0] 
        [output_out2 X IN V=0] 
        [output_out1 X IN V=0] 
[Msg18][Line:and1_in1 Val:D Dir:IN Visited: 0 Type:INT_WIRE] is an input line to the component
[Msg19] Corresponding output line : and1_w1
[Msg20] Checking and1_in2 to be justified or not
[Msg21] Justify and1_in2 inside Propagate. line.direction == IN The line : [Line:and1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
[Msg22] Justifying line : [Line:and1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 1
Here 98
[Msg23] Equalizing fanin/fanout values line : [Line:input_in2 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg24] Updating linelist with line : [Line:input_in2 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg25] Updating the maps 
[Msg26] Concluding. Reached PI line : [Line:input_in2 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg27] Checking and1_in1 to be justified or not
[Msg28] Equalizing fanin/fanout values line : [Line:and1_w1 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg29] Updating linelist with line : [Line:and1_w1 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg30] Updating the maps 
[Msg31] All i/p lines justified for and1_w1 to Propagate. The line : [Line:and1_w1 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg32] Current linelist status inside Propagate() after all input line justification        [and2_w2 X IN V=0] 
        [and2_in3 X IN V=0] 
        [and2_out4 X OUT V=0] 
        [or2_in3 X IN V=0] 
        [or2_out2 X IN V=0] 
        [or2_out3 X OUT V=0] 
        [not2_w2 X IN V=0] 
        [not2_out2 X OUT V=0] 
        [or1_in2 X IN V=0] 
        [or1_in1 X IN V=0] 
        [or1_w2 X OUT V=0] 
        [not1_w1 X IN V=0] 
        [not1_out1 X OUT V=0] 
        [and1_in2 X IN V=0] 
        [and1_in1 D IN V=0] 
        [and1_w1 D OUT V=0] 
        [input_in3 X OUT V=0] 
        [input_in2 1 OUT V=1] 
        [input_in1 0 OUT V=1] 
        [output_out4 X IN V=0] 
        [output_out3 X IN V=0] 
        [output_out2 X IN V=0] 
        [output_out1 X IN V=0] 
[Msg33] error_val :D and iv : 0
[Msg34] Input line : [Line:not1_w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] is propagated with val D (error_val^iv)
[Msg35] Propagating D for the line : not1_w1
[Msg36] Updating linelist with line : [Line:not1_w1 Val:D Dir:IN Visited: 0 Type:INT_WIRE]
[Msg37] Updating the maps 
[Msg38] Updated linelist at this stage. - About to start  Propagate()
        [and2_w2 X IN V=0] 
        [and2_in3 X IN V=0] 
        [and2_out4 X OUT V=0] 
        [or2_in3 X IN V=0] 
        [or2_out2 X IN V=0] 
        [or2_out3 X OUT V=0] 
        [not2_w2 X IN V=0] 
        [not2_out2 X OUT V=0] 
        [or1_in2 X IN V=0] 
        [or1_in1 X IN V=0] 
        [or1_w2 X OUT V=0] 
        [not1_w1 D IN V=0] 
        [not1_out1 X OUT V=0] 
        [and1_in2 X IN V=0] 
        [and1_in1 D IN V=0] 
        [and1_w1 D OUT V=0] 
        [input_in3 X OUT V=0] 
        [input_in2 1 OUT V=1] 
        [input_in1 0 OUT V=1] 
        [output_out4 X IN V=0] 
        [output_out3 X IN V=0] 
        [output_out2 X IN V=0] 
        [output_out1 X IN V=0] 
[Msg39][Line:not1_w1 Val:D Dir:IN Visited: 0 Type:INT_WIRE] is an input line to the component
[Msg40] Corresponding output line : not1_out1
[Msg41] Checking not1_w1 to be justified or not
[Msg42] Equalizing fanin/fanout values line : [Line:not1_out1 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg43] Updating linelist with line : [Line:not1_out1 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg44] Updating the maps 
[Msg45] All i/p lines justified for not1_out1 to Propagate. The line : [Line:not1_out1 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg46] Current linelist status inside Propagate() after all input line justification        [and2_w2 X IN V=0] 
        [and2_in3 X IN V=0] 
        [and2_out4 X OUT V=0] 
        [or2_in3 X IN V=0] 
        [or2_out2 X IN V=0] 
        [or2_out3 X OUT V=0] 
        [not2_w2 X IN V=0] 
        [not2_out2 X OUT V=0] 
        [or1_in2 X IN V=0] 
        [or1_in1 X IN V=0] 
        [or1_w2 X OUT V=0] 
        [not1_w1 D IN V=0] 
        [not1_out1 D OUT V=0] 
        [and1_in2 X IN V=0] 
        [and1_in1 D IN V=0] 
        [and1_w1 D OUT V=0] 
        [input_in3 X OUT V=0] 
        [input_in2 1 OUT V=1] 
        [input_in1 0 OUT V=1] 
        [output_out4 X IN V=0] 
        [output_out3 X IN V=0] 
        [output_out2 X IN V=0] 
        [output_out1 X IN V=0] 
[Msg47] error_val :D and iv : 1
[Msg48] Input line : [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO] is propagated with val Dbar (error_val^iv)
[Msg49] Propagating Dbar for the line : output_out1
[Msg50] Updating linelist with line : [Line:output_out1 Val:Dbar Dir:IN Visited: 0 Type:PO]
[Msg51] Updating the maps 
[Msg52] Updated linelist at this stage. - About to start  Propagate()
        [and2_w2 X IN V=0] 
        [and2_in3 X IN V=0] 
        [and2_out4 X OUT V=0] 
        [or2_in3 X IN V=0] 
        [or2_out2 X IN V=0] 
        [or2_out3 X OUT V=0] 
        [not2_w2 X IN V=0] 
        [not2_out2 X OUT V=0] 
        [or1_in2 X IN V=0] 
        [or1_in1 X IN V=0] 
        [or1_w2 X OUT V=0] 
        [not1_w1 D IN V=0] 
        [not1_out1 D OUT V=0] 
        [and1_in2 X IN V=0] 
        [and1_in1 D IN V=0] 
        [and1_w1 D OUT V=0] 
        [input_in3 X OUT V=0] 
        [input_in2 1 OUT V=1] 
        [input_in1 0 OUT V=1] 
        [output_out4 X IN V=0] 
        [output_out3 X IN V=0] 
        [output_out2 X IN V=0] 
        [output_out1 Dbar IN V=0] 
[Msg53] Concluding. Reached PO line : [Line:output_out1 Val:Dbar Dir:IN Visited: 0 Type:PO]
[Msg54] Current linelist status after Propagate()
        [Line:and2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_out4 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out3 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not2_out2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_w2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not1_w1 Val:D Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not1_out1 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:and1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_in1 Val:D Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_w1 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:input_in3 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:input_in2 Val:1 Dir:OUT Visited: 1 Type:PI]
        [Line:input_in1 Val:0 Dir:OUT Visited: 1 Type:PI]
        [Line:output_out4 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out3 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out2 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out1 Val:Dbar Dir:IN Visited: 0 Type:PO]

[Msg55] Updating linelist with line : [Line:and1_in1 Val:D Dir:IN Visited: 0 Type:INT_WIRE]
[Msg56] Updating the maps 
[Msg57] Current linelist status after pattern generation()
        [Line:and2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_out4 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out3 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not2_out2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_w2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not1_w1 Val:D Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not1_out1 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:and1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_in1 Val:D Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_w1 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:input_in3 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:input_in2 Val:1 Dir:OUT Visited: 1 Type:PI]
        [Line:input_in1 Val:0 Dir:OUT Visited: 1 Type:PI]
        [Line:output_out4 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out3 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out2 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out1 Val:Dbar Dir:IN Visited: 0 Type:PO]

[Msg] Printing PI patterns 
     input_in3 X
     input_in2 1
     input_in1 0
Here !!!
---------------------------------------------------------
---------------------------------------------------------
TG for line #15 SA-0. Fault #30
[Msg0] Initialzed all line values to X and isVisited = false
[Msg1] Updated line : and1_in1 from linelist to [Line:and1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
[Msg2] Updating the maps 
[Msg] Printing PI patterns 
     input_in3 X
     input_in2 X
     input_in1 X
[Msg3] Current linelist status before Justify()
        [Line:and2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_out4 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out3 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not2_out2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_w2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not1_w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not1_out1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:and1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_w1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:input_in3 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:input_in2 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:input_in1 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:output_out4 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out3 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out2 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO]

[Msg4] Generating test patterns for line : [Line:and1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
[Msg5] Justifying line : [Line:and1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 1
Here 99
[Msg6] Equalizing fanin/fanout values line : [Line:input_in1 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg7] Updating linelist with line : [Line:input_in1 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg8] Updating the maps 
[Msg9] Concluding. Reached PI line : [Line:input_in1 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg10] All lines justified 
[Msg11] Updating linelist with line : [Line:input_in1 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg12] Updating the maps 
[Msg13] Current linelist status before Propagate() and after Justify()
        [Line:and2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_out4 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out3 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not2_out2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_w2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not1_w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not1_out1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:and1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_w1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:input_in3 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:input_in2 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:input_in1 Val:1 Dir:OUT Visited: 1 Type:PI]
        [Line:output_out4 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out3 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out2 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO]

[Msg14] Propagating Dbar for the line : and1_in1
[Msg15] Updating linelist with line : [Line:and1_in1 Val:Dbar Dir:IN Visited: 0 Type:INT_WIRE]
[Msg16] Updating the maps 
[Msg17] Updated linelist at this stage. - About to start  Propagate()
        [and2_w2 X IN V=0] 
        [and2_in3 X IN V=0] 
        [and2_out4 X OUT V=0] 
        [or2_in3 X IN V=0] 
        [or2_out2 X IN V=0] 
        [or2_out3 X OUT V=0] 
        [not2_w2 X IN V=0] 
        [not2_out2 X OUT V=0] 
        [or1_in2 X IN V=0] 
        [or1_in1 X IN V=0] 
        [or1_w2 X OUT V=0] 
        [not1_w1 X IN V=0] 
        [not1_out1 X OUT V=0] 
        [and1_in2 X IN V=0] 
        [and1_in1 Dbar IN V=0] 
        [and1_w1 X OUT V=0] 
        [input_in3 X OUT V=0] 
        [input_in2 X OUT V=0] 
        [input_in1 1 OUT V=1] 
        [output_out4 X IN V=0] 
        [output_out3 X IN V=0] 
        [output_out2 X IN V=0] 
        [output_out1 X IN V=0] 
[Msg18][Line:and1_in1 Val:Dbar Dir:IN Visited: 0 Type:INT_WIRE] is an input line to the component
[Msg19] Corresponding output line : and1_w1
[Msg20] Checking and1_in1 to be justified or not
[Msg21] Checking and1_in2 to be justified or not
[Msg22] Justify and1_in2 inside Propagate. line.direction == IN The line : [Line:and1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
[Msg23] Justifying line : [Line:and1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 1
Here 100
[Msg24] Equalizing fanin/fanout values line : [Line:input_in2 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg25] Updating linelist with line : [Line:input_in2 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg26] Updating the maps 
[Msg27] Concluding. Reached PI line : [Line:input_in2 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg28] Equalizing fanin/fanout values line : [Line:and1_w1 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg29] Updating linelist with line : [Line:and1_w1 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg30] Updating the maps 
[Msg31] All i/p lines justified for and1_w1 to Propagate. The line : [Line:and1_w1 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg32] Current linelist status inside Propagate() after all input line justification        [and2_w2 X IN V=0] 
        [and2_in3 X IN V=0] 
        [and2_out4 X OUT V=0] 
        [or2_in3 X IN V=0] 
        [or2_out2 X IN V=0] 
        [or2_out3 X OUT V=0] 
        [not2_w2 X IN V=0] 
        [not2_out2 X OUT V=0] 
        [or1_in2 X IN V=0] 
        [or1_in1 X IN V=0] 
        [or1_w2 X OUT V=0] 
        [not1_w1 X IN V=0] 
        [not1_out1 X OUT V=0] 
        [and1_in2 X IN V=0] 
        [and1_in1 Dbar IN V=0] 
        [and1_w1 Dbar OUT V=0] 
        [input_in3 X OUT V=0] 
        [input_in2 1 OUT V=1] 
        [input_in1 1 OUT V=1] 
        [output_out4 X IN V=0] 
        [output_out3 X IN V=0] 
        [output_out2 X IN V=0] 
        [output_out1 X IN V=0] 
[Msg33] error_val :Dbar and iv : 0
[Msg34] Input line : [Line:not1_w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] is propagated with val Dbar (error_val^iv)
[Msg35] Propagating Dbar for the line : not1_w1
[Msg36] Updating linelist with line : [Line:not1_w1 Val:Dbar Dir:IN Visited: 0 Type:INT_WIRE]
[Msg37] Updating the maps 
[Msg38] Updated linelist at this stage. - About to start  Propagate()
        [and2_w2 X IN V=0] 
        [and2_in3 X IN V=0] 
        [and2_out4 X OUT V=0] 
        [or2_in3 X IN V=0] 
        [or2_out2 X IN V=0] 
        [or2_out3 X OUT V=0] 
        [not2_w2 X IN V=0] 
        [not2_out2 X OUT V=0] 
        [or1_in2 X IN V=0] 
        [or1_in1 X IN V=0] 
        [or1_w2 X OUT V=0] 
        [not1_w1 Dbar IN V=0] 
        [not1_out1 X OUT V=0] 
        [and1_in2 X IN V=0] 
        [and1_in1 Dbar IN V=0] 
        [and1_w1 Dbar OUT V=0] 
        [input_in3 X OUT V=0] 
        [input_in2 1 OUT V=1] 
        [input_in1 1 OUT V=1] 
        [output_out4 X IN V=0] 
        [output_out3 X IN V=0] 
        [output_out2 X IN V=0] 
        [output_out1 X IN V=0] 
[Msg39][Line:not1_w1 Val:Dbar Dir:IN Visited: 0 Type:INT_WIRE] is an input line to the component
[Msg40] Corresponding output line : not1_out1
[Msg41] Checking not1_w1 to be justified or not
[Msg42] Equalizing fanin/fanout values line : [Line:not1_out1 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg43] Updating linelist with line : [Line:not1_out1 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg44] Updating the maps 
[Msg45] All i/p lines justified for not1_out1 to Propagate. The line : [Line:not1_out1 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg46] Current linelist status inside Propagate() after all input line justification        [and2_w2 X IN V=0] 
        [and2_in3 X IN V=0] 
        [and2_out4 X OUT V=0] 
        [or2_in3 X IN V=0] 
        [or2_out2 X IN V=0] 
        [or2_out3 X OUT V=0] 
        [not2_w2 X IN V=0] 
        [not2_out2 X OUT V=0] 
        [or1_in2 X IN V=0] 
        [or1_in1 X IN V=0] 
        [or1_w2 X OUT V=0] 
        [not1_w1 Dbar IN V=0] 
        [not1_out1 Dbar OUT V=0] 
        [and1_in2 X IN V=0] 
        [and1_in1 Dbar IN V=0] 
        [and1_w1 Dbar OUT V=0] 
        [input_in3 X OUT V=0] 
        [input_in2 1 OUT V=1] 
        [input_in1 1 OUT V=1] 
        [output_out4 X IN V=0] 
        [output_out3 X IN V=0] 
        [output_out2 X IN V=0] 
        [output_out1 X IN V=0] 
[Msg47] error_val :Dbar and iv : 1
[Msg48] Input line : [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO] is propagated with val D (error_val^iv)
[Msg49] Propagating D for the line : output_out1
[Msg50] Updating linelist with line : [Line:output_out1 Val:D Dir:IN Visited: 0 Type:PO]
[Msg51] Updating the maps 
[Msg52] Updated linelist at this stage. - About to start  Propagate()
        [and2_w2 X IN V=0] 
        [and2_in3 X IN V=0] 
        [and2_out4 X OUT V=0] 
        [or2_in3 X IN V=0] 
        [or2_out2 X IN V=0] 
        [or2_out3 X OUT V=0] 
        [not2_w2 X IN V=0] 
        [not2_out2 X OUT V=0] 
        [or1_in2 X IN V=0] 
        [or1_in1 X IN V=0] 
        [or1_w2 X OUT V=0] 
        [not1_w1 Dbar IN V=0] 
        [not1_out1 Dbar OUT V=0] 
        [and1_in2 X IN V=0] 
        [and1_in1 Dbar IN V=0] 
        [and1_w1 Dbar OUT V=0] 
        [input_in3 X OUT V=0] 
        [input_in2 1 OUT V=1] 
        [input_in1 1 OUT V=1] 
        [output_out4 X IN V=0] 
        [output_out3 X IN V=0] 
        [output_out2 X IN V=0] 
        [output_out1 D IN V=0] 
[Msg53] Concluding. Reached PO line : [Line:output_out1 Val:D Dir:IN Visited: 0 Type:PO]
[Msg54] Current linelist status after Propagate()
        [Line:and2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_out4 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out3 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not2_out2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_w2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not1_w1 Val:Dbar Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not1_out1 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:and1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_in1 Val:Dbar Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_w1 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:input_in3 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:input_in2 Val:1 Dir:OUT Visited: 1 Type:PI]
        [Line:input_in1 Val:1 Dir:OUT Visited: 1 Type:PI]
        [Line:output_out4 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out3 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out2 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out1 Val:D Dir:IN Visited: 0 Type:PO]

[Msg55] Updating linelist with line : [Line:and1_in1 Val:Dbar Dir:IN Visited: 0 Type:INT_WIRE]
[Msg56] Updating the maps 
[Msg57] Current linelist status after pattern generation()
        [Line:and2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_out4 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out3 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not2_out2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_w2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not1_w1 Val:Dbar Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not1_out1 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:and1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_in1 Val:Dbar Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_w1 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:input_in3 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:input_in2 Val:1 Dir:OUT Visited: 1 Type:PI]
        [Line:input_in1 Val:1 Dir:OUT Visited: 1 Type:PI]
        [Line:output_out4 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out3 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out2 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out1 Val:D Dir:IN Visited: 0 Type:PO]

[Msg] Printing PI patterns 
     input_in3 X
     input_in2 1
     input_in1 1
---------------------------------------------------------
---------------------------------------------------------
TG for line #16 SA-1. Fault #31
[Msg0] Initialzed all line values to X and isVisited = false
[Msg1] Updated line : and1_w1 from linelist to [Line:and1_w1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg2] Updating the maps 
[Msg] Printing PI patterns 
     input_in3 X
     input_in2 X
     input_in1 X
[Msg3] Current linelist status before Justify()
        [Line:and2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_out4 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out3 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not2_out2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_w2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not1_w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not1_out1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:and1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_w1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:input_in3 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:input_in2 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:input_in1 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:output_out4 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out3 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out2 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO]

[Msg4] Generating test patterns for line : [Line:and1_w1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg5] Justifying line : [Line:and1_w1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE] with value 0
Here 101
[Msg6] Equalizing fanin/fanout values line : [Line:and1_w1 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg7] One of the input lines of line : [Line:and1_w1 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE] to be justified
[Msg8] Trying line : [Line:and1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] to justify
[Msg9] Only [Line:and1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] of line : and1_w1 to be justified
[Msg10] Saving [Line:and1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] for future backtracking.
[Msg11] Justifying line : [Line:and1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 0
Here 102
[Msg12] Equalizing fanin/fanout values line : [Line:input_in2 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg13] Updating linelist with line : [Line:input_in2 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg14] Updating the maps 
[Msg15] Concluding. Reached PI line : [Line:input_in2 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg16] Updating linelist with line : [Line:and1_w1 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg17] Updating the maps 
[Msg18] All lines justified 
[Msg19] Updating linelist with line : [Line:and1_w1 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg20] Updating the maps 
[Msg21] Current linelist status before Propagate() and after Justify()
        [Line:and2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_out4 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out3 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not2_out2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_w2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not1_w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not1_out1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:and1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_w1 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:input_in3 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:input_in2 Val:0 Dir:OUT Visited: 1 Type:PI]
        [Line:input_in1 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:output_out4 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out3 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out2 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO]

[Msg22] Propagating D for the line : and1_w1
[Msg23] Updating linelist with line : [Line:and1_w1 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg24] Updating the maps 
[Msg25] Updated linelist at this stage. - About to start  Propagate()
        [and2_w2 X IN V=0] 
        [and2_in3 X IN V=0] 
        [and2_out4 X OUT V=0] 
        [or2_in3 X IN V=0] 
        [or2_out2 X IN V=0] 
        [or2_out3 X OUT V=0] 
        [not2_w2 X IN V=0] 
        [not2_out2 X OUT V=0] 
        [or1_in2 X IN V=0] 
        [or1_in1 X IN V=0] 
        [or1_w2 X OUT V=0] 
        [not1_w1 X IN V=0] 
        [not1_out1 X OUT V=0] 
        [and1_in2 X IN V=0] 
        [and1_in1 X IN V=0] 
        [and1_w1 D OUT V=0] 
        [input_in3 X OUT V=0] 
        [input_in2 0 OUT V=1] 
        [input_in1 X OUT V=0] 
        [output_out4 X IN V=0] 
        [output_out3 X IN V=0] 
        [output_out2 X IN V=0] 
        [output_out1 X IN V=0] 
[Msg26] Equalizing fanin/fanout values line : [Line:and1_w1 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg27] Updating linelist with line : [Line:and1_w1 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg28] Updating the maps 
[Msg29 Input line  [Line:not1_w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] is propagated
[Msg30] Propagating D for the line : not1_w1
[Msg31] Updating linelist with line : [Line:not1_w1 Val:D Dir:IN Visited: 0 Type:INT_WIRE]
[Msg32] Updating the maps 
[Msg33] Updated linelist at this stage. - About to start  Propagate()
        [and2_w2 X IN V=0] 
        [and2_in3 X IN V=0] 
        [and2_out4 X OUT V=0] 
        [or2_in3 X IN V=0] 
        [or2_out2 X IN V=0] 
        [or2_out3 X OUT V=0] 
        [not2_w2 X IN V=0] 
        [not2_out2 X OUT V=0] 
        [or1_in2 X IN V=0] 
        [or1_in1 X IN V=0] 
        [or1_w2 X OUT V=0] 
        [not1_w1 D IN V=0] 
        [not1_out1 X OUT V=0] 
        [and1_in2 X IN V=0] 
        [and1_in1 X IN V=0] 
        [and1_w1 D OUT V=0] 
        [input_in3 X OUT V=0] 
        [input_in2 0 OUT V=1] 
        [input_in1 X OUT V=0] 
        [output_out4 X IN V=0] 
        [output_out3 X IN V=0] 
        [output_out2 X IN V=0] 
        [output_out1 X IN V=0] 
[Msg34][Line:not1_w1 Val:D Dir:IN Visited: 0 Type:INT_WIRE] is an input line to the component
[Msg35] Corresponding output line : not1_out1
[Msg36] Checking not1_w1 to be justified or not
[Msg37] Equalizing fanin/fanout values line : [Line:not1_out1 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg38] Updating linelist with line : [Line:not1_out1 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg39] Updating the maps 
[Msg40] All i/p lines justified for not1_out1 to Propagate. The line : [Line:not1_out1 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg41] Current linelist status inside Propagate() after all input line justification        [and2_w2 X IN V=0] 
        [and2_in3 X IN V=0] 
        [and2_out4 X OUT V=0] 
        [or2_in3 X IN V=0] 
        [or2_out2 X IN V=0] 
        [or2_out3 X OUT V=0] 
        [not2_w2 X IN V=0] 
        [not2_out2 X OUT V=0] 
        [or1_in2 X IN V=0] 
        [or1_in1 X IN V=0] 
        [or1_w2 X OUT V=0] 
        [not1_w1 D IN V=0] 
        [not1_out1 D OUT V=0] 
        [and1_in2 X IN V=0] 
        [and1_in1 X IN V=0] 
        [and1_w1 D OUT V=0] 
        [input_in3 X OUT V=0] 
        [input_in2 0 OUT V=1] 
        [input_in1 X OUT V=0] 
        [output_out4 X IN V=0] 
        [output_out3 X IN V=0] 
        [output_out2 X IN V=0] 
        [output_out1 X IN V=0] 
[Msg42] error_val :D and iv : 1
[Msg43] Input line : [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO] is propagated with val Dbar (error_val^iv)
[Msg44] Propagating Dbar for the line : output_out1
[Msg45] Updating linelist with line : [Line:output_out1 Val:Dbar Dir:IN Visited: 0 Type:PO]
[Msg46] Updating the maps 
[Msg47] Updated linelist at this stage. - About to start  Propagate()
        [and2_w2 X IN V=0] 
        [and2_in3 X IN V=0] 
        [and2_out4 X OUT V=0] 
        [or2_in3 X IN V=0] 
        [or2_out2 X IN V=0] 
        [or2_out3 X OUT V=0] 
        [not2_w2 X IN V=0] 
        [not2_out2 X OUT V=0] 
        [or1_in2 X IN V=0] 
        [or1_in1 X IN V=0] 
        [or1_w2 X OUT V=0] 
        [not1_w1 D IN V=0] 
        [not1_out1 D OUT V=0] 
        [and1_in2 X IN V=0] 
        [and1_in1 X IN V=0] 
        [and1_w1 D OUT V=0] 
        [input_in3 X OUT V=0] 
        [input_in2 0 OUT V=1] 
        [input_in1 X OUT V=0] 
        [output_out4 X IN V=0] 
        [output_out3 X IN V=0] 
        [output_out2 X IN V=0] 
        [output_out1 Dbar IN V=0] 
[Msg48] Concluding. Reached PO line : [Line:output_out1 Val:Dbar Dir:IN Visited: 0 Type:PO]
[Msg49] Current linelist status after Propagate()
        [Line:and2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_out4 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out3 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not2_out2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_w2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not1_w1 Val:D Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not1_out1 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:and1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_w1 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:input_in3 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:input_in2 Val:0 Dir:OUT Visited: 1 Type:PI]
        [Line:input_in1 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:output_out4 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out3 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out2 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out1 Val:Dbar Dir:IN Visited: 0 Type:PO]

[Msg50] Updating linelist with line : [Line:and1_w1 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg51] Updating the maps 
[Msg52] Current linelist status after pattern generation()
        [Line:and2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_out4 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out3 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not2_out2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_w2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not1_w1 Val:D Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not1_out1 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:and1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_w1 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:input_in3 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:input_in2 Val:0 Dir:OUT Visited: 1 Type:PI]
        [Line:input_in1 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:output_out4 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out3 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out2 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out1 Val:Dbar Dir:IN Visited: 0 Type:PO]

[Msg] Printing PI patterns 
     input_in3 X
     input_in2 0
     input_in1 X
Here !!!
---------------------------------------------------------
---------------------------------------------------------
TG for line #16 SA-0. Fault #32
[Msg0] Initialzed all line values to X and isVisited = false
[Msg1] Updated line : and1_w1 from linelist to [Line:and1_w1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg2] Updating the maps 
[Msg] Printing PI patterns 
     input_in3 X
     input_in2 X
     input_in1 X
[Msg3] Current linelist status before Justify()
        [Line:and2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_out4 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out3 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not2_out2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_w2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not1_w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not1_out1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:and1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_w1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:input_in3 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:input_in2 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:input_in1 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:output_out4 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out3 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out2 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO]

[Msg4] Generating test patterns for line : [Line:and1_w1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg5] Justifying line : [Line:and1_w1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE] with value 1
Here 103
[Msg6] Equalizing fanin/fanout values line : [Line:and1_w1 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg7] inval = 1] Justifying all input lines for the line : [Line:and1_w1 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg8] Following lines need to be justified. (Total 2 lines)
        [Line:and1_w1] -->  [Line:and1_in1] [Line:and1_in2]
[Msg9] Justifying line : [Line:and1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 1
Here 104
[Msg10] Equalizing fanin/fanout values line : [Line:input_in1 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg11] Updating linelist with line : [Line:input_in1 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg12] Updating the maps 
[Msg13] Concluding. Reached PI line : [Line:input_in1 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg14] Updating linelist with line : [Line:and1_w1 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg15] Updating the maps 
[Msg16] Justifying line : [Line:and1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 1
Here 105
[Msg17] Equalizing fanin/fanout values line : [Line:input_in2 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg18] Updating linelist with line : [Line:input_in2 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg19] Updating the maps 
[Msg20] Concluding. Reached PI line : [Line:input_in2 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg21] Updating linelist with line : [Line:and1_w1 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg22] Updating the maps 
[Msg23] All lines justified 
[Msg24] Updating linelist with line : [Line:and1_w1 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg25] Updating the maps 
[Msg26] Current linelist status before Propagate() and after Justify()
        [Line:and2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_out4 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out3 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not2_out2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_w2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not1_w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not1_out1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:and1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_w1 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:input_in3 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:input_in2 Val:1 Dir:OUT Visited: 1 Type:PI]
        [Line:input_in1 Val:1 Dir:OUT Visited: 1 Type:PI]
        [Line:output_out4 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out3 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out2 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO]

[Msg27] Propagating Dbar for the line : and1_w1
[Msg28] Updating linelist with line : [Line:and1_w1 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg29] Updating the maps 
[Msg30] Updated linelist at this stage. - About to start  Propagate()
        [and2_w2 X IN V=0] 
        [and2_in3 X IN V=0] 
        [and2_out4 X OUT V=0] 
        [or2_in3 X IN V=0] 
        [or2_out2 X IN V=0] 
        [or2_out3 X OUT V=0] 
        [not2_w2 X IN V=0] 
        [not2_out2 X OUT V=0] 
        [or1_in2 X IN V=0] 
        [or1_in1 X IN V=0] 
        [or1_w2 X OUT V=0] 
        [not1_w1 X IN V=0] 
        [not1_out1 X OUT V=0] 
        [and1_in2 X IN V=0] 
        [and1_in1 X IN V=0] 
        [and1_w1 Dbar OUT V=0] 
        [input_in3 X OUT V=0] 
        [input_in2 1 OUT V=1] 
        [input_in1 1 OUT V=1] 
        [output_out4 X IN V=0] 
        [output_out3 X IN V=0] 
        [output_out2 X IN V=0] 
        [output_out1 X IN V=0] 
[Msg31] Equalizing fanin/fanout values line : [Line:and1_w1 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg32] Updating linelist with line : [Line:and1_w1 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg33] Updating the maps 
[Msg34 Input line  [Line:not1_w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] is propagated
[Msg35] Propagating Dbar for the line : not1_w1
[Msg36] Updating linelist with line : [Line:not1_w1 Val:Dbar Dir:IN Visited: 0 Type:INT_WIRE]
[Msg37] Updating the maps 
[Msg38] Updated linelist at this stage. - About to start  Propagate()
        [and2_w2 X IN V=0] 
        [and2_in3 X IN V=0] 
        [and2_out4 X OUT V=0] 
        [or2_in3 X IN V=0] 
        [or2_out2 X IN V=0] 
        [or2_out3 X OUT V=0] 
        [not2_w2 X IN V=0] 
        [not2_out2 X OUT V=0] 
        [or1_in2 X IN V=0] 
        [or1_in1 X IN V=0] 
        [or1_w2 X OUT V=0] 
        [not1_w1 Dbar IN V=0] 
        [not1_out1 X OUT V=0] 
        [and1_in2 X IN V=0] 
        [and1_in1 X IN V=0] 
        [and1_w1 Dbar OUT V=0] 
        [input_in3 X OUT V=0] 
        [input_in2 1 OUT V=1] 
        [input_in1 1 OUT V=1] 
        [output_out4 X IN V=0] 
        [output_out3 X IN V=0] 
        [output_out2 X IN V=0] 
        [output_out1 X IN V=0] 
[Msg39][Line:not1_w1 Val:Dbar Dir:IN Visited: 0 Type:INT_WIRE] is an input line to the component
[Msg40] Corresponding output line : not1_out1
[Msg41] Checking not1_w1 to be justified or not
[Msg42] Equalizing fanin/fanout values line : [Line:not1_out1 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg43] Updating linelist with line : [Line:not1_out1 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg44] Updating the maps 
[Msg45] All i/p lines justified for not1_out1 to Propagate. The line : [Line:not1_out1 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg46] Current linelist status inside Propagate() after all input line justification        [and2_w2 X IN V=0] 
        [and2_in3 X IN V=0] 
        [and2_out4 X OUT V=0] 
        [or2_in3 X IN V=0] 
        [or2_out2 X IN V=0] 
        [or2_out3 X OUT V=0] 
        [not2_w2 X IN V=0] 
        [not2_out2 X OUT V=0] 
        [or1_in2 X IN V=0] 
        [or1_in1 X IN V=0] 
        [or1_w2 X OUT V=0] 
        [not1_w1 Dbar IN V=0] 
        [not1_out1 Dbar OUT V=0] 
        [and1_in2 X IN V=0] 
        [and1_in1 X IN V=0] 
        [and1_w1 Dbar OUT V=0] 
        [input_in3 X OUT V=0] 
        [input_in2 1 OUT V=1] 
        [input_in1 1 OUT V=1] 
        [output_out4 X IN V=0] 
        [output_out3 X IN V=0] 
        [output_out2 X IN V=0] 
        [output_out1 X IN V=0] 
[Msg47] error_val :Dbar and iv : 1
[Msg48] Input line : [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO] is propagated with val D (error_val^iv)
[Msg49] Propagating D for the line : output_out1
[Msg50] Updating linelist with line : [Line:output_out1 Val:D Dir:IN Visited: 0 Type:PO]
[Msg51] Updating the maps 
[Msg52] Updated linelist at this stage. - About to start  Propagate()
        [and2_w2 X IN V=0] 
        [and2_in3 X IN V=0] 
        [and2_out4 X OUT V=0] 
        [or2_in3 X IN V=0] 
        [or2_out2 X IN V=0] 
        [or2_out3 X OUT V=0] 
        [not2_w2 X IN V=0] 
        [not2_out2 X OUT V=0] 
        [or1_in2 X IN V=0] 
        [or1_in1 X IN V=0] 
        [or1_w2 X OUT V=0] 
        [not1_w1 Dbar IN V=0] 
        [not1_out1 Dbar OUT V=0] 
        [and1_in2 X IN V=0] 
        [and1_in1 X IN V=0] 
        [and1_w1 Dbar OUT V=0] 
        [input_in3 X OUT V=0] 
        [input_in2 1 OUT V=1] 
        [input_in1 1 OUT V=1] 
        [output_out4 X IN V=0] 
        [output_out3 X IN V=0] 
        [output_out2 X IN V=0] 
        [output_out1 D IN V=0] 
[Msg53] Concluding. Reached PO line : [Line:output_out1 Val:D Dir:IN Visited: 0 Type:PO]
[Msg54] Current linelist status after Propagate()
        [Line:and2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_out4 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out3 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not2_out2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_w2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not1_w1 Val:Dbar Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not1_out1 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:and1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_w1 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:input_in3 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:input_in2 Val:1 Dir:OUT Visited: 1 Type:PI]
        [Line:input_in1 Val:1 Dir:OUT Visited: 1 Type:PI]
        [Line:output_out4 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out3 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out2 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out1 Val:D Dir:IN Visited: 0 Type:PO]

[Msg55] Updating linelist with line : [Line:and1_w1 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg56] Updating the maps 
[Msg57] Current linelist status after pattern generation()
        [Line:and2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and2_out4 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or2_in3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or2_out3 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not2_w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not2_out2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:or1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:or1_w2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:not1_w1 Val:Dbar Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:not1_out1 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:and1_in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:and1_w1 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:input_in3 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:input_in2 Val:1 Dir:OUT Visited: 1 Type:PI]
        [Line:input_in1 Val:1 Dir:OUT Visited: 1 Type:PI]
        [Line:output_out4 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out3 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out2 Val:X Dir:IN Visited: 0 Type:PO]
        [Line:output_out1 Val:D Dir:IN Visited: 0 Type:PO]

[Msg] Printing PI patterns 
     input_in3 X
     input_in2 1
     input_in1 1
---------------------------------------------------------
---------------------------------------------------------
---------------------------------------------------------
---------------------------------------------------------
---------------------------------------------------------
---------------------------------------------------------
---------------------------------------------------------
---------------------------------------------------------
---------------------------------------------------------
---------------------------------------------------------
---------------------------------------------------------
---------------------------------------------------------
---------------------------------------------------------
---------------------------------------------------------
#########################################################
