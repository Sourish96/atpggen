#########################################################
---------------------------------------------------------
---------------------------------------------------------
TG for line #1 SA-1. Fault #1
[Msg0] Initialzed all line values to X and isVisited = false
[Msg1] Updated line : nand4 _w3 from linelist to [Line:nand4 _w3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
[Msg2] Updating the maps 
[Msg] Printing PI patterns 
     input_in2 X
     input_in1 X
[Msg3] Current linelist status before Justify()
        [Line:nand4 _w3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _out1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand3 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w3 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand2 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _w2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand1 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _w1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:input_in2 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:input_in1 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO]

[Msg4] Generating test patterns for line : [Line:nand4 _w3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
[Msg5] Justifying line : [Line:nand4 _w3 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 0
Here 1
[Msg6] Equalizing fanin/fanout values line : [Line:nand3 _w3 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg7] inval = 1] Justifying all input lines for the line : [Line:nand3 _w3 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg8] Following lines need to be justified. (Total 2 lines)
        [Line:nand3 _w3] -->  [Line:nand3 _in2] [Line:nand3 _w1]
[Msg9] Justifying line : [Line:nand3 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 1
Here 2
[Msg10] Equalizing fanin/fanout values line : [Line:input_in2 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg11] Updating linelist with line : [Line:input_in2 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg12] Updating the maps 
[Msg13] Concluding. Reached PI line : [Line:input_in2 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg14] Updating linelist with line : [Line:nand3 _w3 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg15] Updating the maps 
[Msg16] Justifying line : [Line:nand3 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 1
Here 3
[Msg17] Equalizing fanin/fanout values line : [Line:nand1 _w1 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg18] One of the input lines of line : [Line:nand1 _w1 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE] to be justified
[Msg19] Trying line : [Line:nand1 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] to justify
[Msg20] Only [Line:nand1 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] of line : nand1 _w1 to be justified
[Msg21] Saving [Line:nand1 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] for future backtracking.
[Msg22] Justifying line : [Line:nand1 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 0
Here 4
[Msg23] Equalizing fanin/fanout values line : [Line:input_in1 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg24] Updating linelist with line : [Line:input_in1 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg25] Updating the maps 
[Msg26] Concluding. Reached PI line : [Line:input_in1 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg27] Updating linelist with line : [Line:nand1 _w1 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg28] Updating the maps 
[Msg29] Updating linelist with line : [Line:nand3 _w3 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg30] Updating the maps 
[Msg31] All lines justified 
[Msg32] Updating linelist with line : [Line:nand3 _w3 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg33] Updating the maps 
[Msg34] Current linelist status before Propagate() and after Justify()
        [Line:nand4 _w3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _out1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand3 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w3 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:nand2 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _w2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand1 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _w1 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:input_in2 Val:1 Dir:OUT Visited: 1 Type:PI]
        [Line:input_in1 Val:0 Dir:OUT Visited: 1 Type:PI]
        [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO]

[Msg35] Propagating D for the line : nand4 _w3
[Msg36] Updating linelist with line : [Line:nand4 _w3 Val:D Dir:IN Visited: 0 Type:INT_WIRE]
[Msg37] Updating the maps 
[Msg38] Updated linelist at this stage. - About to start  Propagate()
        [nand4 _w3 D IN V=0] 
        [nand4 _w2 X IN V=0] 
        [nand4 _out1 X OUT V=0] 
        [nand3 _in2 X IN V=0] 
        [nand3 _w1 X IN V=0] 
        [nand3 _w3 0 OUT V=1] 
        [nand2 _w1 X IN V=0] 
        [nand2 _in1 X IN V=0] 
        [nand2 _w2 X OUT V=0] 
        [nand1 _in2 X IN V=0] 
        [nand1 _in1 X IN V=0] 
        [nand1 _w1 1 OUT V=1] 
        [input_in2 1 OUT V=1] 
        [input_in1 0 OUT V=1] 
        [output_out1 X IN V=0] 
[Msg39][Line:nand4 _w3 Val:D Dir:IN Visited: 0 Type:INT_WIRE] is an input line to the component
[Msg40] Corresponding output line : nand4 _out1
[Msg41] Checking nand4 _w3 to be justified or not
[Msg42] Checking nand4 _w2 to be justified or not
[Msg43] Justify nand4 _w2 inside Propagate. line.direction == IN The line : [Line:nand4 _w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
[Msg44] Justifying line : [Line:nand4 _w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 1
Here 5
[Msg45] Equalizing fanin/fanout values line : [Line:nand2 _w2 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg46] One of the input lines of line : [Line:nand2 _w2 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE] to be justified
[Msg47] Trying line : [Line:nand2 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] to justify
[Msg48] Only [Line:nand2 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] of line : nand2 _w2 to be justified
[Msg49] Saving [Line:nand2 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] for future backtracking.
[Msg50] Justifying line : [Line:nand2 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 0
Here 6
[Msg51] Equalizing fanin/fanout values line : [Line:nand1 _w1 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg52] inval = 1] Justifying all input lines for the line : [Line:nand1 _w1 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg53] Following lines need to be justified. (Total 2 lines)
        [Line:nand1 _w1] -->  [Line:nand1 _in2] [Line:nand1 _in1]
[Msg54] Justifying line : [Line:nand1 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 1
Here 7
[Msg55] 2) Line : [Line:input_in2 Val:1 Dir:OUT Visited: 1 Type:PI] already justified with value1
[Msg56] Updating linelist with line : [Line:nand1 _w1 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg57] Updating the maps 
[Msg58] Justifying line : [Line:nand1 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 1
Here 8
[Msg59] 1) Cannot justify line : [Line:input_in1 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg60] 2) Cannot justify line : [Line:nand1 _w1 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg61] Trying line : [Line:nand2 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] to justify
[Msg62] Only [Line:nand2 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] of line : nand2 _w2 to be justified
[Msg63] Saving [Line:nand2 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] for future backtracking.
[Msg64] Justifying line : [Line:nand2 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 0
Here 9
[Msg65] 2) Line : [Line:input_in1 Val:0 Dir:OUT Visited: 1 Type:PI] already justified with value0
[Msg66] Updating linelist with line : [Line:nand2 _w2 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg67] Updating the maps 
[Msg68] Equalizing fanin/fanout values line : [Line:nand4 _out1 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg69] Updating linelist with line : [Line:nand4 _out1 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg70] Updating the maps 
[Msg71] All i/p lines justified for nand4 _out1 to Propagate. The line : [Line:nand4 _out1 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg72] Current linelist status inside Propagate() after all input line justification        [nand4 _w3 D IN V=0] 
        [nand4 _w2 X IN V=0] 
        [nand4 _out1 D OUT V=0] 
        [nand3 _in2 X IN V=0] 
        [nand3 _w1 X IN V=0] 
        [nand3 _w3 0 OUT V=1] 
        [nand2 _w1 X IN V=0] 
        [nand2 _in1 X IN V=0] 
        [nand2 _w2 1 OUT V=1] 
        [nand1 _in2 X IN V=0] 
        [nand1 _in1 X IN V=0] 
        [nand1 _w1 0 OUT V=1] 
        [input_in2 1 OUT V=1] 
        [input_in1 0 OUT V=1] 
        [output_out1 X IN V=0] 
[Msg73] error_val :D and iv : 1
[Msg74] Input line : [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO] is propagated with val Dbar (error_val^iv)
[Msg75] Propagating Dbar for the line : output_out1
[Msg76] Updating linelist with line : [Line:output_out1 Val:Dbar Dir:IN Visited: 0 Type:PO]
[Msg77] Updating the maps 
[Msg78] Updated linelist at this stage. - About to start  Propagate()
        [nand4 _w3 D IN V=0] 
        [nand4 _w2 X IN V=0] 
        [nand4 _out1 D OUT V=0] 
        [nand3 _in2 X IN V=0] 
        [nand3 _w1 X IN V=0] 
        [nand3 _w3 0 OUT V=1] 
        [nand2 _w1 X IN V=0] 
        [nand2 _in1 X IN V=0] 
        [nand2 _w2 1 OUT V=1] 
        [nand1 _in2 X IN V=0] 
        [nand1 _in1 X IN V=0] 
        [nand1 _w1 0 OUT V=1] 
        [input_in2 1 OUT V=1] 
        [input_in1 0 OUT V=1] 
        [output_out1 Dbar IN V=0] 
[Msg79] Concluding. Reached PO line : [Line:output_out1 Val:Dbar Dir:IN Visited: 0 Type:PO]
[Msg80] Current linelist status after Propagate()
        [Line:nand4 _w3 Val:D Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _out1 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand3 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w3 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:nand2 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _w2 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:nand1 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _w1 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:input_in2 Val:1 Dir:OUT Visited: 1 Type:PI]
        [Line:input_in1 Val:0 Dir:OUT Visited: 1 Type:PI]
        [Line:output_out1 Val:Dbar Dir:IN Visited: 0 Type:PO]

[Msg81] Updating linelist with line : [Line:nand4 _w3 Val:D Dir:IN Visited: 0 Type:INT_WIRE]
[Msg82] Updating the maps 
[Msg83] Current linelist status after pattern generation()
        [Line:nand4 _w3 Val:D Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _out1 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand3 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w3 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:nand2 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _w2 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:nand1 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _w1 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:input_in2 Val:1 Dir:OUT Visited: 1 Type:PI]
        [Line:input_in1 Val:0 Dir:OUT Visited: 1 Type:PI]
        [Line:output_out1 Val:Dbar Dir:IN Visited: 0 Type:PO]

[Msg] Printing PI patterns 
     input_in2 1
     input_in1 0
here file
Here !!!
---------------------------------------------------------
---------------------------------------------------------
TG for line #1 SA-0. Fault #2
[Msg0] Initialzed all line values to X and isVisited = false
[Msg1] Updated line : nand4 _w3 from linelist to [Line:nand4 _w3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
[Msg2] Updating the maps 
[Msg] Printing PI patterns 
     input_in2 X
     input_in1 X
[Msg3] Current linelist status before Justify()
        [Line:nand4 _w3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _out1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand3 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w3 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand2 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _w2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand1 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _w1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:input_in2 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:input_in1 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO]

[Msg4] Generating test patterns for line : [Line:nand4 _w3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
[Msg5] Justifying line : [Line:nand4 _w3 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 1
Here 10
[Msg6] Equalizing fanin/fanout values line : [Line:nand3 _w3 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg7] One of the input lines of line : [Line:nand3 _w3 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE] to be justified
[Msg8] Trying line : [Line:nand3 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] to justify
[Msg9] Only [Line:nand3 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] of line : nand3 _w3 to be justified
[Msg10] Saving [Line:nand3 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] for future backtracking.
[Msg11] Justifying line : [Line:nand3 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 0
Here 11
[Msg12] Equalizing fanin/fanout values line : [Line:nand1 _w1 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg13] inval = 1] Justifying all input lines for the line : [Line:nand1 _w1 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg14] Following lines need to be justified. (Total 2 lines)
        [Line:nand1 _w1] -->  [Line:nand1 _in1] [Line:nand1 _in2]
[Msg15] Justifying line : [Line:nand1 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 1
Here 12
[Msg16] Equalizing fanin/fanout values line : [Line:input_in1 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg17] Updating linelist with line : [Line:input_in1 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg18] Updating the maps 
[Msg19] Concluding. Reached PI line : [Line:input_in1 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg20] Updating linelist with line : [Line:nand1 _w1 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg21] Updating the maps 
[Msg22] Justifying line : [Line:nand1 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 1
Here 13
[Msg23] Equalizing fanin/fanout values line : [Line:input_in2 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg24] Updating linelist with line : [Line:input_in2 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg25] Updating the maps 
[Msg26] Concluding. Reached PI line : [Line:input_in2 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg27] Updating linelist with line : [Line:nand1 _w1 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg28] Updating the maps 
[Msg29] Updating linelist with line : [Line:nand3 _w3 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg30] Updating the maps 
[Msg31] All lines justified 
[Msg32] Updating linelist with line : [Line:nand3 _w3 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg33] Updating the maps 
[Msg34] Current linelist status before Propagate() and after Justify()
        [Line:nand4 _w3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _out1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand3 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w3 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:nand2 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _w2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand1 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _w1 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:input_in2 Val:1 Dir:OUT Visited: 1 Type:PI]
        [Line:input_in1 Val:1 Dir:OUT Visited: 1 Type:PI]
        [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO]

[Msg35] Propagating Dbar for the line : nand4 _w3
[Msg36] Updating linelist with line : [Line:nand4 _w3 Val:Dbar Dir:IN Visited: 0 Type:INT_WIRE]
[Msg37] Updating the maps 
[Msg38] Updated linelist at this stage. - About to start  Propagate()
        [nand4 _w3 Dbar IN V=0] 
        [nand4 _w2 X IN V=0] 
        [nand4 _out1 X OUT V=0] 
        [nand3 _in2 X IN V=0] 
        [nand3 _w1 X IN V=0] 
        [nand3 _w3 1 OUT V=1] 
        [nand2 _w1 X IN V=0] 
        [nand2 _in1 X IN V=0] 
        [nand2 _w2 X OUT V=0] 
        [nand1 _in2 X IN V=0] 
        [nand1 _in1 X IN V=0] 
        [nand1 _w1 0 OUT V=1] 
        [input_in2 1 OUT V=1] 
        [input_in1 1 OUT V=1] 
        [output_out1 X IN V=0] 
[Msg39][Line:nand4 _w3 Val:Dbar Dir:IN Visited: 0 Type:INT_WIRE] is an input line to the component
[Msg40] Corresponding output line : nand4 _out1
[Msg41] Checking nand4 _w2 to be justified or not
[Msg42] Justify nand4 _w2 inside Propagate. line.direction == IN The line : [Line:nand4 _w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
[Msg43] Justifying line : [Line:nand4 _w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 1
Here 14
[Msg44] Equalizing fanin/fanout values line : [Line:nand2 _w2 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg45] One of the input lines of line : [Line:nand2 _w2 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE] to be justified
[Msg46] Trying line : [Line:nand2 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] to justify
[Msg47] Only [Line:nand2 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] of line : nand2 _w2 to be justified
[Msg48] Saving [Line:nand2 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] for future backtracking.
[Msg49] Justifying line : [Line:nand2 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 0
Here 15
[Msg50] 1) Cannot justify line : [Line:input_in1 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg51] Trying line : [Line:nand2 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] to justify
[Msg52] Only [Line:nand2 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] of line : nand2 _w2 to be justified
[Msg53] Saving [Line:nand2 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] for future backtracking.
[Msg54] Justifying line : [Line:nand2 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 0
Here 16
[Msg55] Equalizing fanin/fanout values line : [Line:nand1 _w1 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg56] inval = 1] Justifying all input lines for the line : [Line:nand1 _w1 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg57] Following lines need to be justified. (Total 2 lines)
        [Line:nand1 _w1] -->  [Line:nand1 _in1] [Line:nand1 _in2]
[Msg58] Justifying line : [Line:nand1 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 1
Here 17
[Msg59] 2) Line : [Line:input_in1 Val:1 Dir:OUT Visited: 1 Type:PI] already justified with value1
[Msg60] Updating linelist with line : [Line:nand1 _w1 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg61] Updating the maps 
[Msg62] Justifying line : [Line:nand1 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 1
Here 18
[Msg63] 2) Line : [Line:input_in2 Val:1 Dir:OUT Visited: 1 Type:PI] already justified with value1
[Msg64] Updating linelist with line : [Line:nand1 _w1 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg65] Updating the maps 
[Msg66] Updating linelist with line : [Line:nand2 _w2 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg67] Updating the maps 
[Msg68] Checking nand4 _w3 to be justified or not
[Msg69] Equalizing fanin/fanout values line : [Line:nand4 _out1 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg70] Updating linelist with line : [Line:nand4 _out1 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg71] Updating the maps 
[Msg72] All i/p lines justified for nand4 _out1 to Propagate. The line : [Line:nand4 _out1 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg73] Current linelist status inside Propagate() after all input line justification        [nand4 _w3 Dbar IN V=0] 
        [nand4 _w2 X IN V=0] 
        [nand4 _out1 Dbar OUT V=0] 
        [nand3 _in2 X IN V=0] 
        [nand3 _w1 X IN V=0] 
        [nand3 _w3 1 OUT V=1] 
        [nand2 _w1 X IN V=0] 
        [nand2 _in1 X IN V=0] 
        [nand2 _w2 1 OUT V=1] 
        [nand1 _in2 X IN V=0] 
        [nand1 _in1 X IN V=0] 
        [nand1 _w1 0 OUT V=1] 
        [input_in2 1 OUT V=1] 
        [input_in1 1 OUT V=1] 
        [output_out1 X IN V=0] 
[Msg74] error_val :Dbar and iv : 1
[Msg75] Input line : [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO] is propagated with val D (error_val^iv)
[Msg76] Propagating D for the line : output_out1
[Msg77] Updating linelist with line : [Line:output_out1 Val:D Dir:IN Visited: 0 Type:PO]
[Msg78] Updating the maps 
[Msg79] Updated linelist at this stage. - About to start  Propagate()
        [nand4 _w3 Dbar IN V=0] 
        [nand4 _w2 X IN V=0] 
        [nand4 _out1 Dbar OUT V=0] 
        [nand3 _in2 X IN V=0] 
        [nand3 _w1 X IN V=0] 
        [nand3 _w3 1 OUT V=1] 
        [nand2 _w1 X IN V=0] 
        [nand2 _in1 X IN V=0] 
        [nand2 _w2 1 OUT V=1] 
        [nand1 _in2 X IN V=0] 
        [nand1 _in1 X IN V=0] 
        [nand1 _w1 0 OUT V=1] 
        [input_in2 1 OUT V=1] 
        [input_in1 1 OUT V=1] 
        [output_out1 D IN V=0] 
[Msg80] Concluding. Reached PO line : [Line:output_out1 Val:D Dir:IN Visited: 0 Type:PO]
[Msg81] Current linelist status after Propagate()
        [Line:nand4 _w3 Val:Dbar Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _out1 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand3 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w3 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:nand2 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _w2 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:nand1 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _w1 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:input_in2 Val:1 Dir:OUT Visited: 1 Type:PI]
        [Line:input_in1 Val:1 Dir:OUT Visited: 1 Type:PI]
        [Line:output_out1 Val:D Dir:IN Visited: 0 Type:PO]

[Msg82] Updating linelist with line : [Line:nand4 _w3 Val:Dbar Dir:IN Visited: 0 Type:INT_WIRE]
[Msg83] Updating the maps 
[Msg84] Current linelist status after pattern generation()
        [Line:nand4 _w3 Val:Dbar Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _out1 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand3 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w3 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:nand2 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _w2 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:nand1 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _w1 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:input_in2 Val:1 Dir:OUT Visited: 1 Type:PI]
        [Line:input_in1 Val:1 Dir:OUT Visited: 1 Type:PI]
        [Line:output_out1 Val:D Dir:IN Visited: 0 Type:PO]

[Msg] Printing PI patterns 
     input_in2 1
     input_in1 1
---------------------------------------------------------
---------------------------------------------------------
TG for line #2 SA-1. Fault #3
[Msg0] Initialzed all line values to X and isVisited = false
[Msg1] Updated line : nand4 _w2 from linelist to [Line:nand4 _w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
[Msg2] Updating the maps 
[Msg] Printing PI patterns 
     input_in2 X
     input_in1 X
[Msg3] Current linelist status before Justify()
        [Line:nand4 _w3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _out1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand3 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w3 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand2 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _w2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand1 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _w1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:input_in2 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:input_in1 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO]

[Msg4] Generating test patterns for line : [Line:nand4 _w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
[Msg5] Justifying line : [Line:nand4 _w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 0
Here 19
[Msg6] Equalizing fanin/fanout values line : [Line:nand2 _w2 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg7] inval = 1] Justifying all input lines for the line : [Line:nand2 _w2 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg8] Following lines need to be justified. (Total 2 lines)
        [Line:nand2 _w2] -->  [Line:nand2 _w1] [Line:nand2 _in1]
[Msg9] Justifying line : [Line:nand2 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 1
Here 20
[Msg10] Equalizing fanin/fanout values line : [Line:nand1 _w1 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg11] One of the input lines of line : [Line:nand1 _w1 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE] to be justified
[Msg12] Trying line : [Line:nand1 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] to justify
[Msg13] Only [Line:nand1 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] of line : nand1 _w1 to be justified
[Msg14] Saving [Line:nand1 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] for future backtracking.
[Msg15] Justifying line : [Line:nand1 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 0
Here 21
[Msg16] Equalizing fanin/fanout values line : [Line:input_in2 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg17] Updating linelist with line : [Line:input_in2 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg18] Updating the maps 
[Msg19] Concluding. Reached PI line : [Line:input_in2 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg20] Updating linelist with line : [Line:nand1 _w1 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg21] Updating the maps 
[Msg22] Updating linelist with line : [Line:nand2 _w2 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg23] Updating the maps 
[Msg24] Justifying line : [Line:nand2 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 1
Here 22
[Msg25] Equalizing fanin/fanout values line : [Line:input_in1 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg26] Updating linelist with line : [Line:input_in1 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg27] Updating the maps 
[Msg28] Concluding. Reached PI line : [Line:input_in1 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg29] Updating linelist with line : [Line:nand2 _w2 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg30] Updating the maps 
[Msg31] All lines justified 
[Msg32] Updating linelist with line : [Line:nand2 _w2 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg33] Updating the maps 
[Msg34] Current linelist status before Propagate() and after Justify()
        [Line:nand4 _w3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _out1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand3 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w3 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand2 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _w2 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:nand1 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _w1 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:input_in2 Val:0 Dir:OUT Visited: 1 Type:PI]
        [Line:input_in1 Val:1 Dir:OUT Visited: 1 Type:PI]
        [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO]

[Msg35] Propagating D for the line : nand4 _w2
[Msg36] Updating linelist with line : [Line:nand4 _w2 Val:D Dir:IN Visited: 0 Type:INT_WIRE]
[Msg37] Updating the maps 
[Msg38] Updated linelist at this stage. - About to start  Propagate()
        [nand4 _w3 X IN V=0] 
        [nand4 _w2 D IN V=0] 
        [nand4 _out1 X OUT V=0] 
        [nand3 _in2 X IN V=0] 
        [nand3 _w1 X IN V=0] 
        [nand3 _w3 X OUT V=0] 
        [nand2 _w1 X IN V=0] 
        [nand2 _in1 X IN V=0] 
        [nand2 _w2 0 OUT V=1] 
        [nand1 _in2 X IN V=0] 
        [nand1 _in1 X IN V=0] 
        [nand1 _w1 1 OUT V=1] 
        [input_in2 0 OUT V=1] 
        [input_in1 1 OUT V=1] 
        [output_out1 X IN V=0] 
[Msg39][Line:nand4 _w2 Val:D Dir:IN Visited: 0 Type:INT_WIRE] is an input line to the component
[Msg40] Corresponding output line : nand4 _out1
[Msg41] Checking nand4 _w3 to be justified or not
[Msg42] Justify nand4 _w3 inside Propagate. line.direction == IN The line : [Line:nand4 _w3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
[Msg43] Justifying line : [Line:nand4 _w3 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 1
Here 23
[Msg44] Equalizing fanin/fanout values line : [Line:nand3 _w3 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg45] One of the input lines of line : [Line:nand3 _w3 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE] to be justified
[Msg46] Trying line : [Line:nand3 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] to justify
[Msg47] Only [Line:nand3 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] of line : nand3 _w3 to be justified
[Msg48] Saving [Line:nand3 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] for future backtracking.
[Msg49] Justifying line : [Line:nand3 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 0
Here 24
[Msg50] 2) Line : [Line:input_in2 Val:0 Dir:OUT Visited: 1 Type:PI] already justified with value0
[Msg51] Updating linelist with line : [Line:nand3 _w3 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg52] Updating the maps 
[Msg53] Checking nand4 _w2 to be justified or not
[Msg54] Equalizing fanin/fanout values line : [Line:nand4 _out1 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg55] Updating linelist with line : [Line:nand4 _out1 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg56] Updating the maps 
[Msg57] All i/p lines justified for nand4 _out1 to Propagate. The line : [Line:nand4 _out1 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg58] Current linelist status inside Propagate() after all input line justification        [nand4 _w3 X IN V=0] 
        [nand4 _w2 D IN V=0] 
        [nand4 _out1 D OUT V=0] 
        [nand3 _in2 X IN V=0] 
        [nand3 _w1 X IN V=0] 
        [nand3 _w3 1 OUT V=1] 
        [nand2 _w1 X IN V=0] 
        [nand2 _in1 X IN V=0] 
        [nand2 _w2 0 OUT V=1] 
        [nand1 _in2 X IN V=0] 
        [nand1 _in1 X IN V=0] 
        [nand1 _w1 1 OUT V=1] 
        [input_in2 0 OUT V=1] 
        [input_in1 1 OUT V=1] 
        [output_out1 X IN V=0] 
[Msg59] error_val :D and iv : 1
[Msg60] Input line : [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO] is propagated with val Dbar (error_val^iv)
[Msg61] Propagating Dbar for the line : output_out1
[Msg62] Updating linelist with line : [Line:output_out1 Val:Dbar Dir:IN Visited: 0 Type:PO]
[Msg63] Updating the maps 
[Msg64] Updated linelist at this stage. - About to start  Propagate()
        [nand4 _w3 X IN V=0] 
        [nand4 _w2 D IN V=0] 
        [nand4 _out1 D OUT V=0] 
        [nand3 _in2 X IN V=0] 
        [nand3 _w1 X IN V=0] 
        [nand3 _w3 1 OUT V=1] 
        [nand2 _w1 X IN V=0] 
        [nand2 _in1 X IN V=0] 
        [nand2 _w2 0 OUT V=1] 
        [nand1 _in2 X IN V=0] 
        [nand1 _in1 X IN V=0] 
        [nand1 _w1 1 OUT V=1] 
        [input_in2 0 OUT V=1] 
        [input_in1 1 OUT V=1] 
        [output_out1 Dbar IN V=0] 
[Msg65] Concluding. Reached PO line : [Line:output_out1 Val:Dbar Dir:IN Visited: 0 Type:PO]
[Msg66] Current linelist status after Propagate()
        [Line:nand4 _w3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _w2 Val:D Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _out1 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand3 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w3 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:nand2 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _w2 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:nand1 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _w1 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:input_in2 Val:0 Dir:OUT Visited: 1 Type:PI]
        [Line:input_in1 Val:1 Dir:OUT Visited: 1 Type:PI]
        [Line:output_out1 Val:Dbar Dir:IN Visited: 0 Type:PO]

[Msg67] Updating linelist with line : [Line:nand4 _w2 Val:D Dir:IN Visited: 0 Type:INT_WIRE]
[Msg68] Updating the maps 
[Msg69] Current linelist status after pattern generation()
        [Line:nand4 _w3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _w2 Val:D Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _out1 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand3 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w3 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:nand2 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _w2 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:nand1 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _w1 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:input_in2 Val:0 Dir:OUT Visited: 1 Type:PI]
        [Line:input_in1 Val:1 Dir:OUT Visited: 1 Type:PI]
        [Line:output_out1 Val:Dbar Dir:IN Visited: 0 Type:PO]

[Msg] Printing PI patterns 
     input_in2 0
     input_in1 1
Here !!!
---------------------------------------------------------
---------------------------------------------------------
TG for line #2 SA-0. Fault #4
[Msg0] Initialzed all line values to X and isVisited = false
[Msg1] Updated line : nand4 _w2 from linelist to [Line:nand4 _w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
[Msg2] Updating the maps 
[Msg] Printing PI patterns 
     input_in2 X
     input_in1 X
[Msg3] Current linelist status before Justify()
        [Line:nand4 _w3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _out1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand3 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w3 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand2 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _w2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand1 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _w1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:input_in2 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:input_in1 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO]

[Msg4] Generating test patterns for line : [Line:nand4 _w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
[Msg5] Justifying line : [Line:nand4 _w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 1
Here 25
[Msg6] Equalizing fanin/fanout values line : [Line:nand2 _w2 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg7] One of the input lines of line : [Line:nand2 _w2 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE] to be justified
[Msg8] Trying line : [Line:nand2 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] to justify
[Msg9] Only [Line:nand2 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] of line : nand2 _w2 to be justified
[Msg10] Saving [Line:nand2 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] for future backtracking.
[Msg11] Justifying line : [Line:nand2 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 0
Here 26
[Msg12] Equalizing fanin/fanout values line : [Line:input_in1 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg13] Updating linelist with line : [Line:input_in1 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg14] Updating the maps 
[Msg15] Concluding. Reached PI line : [Line:input_in1 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg16] Updating linelist with line : [Line:nand2 _w2 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg17] Updating the maps 
[Msg18] All lines justified 
[Msg19] Updating linelist with line : [Line:nand2 _w2 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg20] Updating the maps 
[Msg21] Current linelist status before Propagate() and after Justify()
        [Line:nand4 _w3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _out1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand3 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w3 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand2 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _w2 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:nand1 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _w1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:input_in2 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:input_in1 Val:0 Dir:OUT Visited: 1 Type:PI]
        [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO]

[Msg22] Propagating Dbar for the line : nand4 _w2
[Msg23] Updating linelist with line : [Line:nand4 _w2 Val:Dbar Dir:IN Visited: 0 Type:INT_WIRE]
[Msg24] Updating the maps 
[Msg25] Updated linelist at this stage. - About to start  Propagate()
        [nand4 _w3 X IN V=0] 
        [nand4 _w2 Dbar IN V=0] 
        [nand4 _out1 X OUT V=0] 
        [nand3 _in2 X IN V=0] 
        [nand3 _w1 X IN V=0] 
        [nand3 _w3 X OUT V=0] 
        [nand2 _w1 X IN V=0] 
        [nand2 _in1 X IN V=0] 
        [nand2 _w2 1 OUT V=1] 
        [nand1 _in2 X IN V=0] 
        [nand1 _in1 X IN V=0] 
        [nand1 _w1 X OUT V=0] 
        [input_in2 X OUT V=0] 
        [input_in1 0 OUT V=1] 
        [output_out1 X IN V=0] 
[Msg26][Line:nand4 _w2 Val:Dbar Dir:IN Visited: 0 Type:INT_WIRE] is an input line to the component
[Msg27] Corresponding output line : nand4 _out1
[Msg28] Checking nand4 _w2 to be justified or not
[Msg29] Checking nand4 _w3 to be justified or not
[Msg30] Justify nand4 _w3 inside Propagate. line.direction == IN The line : [Line:nand4 _w3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
[Msg31] Justifying line : [Line:nand4 _w3 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 1
Here 27
[Msg32] Equalizing fanin/fanout values line : [Line:nand3 _w3 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg33] One of the input lines of line : [Line:nand3 _w3 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE] to be justified
[Msg34] Trying line : [Line:nand3 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] to justify
[Msg35] Only [Line:nand3 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] of line : nand3 _w3 to be justified
[Msg36] Saving [Line:nand3 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] for future backtracking.
[Msg37] Justifying line : [Line:nand3 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 0
Here 28
[Msg38] Equalizing fanin/fanout values line : [Line:nand1 _w1 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg39] inval = 1] Justifying all input lines for the line : [Line:nand1 _w1 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg40] Following lines need to be justified. (Total 2 lines)
        [Line:nand1 _w1] -->  [Line:nand1 _in1] [Line:nand1 _in2]
[Msg41] Justifying line : [Line:nand1 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 1
Here 29
[Msg42] 1) Cannot justify line : [Line:input_in1 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg43] 2) Cannot justify line : [Line:nand1 _w1 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg44] Trying line : [Line:nand3 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] to justify
[Msg45] Only [Line:nand3 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] of line : nand3 _w3 to be justified
[Msg46] Saving [Line:nand3 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] for future backtracking.
[Msg47] Justifying line : [Line:nand3 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 0
Here 30
[Msg48] Equalizing fanin/fanout values line : [Line:input_in2 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg49] Updating linelist with line : [Line:input_in2 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg50] Updating the maps 
[Msg51] Concluding. Reached PI line : [Line:input_in2 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg52] Updating linelist with line : [Line:nand3 _w3 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg53] Updating the maps 
[Msg54] Equalizing fanin/fanout values line : [Line:nand4 _out1 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg55] Updating linelist with line : [Line:nand4 _out1 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg56] Updating the maps 
[Msg57] All i/p lines justified for nand4 _out1 to Propagate. The line : [Line:nand4 _out1 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg58] Current linelist status inside Propagate() after all input line justification        [nand4 _w3 X IN V=0] 
        [nand4 _w2 Dbar IN V=0] 
        [nand4 _out1 Dbar OUT V=0] 
        [nand3 _in2 X IN V=0] 
        [nand3 _w1 X IN V=0] 
        [nand3 _w3 1 OUT V=1] 
        [nand2 _w1 X IN V=0] 
        [nand2 _in1 X IN V=0] 
        [nand2 _w2 1 OUT V=1] 
        [nand1 _in2 X IN V=0] 
        [nand1 _in1 X IN V=0] 
        [nand1 _w1 X OUT V=0] 
        [input_in2 0 OUT V=1] 
        [input_in1 0 OUT V=1] 
        [output_out1 X IN V=0] 
[Msg59] error_val :Dbar and iv : 1
[Msg60] Input line : [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO] is propagated with val D (error_val^iv)
[Msg61] Propagating D for the line : output_out1
[Msg62] Updating linelist with line : [Line:output_out1 Val:D Dir:IN Visited: 0 Type:PO]
[Msg63] Updating the maps 
[Msg64] Updated linelist at this stage. - About to start  Propagate()
        [nand4 _w3 X IN V=0] 
        [nand4 _w2 Dbar IN V=0] 
        [nand4 _out1 Dbar OUT V=0] 
        [nand3 _in2 X IN V=0] 
        [nand3 _w1 X IN V=0] 
        [nand3 _w3 1 OUT V=1] 
        [nand2 _w1 X IN V=0] 
        [nand2 _in1 X IN V=0] 
        [nand2 _w2 1 OUT V=1] 
        [nand1 _in2 X IN V=0] 
        [nand1 _in1 X IN V=0] 
        [nand1 _w1 X OUT V=0] 
        [input_in2 0 OUT V=1] 
        [input_in1 0 OUT V=1] 
        [output_out1 D IN V=0] 
[Msg65] Concluding. Reached PO line : [Line:output_out1 Val:D Dir:IN Visited: 0 Type:PO]
[Msg66] Current linelist status after Propagate()
        [Line:nand4 _w3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _w2 Val:Dbar Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _out1 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand3 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w3 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:nand2 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _w2 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:nand1 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _w1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:input_in2 Val:0 Dir:OUT Visited: 1 Type:PI]
        [Line:input_in1 Val:0 Dir:OUT Visited: 1 Type:PI]
        [Line:output_out1 Val:D Dir:IN Visited: 0 Type:PO]

[Msg67] Updating linelist with line : [Line:nand4 _w2 Val:Dbar Dir:IN Visited: 0 Type:INT_WIRE]
[Msg68] Updating the maps 
[Msg69] Current linelist status after pattern generation()
        [Line:nand4 _w3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _w2 Val:Dbar Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _out1 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand3 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w3 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:nand2 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _w2 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:nand1 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _w1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:input_in2 Val:0 Dir:OUT Visited: 1 Type:PI]
        [Line:input_in1 Val:0 Dir:OUT Visited: 1 Type:PI]
        [Line:output_out1 Val:D Dir:IN Visited: 0 Type:PO]

[Msg] Printing PI patterns 
     input_in2 0
     input_in1 0
---------------------------------------------------------
---------------------------------------------------------
TG for line #3 SA-1. Fault #5
[Msg0] Initialzed all line values to X and isVisited = false
[Msg1] Updated line : nand4 _out1 from linelist to [Line:nand4 _out1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg2] Updating the maps 
[Msg] Printing PI patterns 
     input_in2 X
     input_in1 X
[Msg3] Current linelist status before Justify()
        [Line:nand4 _w3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _out1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand3 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w3 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand2 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _w2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand1 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _w1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:input_in2 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:input_in1 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO]

[Msg4] Generating test patterns for line : [Line:nand4 _out1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg5] Justifying line : [Line:nand4 _out1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE] with value 0
Here 31
[Msg6] Equalizing fanin/fanout values line : [Line:nand4 _out1 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg7] inval = 1] Justifying all input lines for the line : [Line:nand4 _out1 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg8] Following lines need to be justified. (Total 2 lines)
        [Line:nand4 _out1] -->  [Line:nand4 _w3] [Line:nand4 _w2]
[Msg9] Justifying line : [Line:nand4 _w3 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 1
Here 32
[Msg10] Equalizing fanin/fanout values line : [Line:nand3 _w3 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg11] One of the input lines of line : [Line:nand3 _w3 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE] to be justified
[Msg12] Trying line : [Line:nand3 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] to justify
[Msg13] Only [Line:nand3 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] of line : nand3 _w3 to be justified
[Msg14] Saving [Line:nand3 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] for future backtracking.
[Msg15] Justifying line : [Line:nand3 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 0
Here 33
[Msg16] Equalizing fanin/fanout values line : [Line:input_in2 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg17] Updating linelist with line : [Line:input_in2 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg18] Updating the maps 
[Msg19] Concluding. Reached PI line : [Line:input_in2 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg20] Updating linelist with line : [Line:nand3 _w3 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg21] Updating the maps 
[Msg22] Updating linelist with line : [Line:nand4 _out1 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg23] Updating the maps 
[Msg24] Justifying line : [Line:nand4 _w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 1
Here 34
[Msg25] Equalizing fanin/fanout values line : [Line:nand2 _w2 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg26] One of the input lines of line : [Line:nand2 _w2 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE] to be justified
[Msg27] Trying line : [Line:nand2 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] to justify
[Msg28] Only [Line:nand2 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] of line : nand2 _w2 to be justified
[Msg29] Saving [Line:nand2 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] for future backtracking.
[Msg30] Justifying line : [Line:nand2 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 0
Here 35
[Msg31] Equalizing fanin/fanout values line : [Line:input_in1 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg32] Updating linelist with line : [Line:input_in1 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg33] Updating the maps 
[Msg34] Concluding. Reached PI line : [Line:input_in1 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg35] Updating linelist with line : [Line:nand2 _w2 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg36] Updating the maps 
[Msg37] Updating linelist with line : [Line:nand4 _out1 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg38] Updating the maps 
[Msg39] All lines justified 
[Msg40] Updating linelist with line : [Line:nand4 _out1 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg41] Updating the maps 
[Msg42] Current linelist status before Propagate() and after Justify()
        [Line:nand4 _w3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _out1 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:nand3 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w3 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:nand2 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _w2 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:nand1 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _w1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:input_in2 Val:0 Dir:OUT Visited: 1 Type:PI]
        [Line:input_in1 Val:0 Dir:OUT Visited: 1 Type:PI]
        [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO]

[Msg43] Propagating D for the line : nand4 _out1
[Msg44] Updating linelist with line : [Line:nand4 _out1 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg45] Updating the maps 
[Msg46] Updated linelist at this stage. - About to start  Propagate()
        [nand4 _w3 X IN V=0] 
        [nand4 _w2 X IN V=0] 
        [nand4 _out1 D OUT V=0] 
        [nand3 _in2 X IN V=0] 
        [nand3 _w1 X IN V=0] 
        [nand3 _w3 1 OUT V=1] 
        [nand2 _w1 X IN V=0] 
        [nand2 _in1 X IN V=0] 
        [nand2 _w2 1 OUT V=1] 
        [nand1 _in2 X IN V=0] 
        [nand1 _in1 X IN V=0] 
        [nand1 _w1 X OUT V=0] 
        [input_in2 0 OUT V=1] 
        [input_in1 0 OUT V=1] 
        [output_out1 X IN V=0] 
[Msg47 Concluding. Reached PO line : [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO]
[Msg48] Current linelist status after Propagate()
        [Line:nand4 _w3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _out1 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand3 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w3 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:nand2 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _w2 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:nand1 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _w1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:input_in2 Val:0 Dir:OUT Visited: 1 Type:PI]
        [Line:input_in1 Val:0 Dir:OUT Visited: 1 Type:PI]
        [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO]

[Msg49] Updating linelist with line : [Line:nand4 _out1 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg50] Updating the maps 
[Msg51] Current linelist status after pattern generation()
        [Line:nand4 _w3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _out1 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand3 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w3 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:nand2 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _w2 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:nand1 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _w1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:input_in2 Val:0 Dir:OUT Visited: 1 Type:PI]
        [Line:input_in1 Val:0 Dir:OUT Visited: 1 Type:PI]
        [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO]

[Msg] Printing PI patterns 
     input_in2 0
     input_in1 0
Here !!!
---------------------------------------------------------
---------------------------------------------------------
TG for line #3 SA-0. Fault #6
[Msg0] Initialzed all line values to X and isVisited = false
[Msg1] Updated line : nand4 _out1 from linelist to [Line:nand4 _out1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg2] Updating the maps 
[Msg] Printing PI patterns 
     input_in2 X
     input_in1 X
[Msg3] Current linelist status before Justify()
        [Line:nand4 _w3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _out1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand3 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w3 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand2 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _w2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand1 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _w1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:input_in2 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:input_in1 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO]

[Msg4] Generating test patterns for line : [Line:nand4 _out1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg5] Justifying line : [Line:nand4 _out1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE] with value 1
Here 36
[Msg6] Equalizing fanin/fanout values line : [Line:nand4 _out1 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg7] One of the input lines of line : [Line:nand4 _out1 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE] to be justified
[Msg8] Trying line : [Line:nand4 _w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] to justify
[Msg9] Only [Line:nand4 _w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] of line : nand4 _out1 to be justified
[Msg10] Saving [Line:nand4 _w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] for future backtracking.
[Msg11] Justifying line : [Line:nand4 _w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 0
Here 37
[Msg12] Equalizing fanin/fanout values line : [Line:nand2 _w2 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg13] inval = 1] Justifying all input lines for the line : [Line:nand2 _w2 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg14] Following lines need to be justified. (Total 2 lines)
        [Line:nand2 _w2] -->  [Line:nand2 _in1] [Line:nand2 _w1]
[Msg15] Justifying line : [Line:nand2 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 1
Here 38
[Msg16] Equalizing fanin/fanout values line : [Line:input_in1 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg17] Updating linelist with line : [Line:input_in1 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg18] Updating the maps 
[Msg19] Concluding. Reached PI line : [Line:input_in1 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg20] Updating linelist with line : [Line:nand2 _w2 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg21] Updating the maps 
[Msg22] Justifying line : [Line:nand2 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 1
Here 39
[Msg23] Equalizing fanin/fanout values line : [Line:nand1 _w1 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg24] One of the input lines of line : [Line:nand1 _w1 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE] to be justified
[Msg25] Trying line : [Line:nand1 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] to justify
[Msg26] Only [Line:nand1 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] of line : nand1 _w1 to be justified
[Msg27] Saving [Line:nand1 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] for future backtracking.
[Msg28] Justifying line : [Line:nand1 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 0
Here 40
[Msg29] Equalizing fanin/fanout values line : [Line:input_in2 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg30] Updating linelist with line : [Line:input_in2 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg31] Updating the maps 
[Msg32] Concluding. Reached PI line : [Line:input_in2 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg33] Updating linelist with line : [Line:nand1 _w1 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg34] Updating the maps 
[Msg35] Updating linelist with line : [Line:nand2 _w2 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg36] Updating the maps 
[Msg37] Updating linelist with line : [Line:nand4 _out1 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg38] Updating the maps 
[Msg39] All lines justified 
[Msg40] Updating linelist with line : [Line:nand4 _out1 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg41] Updating the maps 
[Msg42] Current linelist status before Propagate() and after Justify()
        [Line:nand4 _w3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _out1 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:nand3 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w3 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand2 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _w2 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:nand1 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _w1 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:input_in2 Val:0 Dir:OUT Visited: 1 Type:PI]
        [Line:input_in1 Val:1 Dir:OUT Visited: 1 Type:PI]
        [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO]

[Msg43] Propagating Dbar for the line : nand4 _out1
[Msg44] Updating linelist with line : [Line:nand4 _out1 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg45] Updating the maps 
[Msg46] Updated linelist at this stage. - About to start  Propagate()
        [nand4 _w3 X IN V=0] 
        [nand4 _w2 X IN V=0] 
        [nand4 _out1 Dbar OUT V=0] 
        [nand3 _in2 X IN V=0] 
        [nand3 _w1 X IN V=0] 
        [nand3 _w3 X OUT V=0] 
        [nand2 _w1 X IN V=0] 
        [nand2 _in1 X IN V=0] 
        [nand2 _w2 0 OUT V=1] 
        [nand1 _in2 X IN V=0] 
        [nand1 _in1 X IN V=0] 
        [nand1 _w1 1 OUT V=1] 
        [input_in2 0 OUT V=1] 
        [input_in1 1 OUT V=1] 
        [output_out1 X IN V=0] 
[Msg47 Concluding. Reached PO line : [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO]
[Msg48] Current linelist status after Propagate()
        [Line:nand4 _w3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _out1 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand3 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w3 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand2 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _w2 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:nand1 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _w1 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:input_in2 Val:0 Dir:OUT Visited: 1 Type:PI]
        [Line:input_in1 Val:1 Dir:OUT Visited: 1 Type:PI]
        [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO]

[Msg49] Updating linelist with line : [Line:nand4 _out1 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg50] Updating the maps 
[Msg51] Current linelist status after pattern generation()
        [Line:nand4 _w3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _out1 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand3 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w3 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand2 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _w2 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:nand1 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _w1 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:input_in2 Val:0 Dir:OUT Visited: 1 Type:PI]
        [Line:input_in1 Val:1 Dir:OUT Visited: 1 Type:PI]
        [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO]

[Msg] Printing PI patterns 
     input_in2 0
     input_in1 1
---------------------------------------------------------
---------------------------------------------------------
TG for line #4 SA-1. Fault #7
[Msg0] Initialzed all line values to X and isVisited = false
[Msg1] Updated line : nand3 _in2 from linelist to [Line:nand3 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
[Msg2] Updating the maps 
[Msg] Printing PI patterns 
     input_in2 X
     input_in1 X
[Msg3] Current linelist status before Justify()
        [Line:nand4 _w3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _out1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand3 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w3 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand2 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _w2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand1 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _w1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:input_in2 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:input_in1 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO]

[Msg4] Generating test patterns for line : [Line:nand3 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
[Msg5] Justifying line : [Line:nand3 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 0
Here 41
[Msg6] Equalizing fanin/fanout values line : [Line:input_in2 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg7] Updating linelist with line : [Line:input_in2 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg8] Updating the maps 
[Msg9] Concluding. Reached PI line : [Line:input_in2 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg10] All lines justified 
[Msg11] Updating linelist with line : [Line:input_in2 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg12] Updating the maps 
[Msg13] Current linelist status before Propagate() and after Justify()
        [Line:nand4 _w3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _out1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand3 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w3 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand2 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _w2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand1 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _w1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:input_in2 Val:0 Dir:OUT Visited: 1 Type:PI]
        [Line:input_in1 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO]

[Msg14] Propagating D for the line : nand3 _in2
[Msg15] Updating linelist with line : [Line:nand3 _in2 Val:D Dir:IN Visited: 0 Type:INT_WIRE]
[Msg16] Updating the maps 
[Msg17] Updated linelist at this stage. - About to start  Propagate()
        [nand4 _w3 X IN V=0] 
        [nand4 _w2 X IN V=0] 
        [nand4 _out1 X OUT V=0] 
        [nand3 _in2 D IN V=0] 
        [nand3 _w1 X IN V=0] 
        [nand3 _w3 X OUT V=0] 
        [nand2 _w1 X IN V=0] 
        [nand2 _in1 X IN V=0] 
        [nand2 _w2 X OUT V=0] 
        [nand1 _in2 X IN V=0] 
        [nand1 _in1 X IN V=0] 
        [nand1 _w1 X OUT V=0] 
        [input_in2 0 OUT V=1] 
        [input_in1 X OUT V=0] 
        [output_out1 X IN V=0] 
[Msg18][Line:nand3 _in2 Val:D Dir:IN Visited: 0 Type:INT_WIRE] is an input line to the component
[Msg19] Corresponding output line : nand3 _w3
[Msg20] Checking nand3 _in2 to be justified or not
[Msg21] Checking nand3 _w1 to be justified or not
[Msg22] Justify nand3 _w1 inside Propagate. line.direction == IN The line : [Line:nand3 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
[Msg23] Justifying line : [Line:nand3 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 1
Here 42
[Msg24] Equalizing fanin/fanout values line : [Line:nand1 _w1 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg25] One of the input lines of line : [Line:nand1 _w1 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE] to be justified
[Msg26] Trying line : [Line:nand1 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] to justify
[Msg27] Only [Line:nand1 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] of line : nand1 _w1 to be justified
[Msg28] Saving [Line:nand1 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] for future backtracking.
[Msg29] Justifying line : [Line:nand1 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 0
Here 43
[Msg30] 2) Line : [Line:input_in2 Val:0 Dir:OUT Visited: 1 Type:PI] already justified with value0
[Msg31] Updating linelist with line : [Line:nand1 _w1 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg32] Updating the maps 
[Msg33] Equalizing fanin/fanout values line : [Line:nand3 _w3 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg34] Updating linelist with line : [Line:nand3 _w3 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg35] Updating the maps 
[Msg36] All i/p lines justified for nand3 _w3 to Propagate. The line : [Line:nand3 _w3 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg37] Current linelist status inside Propagate() after all input line justification        [nand4 _w3 X IN V=0] 
        [nand4 _w2 X IN V=0] 
        [nand4 _out1 X OUT V=0] 
        [nand3 _in2 D IN V=0] 
        [nand3 _w1 X IN V=0] 
        [nand3 _w3 D OUT V=0] 
        [nand2 _w1 X IN V=0] 
        [nand2 _in1 X IN V=0] 
        [nand2 _w2 X OUT V=0] 
        [nand1 _in2 X IN V=0] 
        [nand1 _in1 X IN V=0] 
        [nand1 _w1 1 OUT V=1] 
        [input_in2 0 OUT V=1] 
        [input_in1 X OUT V=0] 
        [output_out1 X IN V=0] 
[Msg38] error_val :D and iv : 1
[Msg39] Input line : [Line:nand4 _w3 Val:X Dir:IN Visited: 0 Type:INT_WIRE] is propagated with val Dbar (error_val^iv)
[Msg40] Propagating Dbar for the line : nand4 _w3
[Msg41] Updating linelist with line : [Line:nand4 _w3 Val:Dbar Dir:IN Visited: 0 Type:INT_WIRE]
[Msg42] Updating the maps 
[Msg43] Updated linelist at this stage. - About to start  Propagate()
        [nand4 _w3 Dbar IN V=0] 
        [nand4 _w2 X IN V=0] 
        [nand4 _out1 X OUT V=0] 
        [nand3 _in2 D IN V=0] 
        [nand3 _w1 X IN V=0] 
        [nand3 _w3 D OUT V=0] 
        [nand2 _w1 X IN V=0] 
        [nand2 _in1 X IN V=0] 
        [nand2 _w2 X OUT V=0] 
        [nand1 _in2 X IN V=0] 
        [nand1 _in1 X IN V=0] 
        [nand1 _w1 1 OUT V=1] 
        [input_in2 0 OUT V=1] 
        [input_in1 X OUT V=0] 
        [output_out1 X IN V=0] 
[Msg44][Line:nand4 _w3 Val:Dbar Dir:IN Visited: 0 Type:INT_WIRE] is an input line to the component
[Msg45] Corresponding output line : nand4 _out1
[Msg46] Checking nand4 _w3 to be justified or not
[Msg47] Checking nand4 _w2 to be justified or not
[Msg48] Justify nand4 _w2 inside Propagate. line.direction == IN The line : [Line:nand4 _w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
[Msg49] Justifying line : [Line:nand4 _w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 1
Here 44
[Msg50] Equalizing fanin/fanout values line : [Line:nand2 _w2 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg51] One of the input lines of line : [Line:nand2 _w2 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE] to be justified
[Msg52] Trying line : [Line:nand2 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] to justify
[Msg53] Only [Line:nand2 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] of line : nand2 _w2 to be justified
[Msg54] Saving [Line:nand2 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] for future backtracking.
[Msg55] Justifying line : [Line:nand2 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 0
Here 45
[Msg56] Equalizing fanin/fanout values line : [Line:nand1 _w1 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg57] inval = 1] Justifying all input lines for the line : [Line:nand1 _w1 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg58] Following lines need to be justified. (Total 2 lines)
        [Line:nand1 _w1] -->  [Line:nand1 _in2] [Line:nand1 _in1]
[Msg59] Justifying line : [Line:nand1 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 1
Here 46
[Msg60] 1) Cannot justify line : [Line:input_in2 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg61] 2) Cannot justify line : [Line:nand1 _w1 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg62] Trying line : [Line:nand2 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] to justify
[Msg63] Only [Line:nand2 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] of line : nand2 _w2 to be justified
[Msg64] Saving [Line:nand2 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] for future backtracking.
[Msg65] Justifying line : [Line:nand2 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 0
Here 47
[Msg66] Equalizing fanin/fanout values line : [Line:input_in1 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg67] Updating linelist with line : [Line:input_in1 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg68] Updating the maps 
[Msg69] Concluding. Reached PI line : [Line:input_in1 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg70] Updating linelist with line : [Line:nand2 _w2 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg71] Updating the maps 
[Msg72] Equalizing fanin/fanout values line : [Line:nand4 _out1 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg73] Updating linelist with line : [Line:nand4 _out1 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg74] Updating the maps 
[Msg75] All i/p lines justified for nand4 _out1 to Propagate. The line : [Line:nand4 _out1 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg76] Current linelist status inside Propagate() after all input line justification        [nand4 _w3 Dbar IN V=0] 
        [nand4 _w2 X IN V=0] 
        [nand4 _out1 Dbar OUT V=0] 
        [nand3 _in2 D IN V=0] 
        [nand3 _w1 X IN V=0] 
        [nand3 _w3 D OUT V=0] 
        [nand2 _w1 X IN V=0] 
        [nand2 _in1 X IN V=0] 
        [nand2 _w2 1 OUT V=1] 
        [nand1 _in2 X IN V=0] 
        [nand1 _in1 X IN V=0] 
        [nand1 _w1 1 OUT V=1] 
        [input_in2 0 OUT V=1] 
        [input_in1 0 OUT V=1] 
        [output_out1 X IN V=0] 
[Msg77] error_val :Dbar and iv : 1
[Msg78] Input line : [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO] is propagated with val D (error_val^iv)
[Msg79] Propagating D for the line : output_out1
[Msg80] Updating linelist with line : [Line:output_out1 Val:D Dir:IN Visited: 0 Type:PO]
[Msg81] Updating the maps 
[Msg82] Updated linelist at this stage. - About to start  Propagate()
        [nand4 _w3 Dbar IN V=0] 
        [nand4 _w2 X IN V=0] 
        [nand4 _out1 Dbar OUT V=0] 
        [nand3 _in2 D IN V=0] 
        [nand3 _w1 X IN V=0] 
        [nand3 _w3 D OUT V=0] 
        [nand2 _w1 X IN V=0] 
        [nand2 _in1 X IN V=0] 
        [nand2 _w2 1 OUT V=1] 
        [nand1 _in2 X IN V=0] 
        [nand1 _in1 X IN V=0] 
        [nand1 _w1 1 OUT V=1] 
        [input_in2 0 OUT V=1] 
        [input_in1 0 OUT V=1] 
        [output_out1 D IN V=0] 
[Msg83] Concluding. Reached PO line : [Line:output_out1 Val:D Dir:IN Visited: 0 Type:PO]
[Msg84] Current linelist status after Propagate()
        [Line:nand4 _w3 Val:Dbar Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _out1 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand3 _in2 Val:D Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w3 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand2 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _w2 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:nand1 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _w1 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:input_in2 Val:0 Dir:OUT Visited: 1 Type:PI]
        [Line:input_in1 Val:0 Dir:OUT Visited: 1 Type:PI]
        [Line:output_out1 Val:D Dir:IN Visited: 0 Type:PO]

[Msg85] Updating linelist with line : [Line:nand3 _in2 Val:D Dir:IN Visited: 0 Type:INT_WIRE]
[Msg86] Updating the maps 
[Msg87] Current linelist status after pattern generation()
        [Line:nand4 _w3 Val:Dbar Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _out1 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand3 _in2 Val:D Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w3 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand2 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _w2 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:nand1 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _w1 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:input_in2 Val:0 Dir:OUT Visited: 1 Type:PI]
        [Line:input_in1 Val:0 Dir:OUT Visited: 1 Type:PI]
        [Line:output_out1 Val:D Dir:IN Visited: 0 Type:PO]

[Msg] Printing PI patterns 
     input_in2 0
     input_in1 0
Here !!!
---------------------------------------------------------
---------------------------------------------------------
TG for line #4 SA-0. Fault #8
[Msg0] Initialzed all line values to X and isVisited = false
[Msg1] Updated line : nand3 _in2 from linelist to [Line:nand3 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
[Msg2] Updating the maps 
[Msg] Printing PI patterns 
     input_in2 X
     input_in1 X
[Msg3] Current linelist status before Justify()
        [Line:nand4 _w3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _out1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand3 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w3 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand2 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _w2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand1 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _w1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:input_in2 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:input_in1 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO]

[Msg4] Generating test patterns for line : [Line:nand3 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
[Msg5] Justifying line : [Line:nand3 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 1
Here 48
[Msg6] Equalizing fanin/fanout values line : [Line:input_in2 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg7] Updating linelist with line : [Line:input_in2 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg8] Updating the maps 
[Msg9] Concluding. Reached PI line : [Line:input_in2 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg10] All lines justified 
[Msg11] Updating linelist with line : [Line:input_in2 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg12] Updating the maps 
[Msg13] Current linelist status before Propagate() and after Justify()
        [Line:nand4 _w3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _out1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand3 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w3 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand2 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _w2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand1 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _w1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:input_in2 Val:1 Dir:OUT Visited: 1 Type:PI]
        [Line:input_in1 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO]

[Msg14] Propagating Dbar for the line : nand3 _in2
[Msg15] Updating linelist with line : [Line:nand3 _in2 Val:Dbar Dir:IN Visited: 0 Type:INT_WIRE]
[Msg16] Updating the maps 
[Msg17] Updated linelist at this stage. - About to start  Propagate()
        [nand4 _w3 X IN V=0] 
        [nand4 _w2 X IN V=0] 
        [nand4 _out1 X OUT V=0] 
        [nand3 _in2 Dbar IN V=0] 
        [nand3 _w1 X IN V=0] 
        [nand3 _w3 X OUT V=0] 
        [nand2 _w1 X IN V=0] 
        [nand2 _in1 X IN V=0] 
        [nand2 _w2 X OUT V=0] 
        [nand1 _in2 X IN V=0] 
        [nand1 _in1 X IN V=0] 
        [nand1 _w1 X OUT V=0] 
        [input_in2 1 OUT V=1] 
        [input_in1 X OUT V=0] 
        [output_out1 X IN V=0] 
[Msg18][Line:nand3 _in2 Val:Dbar Dir:IN Visited: 0 Type:INT_WIRE] is an input line to the component
[Msg19] Corresponding output line : nand3 _w3
[Msg20] Checking nand3 _w1 to be justified or not
[Msg21] Justify nand3 _w1 inside Propagate. line.direction == IN The line : [Line:nand3 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
[Msg22] Justifying line : [Line:nand3 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 1
Here 49
[Msg23] Equalizing fanin/fanout values line : [Line:nand1 _w1 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg24] One of the input lines of line : [Line:nand1 _w1 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE] to be justified
[Msg25] Trying line : [Line:nand1 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] to justify
[Msg26] Only [Line:nand1 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] of line : nand1 _w1 to be justified
[Msg27] Saving [Line:nand1 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] for future backtracking.
[Msg28] Justifying line : [Line:nand1 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 0
Here 50
[Msg29] Equalizing fanin/fanout values line : [Line:input_in1 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg30] Updating linelist with line : [Line:input_in1 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg31] Updating the maps 
[Msg32] Concluding. Reached PI line : [Line:input_in1 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg33] Updating linelist with line : [Line:nand1 _w1 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg34] Updating the maps 
[Msg35] Checking nand3 _in2 to be justified or not
[Msg36] Equalizing fanin/fanout values line : [Line:nand3 _w3 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg37] Updating linelist with line : [Line:nand3 _w3 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg38] Updating the maps 
[Msg39] All i/p lines justified for nand3 _w3 to Propagate. The line : [Line:nand3 _w3 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg40] Current linelist status inside Propagate() after all input line justification        [nand4 _w3 X IN V=0] 
        [nand4 _w2 X IN V=0] 
        [nand4 _out1 X OUT V=0] 
        [nand3 _in2 Dbar IN V=0] 
        [nand3 _w1 X IN V=0] 
        [nand3 _w3 Dbar OUT V=0] 
        [nand2 _w1 X IN V=0] 
        [nand2 _in1 X IN V=0] 
        [nand2 _w2 X OUT V=0] 
        [nand1 _in2 X IN V=0] 
        [nand1 _in1 X IN V=0] 
        [nand1 _w1 1 OUT V=1] 
        [input_in2 1 OUT V=1] 
        [input_in1 0 OUT V=1] 
        [output_out1 X IN V=0] 
[Msg41] error_val :Dbar and iv : 1
[Msg42] Input line : [Line:nand4 _w3 Val:X Dir:IN Visited: 0 Type:INT_WIRE] is propagated with val D (error_val^iv)
[Msg43] Propagating D for the line : nand4 _w3
[Msg44] Updating linelist with line : [Line:nand4 _w3 Val:D Dir:IN Visited: 0 Type:INT_WIRE]
[Msg45] Updating the maps 
[Msg46] Updated linelist at this stage. - About to start  Propagate()
        [nand4 _w3 D IN V=0] 
        [nand4 _w2 X IN V=0] 
        [nand4 _out1 X OUT V=0] 
        [nand3 _in2 Dbar IN V=0] 
        [nand3 _w1 X IN V=0] 
        [nand3 _w3 Dbar OUT V=0] 
        [nand2 _w1 X IN V=0] 
        [nand2 _in1 X IN V=0] 
        [nand2 _w2 X OUT V=0] 
        [nand1 _in2 X IN V=0] 
        [nand1 _in1 X IN V=0] 
        [nand1 _w1 1 OUT V=1] 
        [input_in2 1 OUT V=1] 
        [input_in1 0 OUT V=1] 
        [output_out1 X IN V=0] 
[Msg47][Line:nand4 _w3 Val:D Dir:IN Visited: 0 Type:INT_WIRE] is an input line to the component
[Msg48] Corresponding output line : nand4 _out1
[Msg49] Checking nand4 _w2 to be justified or not
[Msg50] Justify nand4 _w2 inside Propagate. line.direction == IN The line : [Line:nand4 _w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
[Msg51] Justifying line : [Line:nand4 _w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 1
Here 51
[Msg52] Equalizing fanin/fanout values line : [Line:nand2 _w2 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg53] One of the input lines of line : [Line:nand2 _w2 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE] to be justified
[Msg54] Trying line : [Line:nand2 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] to justify
[Msg55] Only [Line:nand2 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] of line : nand2 _w2 to be justified
[Msg56] Saving [Line:nand2 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] for future backtracking.
[Msg57] Justifying line : [Line:nand2 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 0
Here 52
[Msg58] 2) Line : [Line:input_in1 Val:0 Dir:OUT Visited: 1 Type:PI] already justified with value0
[Msg59] Updating linelist with line : [Line:nand2 _w2 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg60] Updating the maps 
[Msg61] Checking nand4 _w3 to be justified or not
[Msg62] Equalizing fanin/fanout values line : [Line:nand4 _out1 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg63] Updating linelist with line : [Line:nand4 _out1 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg64] Updating the maps 
[Msg65] All i/p lines justified for nand4 _out1 to Propagate. The line : [Line:nand4 _out1 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg66] Current linelist status inside Propagate() after all input line justification        [nand4 _w3 D IN V=0] 
        [nand4 _w2 X IN V=0] 
        [nand4 _out1 D OUT V=0] 
        [nand3 _in2 Dbar IN V=0] 
        [nand3 _w1 X IN V=0] 
        [nand3 _w3 Dbar OUT V=0] 
        [nand2 _w1 X IN V=0] 
        [nand2 _in1 X IN V=0] 
        [nand2 _w2 1 OUT V=1] 
        [nand1 _in2 X IN V=0] 
        [nand1 _in1 X IN V=0] 
        [nand1 _w1 1 OUT V=1] 
        [input_in2 1 OUT V=1] 
        [input_in1 0 OUT V=1] 
        [output_out1 X IN V=0] 
[Msg67] error_val :D and iv : 1
[Msg68] Input line : [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO] is propagated with val Dbar (error_val^iv)
[Msg69] Propagating Dbar for the line : output_out1
[Msg70] Updating linelist with line : [Line:output_out1 Val:Dbar Dir:IN Visited: 0 Type:PO]
[Msg71] Updating the maps 
[Msg72] Updated linelist at this stage. - About to start  Propagate()
        [nand4 _w3 D IN V=0] 
        [nand4 _w2 X IN V=0] 
        [nand4 _out1 D OUT V=0] 
        [nand3 _in2 Dbar IN V=0] 
        [nand3 _w1 X IN V=0] 
        [nand3 _w3 Dbar OUT V=0] 
        [nand2 _w1 X IN V=0] 
        [nand2 _in1 X IN V=0] 
        [nand2 _w2 1 OUT V=1] 
        [nand1 _in2 X IN V=0] 
        [nand1 _in1 X IN V=0] 
        [nand1 _w1 1 OUT V=1] 
        [input_in2 1 OUT V=1] 
        [input_in1 0 OUT V=1] 
        [output_out1 Dbar IN V=0] 
[Msg73] Concluding. Reached PO line : [Line:output_out1 Val:Dbar Dir:IN Visited: 0 Type:PO]
[Msg74] Current linelist status after Propagate()
        [Line:nand4 _w3 Val:D Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _out1 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand3 _in2 Val:Dbar Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w3 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand2 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _w2 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:nand1 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _w1 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:input_in2 Val:1 Dir:OUT Visited: 1 Type:PI]
        [Line:input_in1 Val:0 Dir:OUT Visited: 1 Type:PI]
        [Line:output_out1 Val:Dbar Dir:IN Visited: 0 Type:PO]

[Msg75] Updating linelist with line : [Line:nand3 _in2 Val:Dbar Dir:IN Visited: 0 Type:INT_WIRE]
[Msg76] Updating the maps 
[Msg77] Current linelist status after pattern generation()
        [Line:nand4 _w3 Val:D Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _out1 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand3 _in2 Val:Dbar Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w3 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand2 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _w2 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:nand1 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _w1 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:input_in2 Val:1 Dir:OUT Visited: 1 Type:PI]
        [Line:input_in1 Val:0 Dir:OUT Visited: 1 Type:PI]
        [Line:output_out1 Val:Dbar Dir:IN Visited: 0 Type:PO]

[Msg] Printing PI patterns 
     input_in2 1
     input_in1 0
---------------------------------------------------------
---------------------------------------------------------
TG for line #5 SA-1. Fault #9
[Msg0] Initialzed all line values to X and isVisited = false
[Msg1] Updated line : nand3 _w1 from linelist to [Line:nand3 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
[Msg2] Updating the maps 
[Msg] Printing PI patterns 
     input_in2 X
     input_in1 X
[Msg3] Current linelist status before Justify()
        [Line:nand4 _w3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _out1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand3 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w3 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand2 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _w2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand1 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _w1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:input_in2 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:input_in1 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO]

[Msg4] Generating test patterns for line : [Line:nand3 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
[Msg5] Justifying line : [Line:nand3 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 0
Here 53
[Msg6] Equalizing fanin/fanout values line : [Line:nand1 _w1 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg7] inval = 1] Justifying all input lines for the line : [Line:nand1 _w1 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg8] Following lines need to be justified. (Total 2 lines)
        [Line:nand1 _w1] -->  [Line:nand1 _in2] [Line:nand1 _in1]
[Msg9] Justifying line : [Line:nand1 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 1
Here 54
[Msg10] Equalizing fanin/fanout values line : [Line:input_in2 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg11] Updating linelist with line : [Line:input_in2 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg12] Updating the maps 
[Msg13] Concluding. Reached PI line : [Line:input_in2 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg14] Updating linelist with line : [Line:nand1 _w1 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg15] Updating the maps 
[Msg16] Justifying line : [Line:nand1 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 1
Here 55
[Msg17] Equalizing fanin/fanout values line : [Line:input_in1 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg18] Updating linelist with line : [Line:input_in1 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg19] Updating the maps 
[Msg20] Concluding. Reached PI line : [Line:input_in1 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg21] Updating linelist with line : [Line:nand1 _w1 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg22] Updating the maps 
[Msg23] All lines justified 
[Msg24] Updating linelist with line : [Line:nand1 _w1 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg25] Updating the maps 
[Msg26] Current linelist status before Propagate() and after Justify()
        [Line:nand4 _w3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _out1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand3 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w3 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand2 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _w2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand1 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _w1 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:input_in2 Val:1 Dir:OUT Visited: 1 Type:PI]
        [Line:input_in1 Val:1 Dir:OUT Visited: 1 Type:PI]
        [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO]

[Msg27] Propagating D for the line : nand3 _w1
[Msg28] Updating linelist with line : [Line:nand3 _w1 Val:D Dir:IN Visited: 0 Type:INT_WIRE]
[Msg29] Updating the maps 
[Msg30] Updated linelist at this stage. - About to start  Propagate()
        [nand4 _w3 X IN V=0] 
        [nand4 _w2 X IN V=0] 
        [nand4 _out1 X OUT V=0] 
        [nand3 _in2 X IN V=0] 
        [nand3 _w1 D IN V=0] 
        [nand3 _w3 X OUT V=0] 
        [nand2 _w1 X IN V=0] 
        [nand2 _in1 X IN V=0] 
        [nand2 _w2 X OUT V=0] 
        [nand1 _in2 X IN V=0] 
        [nand1 _in1 X IN V=0] 
        [nand1 _w1 0 OUT V=1] 
        [input_in2 1 OUT V=1] 
        [input_in1 1 OUT V=1] 
        [output_out1 X IN V=0] 
[Msg31][Line:nand3 _w1 Val:D Dir:IN Visited: 0 Type:INT_WIRE] is an input line to the component
[Msg32] Corresponding output line : nand3 _w3
[Msg33] Checking nand3 _in2 to be justified or not
[Msg34] Justify nand3 _in2 inside Propagate. line.direction == IN The line : [Line:nand3 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
[Msg35] Justifying line : [Line:nand3 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 1
Here 56
[Msg36] 2) Line : [Line:input_in2 Val:1 Dir:OUT Visited: 1 Type:PI] already justified with value1
[Msg37] Checking nand3 _w1 to be justified or not
[Msg38] Equalizing fanin/fanout values line : [Line:nand3 _w3 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg39] Updating linelist with line : [Line:nand3 _w3 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg40] Updating the maps 
[Msg41] All i/p lines justified for nand3 _w3 to Propagate. The line : [Line:nand3 _w3 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg42] Current linelist status inside Propagate() after all input line justification        [nand4 _w3 X IN V=0] 
        [nand4 _w2 X IN V=0] 
        [nand4 _out1 X OUT V=0] 
        [nand3 _in2 X IN V=0] 
        [nand3 _w1 D IN V=0] 
        [nand3 _w3 D OUT V=0] 
        [nand2 _w1 X IN V=0] 
        [nand2 _in1 X IN V=0] 
        [nand2 _w2 X OUT V=0] 
        [nand1 _in2 X IN V=0] 
        [nand1 _in1 X IN V=0] 
        [nand1 _w1 0 OUT V=1] 
        [input_in2 1 OUT V=1] 
        [input_in1 1 OUT V=1] 
        [output_out1 X IN V=0] 
[Msg43] error_val :D and iv : 1
[Msg44] Input line : [Line:nand4 _w3 Val:X Dir:IN Visited: 0 Type:INT_WIRE] is propagated with val Dbar (error_val^iv)
[Msg45] Propagating Dbar for the line : nand4 _w3
[Msg46] Updating linelist with line : [Line:nand4 _w3 Val:Dbar Dir:IN Visited: 0 Type:INT_WIRE]
[Msg47] Updating the maps 
[Msg48] Updated linelist at this stage. - About to start  Propagate()
        [nand4 _w3 Dbar IN V=0] 
        [nand4 _w2 X IN V=0] 
        [nand4 _out1 X OUT V=0] 
        [nand3 _in2 X IN V=0] 
        [nand3 _w1 D IN V=0] 
        [nand3 _w3 D OUT V=0] 
        [nand2 _w1 X IN V=0] 
        [nand2 _in1 X IN V=0] 
        [nand2 _w2 X OUT V=0] 
        [nand1 _in2 X IN V=0] 
        [nand1 _in1 X IN V=0] 
        [nand1 _w1 0 OUT V=1] 
        [input_in2 1 OUT V=1] 
        [input_in1 1 OUT V=1] 
        [output_out1 X IN V=0] 
[Msg49][Line:nand4 _w3 Val:Dbar Dir:IN Visited: 0 Type:INT_WIRE] is an input line to the component
[Msg50] Corresponding output line : nand4 _out1
[Msg51] Checking nand4 _w3 to be justified or not
[Msg52] Checking nand4 _w2 to be justified or not
[Msg53] Justify nand4 _w2 inside Propagate. line.direction == IN The line : [Line:nand4 _w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
[Msg54] Justifying line : [Line:nand4 _w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 1
Here 57
[Msg55] Equalizing fanin/fanout values line : [Line:nand2 _w2 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg56] One of the input lines of line : [Line:nand2 _w2 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE] to be justified
[Msg57] Trying line : [Line:nand2 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] to justify
[Msg58] Only [Line:nand2 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] of line : nand2 _w2 to be justified
[Msg59] Saving [Line:nand2 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] for future backtracking.
[Msg60] Justifying line : [Line:nand2 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 0
Here 58
[Msg61] Equalizing fanin/fanout values line : [Line:nand1 _w1 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg62] inval = 1] Justifying all input lines for the line : [Line:nand1 _w1 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg63] Following lines need to be justified. (Total 2 lines)
        [Line:nand1 _w1] -->  [Line:nand1 _in2] [Line:nand1 _in1]
[Msg64] Justifying line : [Line:nand1 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 1
Here 59
[Msg65] 2) Line : [Line:input_in2 Val:1 Dir:OUT Visited: 1 Type:PI] already justified with value1
[Msg66] Updating linelist with line : [Line:nand1 _w1 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg67] Updating the maps 
[Msg68] Justifying line : [Line:nand1 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 1
Here 60
[Msg69] 2) Line : [Line:input_in1 Val:1 Dir:OUT Visited: 1 Type:PI] already justified with value1
[Msg70] Updating linelist with line : [Line:nand1 _w1 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg71] Updating the maps 
[Msg72] Updating linelist with line : [Line:nand2 _w2 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg73] Updating the maps 
[Msg74] Equalizing fanin/fanout values line : [Line:nand4 _out1 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg75] Updating linelist with line : [Line:nand4 _out1 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg76] Updating the maps 
[Msg77] All i/p lines justified for nand4 _out1 to Propagate. The line : [Line:nand4 _out1 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg78] Current linelist status inside Propagate() after all input line justification        [nand4 _w3 Dbar IN V=0] 
        [nand4 _w2 X IN V=0] 
        [nand4 _out1 Dbar OUT V=0] 
        [nand3 _in2 X IN V=0] 
        [nand3 _w1 D IN V=0] 
        [nand3 _w3 D OUT V=0] 
        [nand2 _w1 X IN V=0] 
        [nand2 _in1 X IN V=0] 
        [nand2 _w2 1 OUT V=1] 
        [nand1 _in2 X IN V=0] 
        [nand1 _in1 X IN V=0] 
        [nand1 _w1 0 OUT V=1] 
        [input_in2 1 OUT V=1] 
        [input_in1 1 OUT V=1] 
        [output_out1 X IN V=0] 
[Msg79] error_val :Dbar and iv : 1
[Msg80] Input line : [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO] is propagated with val D (error_val^iv)
[Msg81] Propagating D for the line : output_out1
[Msg82] Updating linelist with line : [Line:output_out1 Val:D Dir:IN Visited: 0 Type:PO]
[Msg83] Updating the maps 
[Msg84] Updated linelist at this stage. - About to start  Propagate()
        [nand4 _w3 Dbar IN V=0] 
        [nand4 _w2 X IN V=0] 
        [nand4 _out1 Dbar OUT V=0] 
        [nand3 _in2 X IN V=0] 
        [nand3 _w1 D IN V=0] 
        [nand3 _w3 D OUT V=0] 
        [nand2 _w1 X IN V=0] 
        [nand2 _in1 X IN V=0] 
        [nand2 _w2 1 OUT V=1] 
        [nand1 _in2 X IN V=0] 
        [nand1 _in1 X IN V=0] 
        [nand1 _w1 0 OUT V=1] 
        [input_in2 1 OUT V=1] 
        [input_in1 1 OUT V=1] 
        [output_out1 D IN V=0] 
[Msg85] Concluding. Reached PO line : [Line:output_out1 Val:D Dir:IN Visited: 0 Type:PO]
[Msg86] Current linelist status after Propagate()
        [Line:nand4 _w3 Val:Dbar Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _out1 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand3 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w1 Val:D Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w3 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand2 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _w2 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:nand1 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _w1 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:input_in2 Val:1 Dir:OUT Visited: 1 Type:PI]
        [Line:input_in1 Val:1 Dir:OUT Visited: 1 Type:PI]
        [Line:output_out1 Val:D Dir:IN Visited: 0 Type:PO]

[Msg87] Updating linelist with line : [Line:nand3 _w1 Val:D Dir:IN Visited: 0 Type:INT_WIRE]
[Msg88] Updating the maps 
[Msg89] Current linelist status after pattern generation()
        [Line:nand4 _w3 Val:Dbar Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _out1 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand3 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w1 Val:D Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w3 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand2 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _w2 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:nand1 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _w1 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:input_in2 Val:1 Dir:OUT Visited: 1 Type:PI]
        [Line:input_in1 Val:1 Dir:OUT Visited: 1 Type:PI]
        [Line:output_out1 Val:D Dir:IN Visited: 0 Type:PO]

[Msg] Printing PI patterns 
     input_in2 1
     input_in1 1
Here !!!
---------------------------------------------------------
---------------------------------------------------------
TG for line #5 SA-0. Fault #10
[Msg0] Initialzed all line values to X and isVisited = false
[Msg1] Updated line : nand3 _w1 from linelist to [Line:nand3 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
[Msg2] Updating the maps 
[Msg] Printing PI patterns 
     input_in2 X
     input_in1 X
[Msg3] Current linelist status before Justify()
        [Line:nand4 _w3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _out1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand3 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w3 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand2 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _w2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand1 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _w1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:input_in2 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:input_in1 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO]

[Msg4] Generating test patterns for line : [Line:nand3 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
[Msg5] Justifying line : [Line:nand3 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 1
Here 61
[Msg6] Equalizing fanin/fanout values line : [Line:nand1 _w1 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg7] One of the input lines of line : [Line:nand1 _w1 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE] to be justified
[Msg8] Trying line : [Line:nand1 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] to justify
[Msg9] Only [Line:nand1 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] of line : nand1 _w1 to be justified
[Msg10] Saving [Line:nand1 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] for future backtracking.
[Msg11] Justifying line : [Line:nand1 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 0
Here 62
[Msg12] Equalizing fanin/fanout values line : [Line:input_in1 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg13] Updating linelist with line : [Line:input_in1 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg14] Updating the maps 
[Msg15] Concluding. Reached PI line : [Line:input_in1 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg16] Updating linelist with line : [Line:nand1 _w1 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg17] Updating the maps 
[Msg18] All lines justified 
[Msg19] Updating linelist with line : [Line:nand1 _w1 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg20] Updating the maps 
[Msg21] Current linelist status before Propagate() and after Justify()
        [Line:nand4 _w3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _out1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand3 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w3 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand2 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _w2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand1 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _w1 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:input_in2 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:input_in1 Val:0 Dir:OUT Visited: 1 Type:PI]
        [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO]

[Msg22] Propagating Dbar for the line : nand3 _w1
[Msg23] Updating linelist with line : [Line:nand3 _w1 Val:Dbar Dir:IN Visited: 0 Type:INT_WIRE]
[Msg24] Updating the maps 
[Msg25] Updated linelist at this stage. - About to start  Propagate()
        [nand4 _w3 X IN V=0] 
        [nand4 _w2 X IN V=0] 
        [nand4 _out1 X OUT V=0] 
        [nand3 _in2 X IN V=0] 
        [nand3 _w1 Dbar IN V=0] 
        [nand3 _w3 X OUT V=0] 
        [nand2 _w1 X IN V=0] 
        [nand2 _in1 X IN V=0] 
        [nand2 _w2 X OUT V=0] 
        [nand1 _in2 X IN V=0] 
        [nand1 _in1 X IN V=0] 
        [nand1 _w1 1 OUT V=1] 
        [input_in2 X OUT V=0] 
        [input_in1 0 OUT V=1] 
        [output_out1 X IN V=0] 
[Msg26][Line:nand3 _w1 Val:Dbar Dir:IN Visited: 0 Type:INT_WIRE] is an input line to the component
[Msg27] Corresponding output line : nand3 _w3
[Msg28] Checking nand3 _w1 to be justified or not
[Msg29] Checking nand3 _in2 to be justified or not
[Msg30] Justify nand3 _in2 inside Propagate. line.direction == IN The line : [Line:nand3 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
[Msg31] Justifying line : [Line:nand3 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 1
Here 63
[Msg32] Equalizing fanin/fanout values line : [Line:input_in2 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg33] Updating linelist with line : [Line:input_in2 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg34] Updating the maps 
[Msg35] Concluding. Reached PI line : [Line:input_in2 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg36] Equalizing fanin/fanout values line : [Line:nand3 _w3 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg37] Updating linelist with line : [Line:nand3 _w3 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg38] Updating the maps 
[Msg39] All i/p lines justified for nand3 _w3 to Propagate. The line : [Line:nand3 _w3 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg40] Current linelist status inside Propagate() after all input line justification        [nand4 _w3 X IN V=0] 
        [nand4 _w2 X IN V=0] 
        [nand4 _out1 X OUT V=0] 
        [nand3 _in2 X IN V=0] 
        [nand3 _w1 Dbar IN V=0] 
        [nand3 _w3 Dbar OUT V=0] 
        [nand2 _w1 X IN V=0] 
        [nand2 _in1 X IN V=0] 
        [nand2 _w2 X OUT V=0] 
        [nand1 _in2 X IN V=0] 
        [nand1 _in1 X IN V=0] 
        [nand1 _w1 1 OUT V=1] 
        [input_in2 1 OUT V=1] 
        [input_in1 0 OUT V=1] 
        [output_out1 X IN V=0] 
[Msg41] error_val :Dbar and iv : 1
[Msg42] Input line : [Line:nand4 _w3 Val:X Dir:IN Visited: 0 Type:INT_WIRE] is propagated with val D (error_val^iv)
[Msg43] Propagating D for the line : nand4 _w3
[Msg44] Updating linelist with line : [Line:nand4 _w3 Val:D Dir:IN Visited: 0 Type:INT_WIRE]
[Msg45] Updating the maps 
[Msg46] Updated linelist at this stage. - About to start  Propagate()
        [nand4 _w3 D IN V=0] 
        [nand4 _w2 X IN V=0] 
        [nand4 _out1 X OUT V=0] 
        [nand3 _in2 X IN V=0] 
        [nand3 _w1 Dbar IN V=0] 
        [nand3 _w3 Dbar OUT V=0] 
        [nand2 _w1 X IN V=0] 
        [nand2 _in1 X IN V=0] 
        [nand2 _w2 X OUT V=0] 
        [nand1 _in2 X IN V=0] 
        [nand1 _in1 X IN V=0] 
        [nand1 _w1 1 OUT V=1] 
        [input_in2 1 OUT V=1] 
        [input_in1 0 OUT V=1] 
        [output_out1 X IN V=0] 
[Msg47][Line:nand4 _w3 Val:D Dir:IN Visited: 0 Type:INT_WIRE] is an input line to the component
[Msg48] Corresponding output line : nand4 _out1
[Msg49] Checking nand4 _w2 to be justified or not
[Msg50] Justify nand4 _w2 inside Propagate. line.direction == IN The line : [Line:nand4 _w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
[Msg51] Justifying line : [Line:nand4 _w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 1
Here 64
[Msg52] Equalizing fanin/fanout values line : [Line:nand2 _w2 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg53] One of the input lines of line : [Line:nand2 _w2 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE] to be justified
[Msg54] Trying line : [Line:nand2 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] to justify
[Msg55] Only [Line:nand2 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] of line : nand2 _w2 to be justified
[Msg56] Saving [Line:nand2 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] for future backtracking.
[Msg57] Justifying line : [Line:nand2 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 0
Here 65
[Msg58] 2) Line : [Line:input_in1 Val:0 Dir:OUT Visited: 1 Type:PI] already justified with value0
[Msg59] Updating linelist with line : [Line:nand2 _w2 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg60] Updating the maps 
[Msg61] Checking nand4 _w3 to be justified or not
[Msg62] Equalizing fanin/fanout values line : [Line:nand4 _out1 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg63] Updating linelist with line : [Line:nand4 _out1 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg64] Updating the maps 
[Msg65] All i/p lines justified for nand4 _out1 to Propagate. The line : [Line:nand4 _out1 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg66] Current linelist status inside Propagate() after all input line justification        [nand4 _w3 D IN V=0] 
        [nand4 _w2 X IN V=0] 
        [nand4 _out1 D OUT V=0] 
        [nand3 _in2 X IN V=0] 
        [nand3 _w1 Dbar IN V=0] 
        [nand3 _w3 Dbar OUT V=0] 
        [nand2 _w1 X IN V=0] 
        [nand2 _in1 X IN V=0] 
        [nand2 _w2 1 OUT V=1] 
        [nand1 _in2 X IN V=0] 
        [nand1 _in1 X IN V=0] 
        [nand1 _w1 1 OUT V=1] 
        [input_in2 1 OUT V=1] 
        [input_in1 0 OUT V=1] 
        [output_out1 X IN V=0] 
[Msg67] error_val :D and iv : 1
[Msg68] Input line : [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO] is propagated with val Dbar (error_val^iv)
[Msg69] Propagating Dbar for the line : output_out1
[Msg70] Updating linelist with line : [Line:output_out1 Val:Dbar Dir:IN Visited: 0 Type:PO]
[Msg71] Updating the maps 
[Msg72] Updated linelist at this stage. - About to start  Propagate()
        [nand4 _w3 D IN V=0] 
        [nand4 _w2 X IN V=0] 
        [nand4 _out1 D OUT V=0] 
        [nand3 _in2 X IN V=0] 
        [nand3 _w1 Dbar IN V=0] 
        [nand3 _w3 Dbar OUT V=0] 
        [nand2 _w1 X IN V=0] 
        [nand2 _in1 X IN V=0] 
        [nand2 _w2 1 OUT V=1] 
        [nand1 _in2 X IN V=0] 
        [nand1 _in1 X IN V=0] 
        [nand1 _w1 1 OUT V=1] 
        [input_in2 1 OUT V=1] 
        [input_in1 0 OUT V=1] 
        [output_out1 Dbar IN V=0] 
[Msg73] Concluding. Reached PO line : [Line:output_out1 Val:Dbar Dir:IN Visited: 0 Type:PO]
[Msg74] Current linelist status after Propagate()
        [Line:nand4 _w3 Val:D Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _out1 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand3 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w1 Val:Dbar Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w3 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand2 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _w2 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:nand1 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _w1 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:input_in2 Val:1 Dir:OUT Visited: 1 Type:PI]
        [Line:input_in1 Val:0 Dir:OUT Visited: 1 Type:PI]
        [Line:output_out1 Val:Dbar Dir:IN Visited: 0 Type:PO]

[Msg75] Updating linelist with line : [Line:nand3 _w1 Val:Dbar Dir:IN Visited: 0 Type:INT_WIRE]
[Msg76] Updating the maps 
[Msg77] Current linelist status after pattern generation()
        [Line:nand4 _w3 Val:D Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _out1 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand3 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w1 Val:Dbar Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w3 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand2 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _w2 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:nand1 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _w1 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:input_in2 Val:1 Dir:OUT Visited: 1 Type:PI]
        [Line:input_in1 Val:0 Dir:OUT Visited: 1 Type:PI]
        [Line:output_out1 Val:Dbar Dir:IN Visited: 0 Type:PO]

[Msg] Printing PI patterns 
     input_in2 1
     input_in1 0
---------------------------------------------------------
---------------------------------------------------------
TG for line #6 SA-1. Fault #11
[Msg0] Initialzed all line values to X and isVisited = false
[Msg1] Updated line : nand3 _w3 from linelist to [Line:nand3 _w3 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg2] Updating the maps 
[Msg] Printing PI patterns 
     input_in2 X
     input_in1 X
[Msg3] Current linelist status before Justify()
        [Line:nand4 _w3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _out1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand3 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w3 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand2 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _w2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand1 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _w1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:input_in2 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:input_in1 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO]

[Msg4] Generating test patterns for line : [Line:nand3 _w3 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg5] Justifying line : [Line:nand3 _w3 Val:X Dir:OUT Visited: 0 Type:INT_WIRE] with value 0
Here 66
[Msg6] Equalizing fanin/fanout values line : [Line:nand3 _w3 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg7] inval = 1] Justifying all input lines for the line : [Line:nand3 _w3 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg8] Following lines need to be justified. (Total 2 lines)
        [Line:nand3 _w3] -->  [Line:nand3 _in2] [Line:nand3 _w1]
[Msg9] Justifying line : [Line:nand3 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 1
Here 67
[Msg10] Equalizing fanin/fanout values line : [Line:input_in2 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg11] Updating linelist with line : [Line:input_in2 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg12] Updating the maps 
[Msg13] Concluding. Reached PI line : [Line:input_in2 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg14] Updating linelist with line : [Line:nand3 _w3 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg15] Updating the maps 
[Msg16] Justifying line : [Line:nand3 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 1
Here 68
[Msg17] Equalizing fanin/fanout values line : [Line:nand1 _w1 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg18] One of the input lines of line : [Line:nand1 _w1 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE] to be justified
[Msg19] Trying line : [Line:nand1 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] to justify
[Msg20] Only [Line:nand1 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] of line : nand1 _w1 to be justified
[Msg21] Saving [Line:nand1 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] for future backtracking.
[Msg22] Justifying line : [Line:nand1 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 0
Here 69
[Msg23] Equalizing fanin/fanout values line : [Line:input_in1 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg24] Updating linelist with line : [Line:input_in1 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg25] Updating the maps 
[Msg26] Concluding. Reached PI line : [Line:input_in1 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg27] Updating linelist with line : [Line:nand1 _w1 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg28] Updating the maps 
[Msg29] Updating linelist with line : [Line:nand3 _w3 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg30] Updating the maps 
[Msg31] All lines justified 
[Msg32] Updating linelist with line : [Line:nand3 _w3 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg33] Updating the maps 
[Msg34] Current linelist status before Propagate() and after Justify()
        [Line:nand4 _w3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _out1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand3 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w3 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:nand2 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _w2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand1 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _w1 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:input_in2 Val:1 Dir:OUT Visited: 1 Type:PI]
        [Line:input_in1 Val:0 Dir:OUT Visited: 1 Type:PI]
        [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO]

[Msg35] Propagating D for the line : nand3 _w3
[Msg36] Updating linelist with line : [Line:nand3 _w3 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg37] Updating the maps 
[Msg38] Updated linelist at this stage. - About to start  Propagate()
        [nand4 _w3 X IN V=0] 
        [nand4 _w2 X IN V=0] 
        [nand4 _out1 X OUT V=0] 
        [nand3 _in2 X IN V=0] 
        [nand3 _w1 X IN V=0] 
        [nand3 _w3 D OUT V=0] 
        [nand2 _w1 X IN V=0] 
        [nand2 _in1 X IN V=0] 
        [nand2 _w2 X OUT V=0] 
        [nand1 _in2 X IN V=0] 
        [nand1 _in1 X IN V=0] 
        [nand1 _w1 1 OUT V=1] 
        [input_in2 1 OUT V=1] 
        [input_in1 0 OUT V=1] 
        [output_out1 X IN V=0] 
[Msg39] Equalizing fanin/fanout values line : [Line:nand3 _w3 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg40] Updating linelist with line : [Line:nand3 _w3 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg41] Updating the maps 
[Msg42 Input line  [Line:nand4 _w3 Val:X Dir:IN Visited: 0 Type:INT_WIRE] is propagated
[Msg43] Propagating Dbar for the line : nand4 _w3
[Msg44] Updating linelist with line : [Line:nand4 _w3 Val:Dbar Dir:IN Visited: 0 Type:INT_WIRE]
[Msg45] Updating the maps 
[Msg46] Updated linelist at this stage. - About to start  Propagate()
        [nand4 _w3 Dbar IN V=0] 
        [nand4 _w2 X IN V=0] 
        [nand4 _out1 X OUT V=0] 
        [nand3 _in2 X IN V=0] 
        [nand3 _w1 X IN V=0] 
        [nand3 _w3 D OUT V=0] 
        [nand2 _w1 X IN V=0] 
        [nand2 _in1 X IN V=0] 
        [nand2 _w2 X OUT V=0] 
        [nand1 _in2 X IN V=0] 
        [nand1 _in1 X IN V=0] 
        [nand1 _w1 1 OUT V=1] 
        [input_in2 1 OUT V=1] 
        [input_in1 0 OUT V=1] 
        [output_out1 X IN V=0] 
[Msg47][Line:nand4 _w3 Val:Dbar Dir:IN Visited: 0 Type:INT_WIRE] is an input line to the component
[Msg48] Corresponding output line : nand4 _out1
[Msg49] Checking nand4 _w3 to be justified or not
[Msg50] Checking nand4 _w2 to be justified or not
[Msg51] Justify nand4 _w2 inside Propagate. line.direction == IN The line : [Line:nand4 _w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
[Msg52] Justifying line : [Line:nand4 _w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 1
Here 70
[Msg53] Equalizing fanin/fanout values line : [Line:nand2 _w2 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg54] One of the input lines of line : [Line:nand2 _w2 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE] to be justified
[Msg55] Trying line : [Line:nand2 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] to justify
[Msg56] Only [Line:nand2 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] of line : nand2 _w2 to be justified
[Msg57] Saving [Line:nand2 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] for future backtracking.
[Msg58] Justifying line : [Line:nand2 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 0
Here 71
[Msg59] Equalizing fanin/fanout values line : [Line:nand1 _w1 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg60] inval = 1] Justifying all input lines for the line : [Line:nand1 _w1 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg61] Following lines need to be justified. (Total 2 lines)
        [Line:nand1 _w1] -->  [Line:nand1 _in2] [Line:nand1 _in1]
[Msg62] Justifying line : [Line:nand1 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 1
Here 72
[Msg63] 2) Line : [Line:input_in2 Val:1 Dir:OUT Visited: 1 Type:PI] already justified with value1
[Msg64] Updating linelist with line : [Line:nand1 _w1 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg65] Updating the maps 
[Msg66] Justifying line : [Line:nand1 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 1
Here 73
[Msg67] 1) Cannot justify line : [Line:input_in1 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg68] 2) Cannot justify line : [Line:nand1 _w1 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg69] Trying line : [Line:nand2 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] to justify
[Msg70] Only [Line:nand2 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] of line : nand2 _w2 to be justified
[Msg71] Saving [Line:nand2 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] for future backtracking.
[Msg72] Justifying line : [Line:nand2 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 0
Here 74
[Msg73] 2) Line : [Line:input_in1 Val:0 Dir:OUT Visited: 1 Type:PI] already justified with value0
[Msg74] Updating linelist with line : [Line:nand2 _w2 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg75] Updating the maps 
[Msg76] Equalizing fanin/fanout values line : [Line:nand4 _out1 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg77] Updating linelist with line : [Line:nand4 _out1 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg78] Updating the maps 
[Msg79] All i/p lines justified for nand4 _out1 to Propagate. The line : [Line:nand4 _out1 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg80] Current linelist status inside Propagate() after all input line justification        [nand4 _w3 Dbar IN V=0] 
        [nand4 _w2 X IN V=0] 
        [nand4 _out1 Dbar OUT V=0] 
        [nand3 _in2 X IN V=0] 
        [nand3 _w1 X IN V=0] 
        [nand3 _w3 D OUT V=0] 
        [nand2 _w1 X IN V=0] 
        [nand2 _in1 X IN V=0] 
        [nand2 _w2 1 OUT V=1] 
        [nand1 _in2 X IN V=0] 
        [nand1 _in1 X IN V=0] 
        [nand1 _w1 0 OUT V=1] 
        [input_in2 1 OUT V=1] 
        [input_in1 0 OUT V=1] 
        [output_out1 X IN V=0] 
[Msg81] error_val :Dbar and iv : 1
[Msg82] Input line : [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO] is propagated with val D (error_val^iv)
[Msg83] Propagating D for the line : output_out1
[Msg84] Updating linelist with line : [Line:output_out1 Val:D Dir:IN Visited: 0 Type:PO]
[Msg85] Updating the maps 
[Msg86] Updated linelist at this stage. - About to start  Propagate()
        [nand4 _w3 Dbar IN V=0] 
        [nand4 _w2 X IN V=0] 
        [nand4 _out1 Dbar OUT V=0] 
        [nand3 _in2 X IN V=0] 
        [nand3 _w1 X IN V=0] 
        [nand3 _w3 D OUT V=0] 
        [nand2 _w1 X IN V=0] 
        [nand2 _in1 X IN V=0] 
        [nand2 _w2 1 OUT V=1] 
        [nand1 _in2 X IN V=0] 
        [nand1 _in1 X IN V=0] 
        [nand1 _w1 0 OUT V=1] 
        [input_in2 1 OUT V=1] 
        [input_in1 0 OUT V=1] 
        [output_out1 D IN V=0] 
[Msg87] Concluding. Reached PO line : [Line:output_out1 Val:D Dir:IN Visited: 0 Type:PO]
[Msg88] Current linelist status after Propagate()
        [Line:nand4 _w3 Val:Dbar Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _out1 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand3 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w3 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand2 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _w2 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:nand1 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _w1 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:input_in2 Val:1 Dir:OUT Visited: 1 Type:PI]
        [Line:input_in1 Val:0 Dir:OUT Visited: 1 Type:PI]
        [Line:output_out1 Val:D Dir:IN Visited: 0 Type:PO]

[Msg89] Updating linelist with line : [Line:nand3 _w3 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg90] Updating the maps 
[Msg91] Current linelist status after pattern generation()
        [Line:nand4 _w3 Val:Dbar Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _out1 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand3 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w3 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand2 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _w2 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:nand1 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _w1 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:input_in2 Val:1 Dir:OUT Visited: 1 Type:PI]
        [Line:input_in1 Val:0 Dir:OUT Visited: 1 Type:PI]
        [Line:output_out1 Val:D Dir:IN Visited: 0 Type:PO]

[Msg] Printing PI patterns 
     input_in2 1
     input_in1 0
Here !!!
---------------------------------------------------------
---------------------------------------------------------
TG for line #6 SA-0. Fault #12
[Msg0] Initialzed all line values to X and isVisited = false
[Msg1] Updated line : nand3 _w3 from linelist to [Line:nand3 _w3 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg2] Updating the maps 
[Msg] Printing PI patterns 
     input_in2 X
     input_in1 X
[Msg3] Current linelist status before Justify()
        [Line:nand4 _w3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _out1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand3 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w3 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand2 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _w2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand1 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _w1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:input_in2 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:input_in1 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO]

[Msg4] Generating test patterns for line : [Line:nand3 _w3 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg5] Justifying line : [Line:nand3 _w3 Val:X Dir:OUT Visited: 0 Type:INT_WIRE] with value 1
Here 75
[Msg6] Equalizing fanin/fanout values line : [Line:nand3 _w3 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg7] One of the input lines of line : [Line:nand3 _w3 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE] to be justified
[Msg8] Trying line : [Line:nand3 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] to justify
[Msg9] Only [Line:nand3 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] of line : nand3 _w3 to be justified
[Msg10] Saving [Line:nand3 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] for future backtracking.
[Msg11] Justifying line : [Line:nand3 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 0
Here 76
[Msg12] Equalizing fanin/fanout values line : [Line:nand1 _w1 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg13] inval = 1] Justifying all input lines for the line : [Line:nand1 _w1 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg14] Following lines need to be justified. (Total 2 lines)
        [Line:nand1 _w1] -->  [Line:nand1 _in1] [Line:nand1 _in2]
[Msg15] Justifying line : [Line:nand1 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 1
Here 77
[Msg16] Equalizing fanin/fanout values line : [Line:input_in1 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg17] Updating linelist with line : [Line:input_in1 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg18] Updating the maps 
[Msg19] Concluding. Reached PI line : [Line:input_in1 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg20] Updating linelist with line : [Line:nand1 _w1 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg21] Updating the maps 
[Msg22] Justifying line : [Line:nand1 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 1
Here 78
[Msg23] Equalizing fanin/fanout values line : [Line:input_in2 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg24] Updating linelist with line : [Line:input_in2 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg25] Updating the maps 
[Msg26] Concluding. Reached PI line : [Line:input_in2 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg27] Updating linelist with line : [Line:nand1 _w1 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg28] Updating the maps 
[Msg29] Updating linelist with line : [Line:nand3 _w3 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg30] Updating the maps 
[Msg31] All lines justified 
[Msg32] Updating linelist with line : [Line:nand3 _w3 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg33] Updating the maps 
[Msg34] Current linelist status before Propagate() and after Justify()
        [Line:nand4 _w3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _out1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand3 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w3 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:nand2 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _w2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand1 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _w1 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:input_in2 Val:1 Dir:OUT Visited: 1 Type:PI]
        [Line:input_in1 Val:1 Dir:OUT Visited: 1 Type:PI]
        [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO]

[Msg35] Propagating Dbar for the line : nand3 _w3
[Msg36] Updating linelist with line : [Line:nand3 _w3 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg37] Updating the maps 
[Msg38] Updated linelist at this stage. - About to start  Propagate()
        [nand4 _w3 X IN V=0] 
        [nand4 _w2 X IN V=0] 
        [nand4 _out1 X OUT V=0] 
        [nand3 _in2 X IN V=0] 
        [nand3 _w1 X IN V=0] 
        [nand3 _w3 Dbar OUT V=0] 
        [nand2 _w1 X IN V=0] 
        [nand2 _in1 X IN V=0] 
        [nand2 _w2 X OUT V=0] 
        [nand1 _in2 X IN V=0] 
        [nand1 _in1 X IN V=0] 
        [nand1 _w1 0 OUT V=1] 
        [input_in2 1 OUT V=1] 
        [input_in1 1 OUT V=1] 
        [output_out1 X IN V=0] 
[Msg39] Equalizing fanin/fanout values line : [Line:nand3 _w3 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg40] Updating linelist with line : [Line:nand3 _w3 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg41] Updating the maps 
[Msg42 Input line  [Line:nand4 _w3 Val:X Dir:IN Visited: 0 Type:INT_WIRE] is propagated
[Msg43] Propagating D for the line : nand4 _w3
[Msg44] Updating linelist with line : [Line:nand4 _w3 Val:D Dir:IN Visited: 0 Type:INT_WIRE]
[Msg45] Updating the maps 
[Msg46] Updated linelist at this stage. - About to start  Propagate()
        [nand4 _w3 D IN V=0] 
        [nand4 _w2 X IN V=0] 
        [nand4 _out1 X OUT V=0] 
        [nand3 _in2 X IN V=0] 
        [nand3 _w1 X IN V=0] 
        [nand3 _w3 Dbar OUT V=0] 
        [nand2 _w1 X IN V=0] 
        [nand2 _in1 X IN V=0] 
        [nand2 _w2 X OUT V=0] 
        [nand1 _in2 X IN V=0] 
        [nand1 _in1 X IN V=0] 
        [nand1 _w1 0 OUT V=1] 
        [input_in2 1 OUT V=1] 
        [input_in1 1 OUT V=1] 
        [output_out1 X IN V=0] 
[Msg47][Line:nand4 _w3 Val:D Dir:IN Visited: 0 Type:INT_WIRE] is an input line to the component
[Msg48] Corresponding output line : nand4 _out1
[Msg49] Checking nand4 _w2 to be justified or not
[Msg50] Justify nand4 _w2 inside Propagate. line.direction == IN The line : [Line:nand4 _w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
[Msg51] Justifying line : [Line:nand4 _w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 1
Here 79
[Msg52] Equalizing fanin/fanout values line : [Line:nand2 _w2 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg53] One of the input lines of line : [Line:nand2 _w2 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE] to be justified
[Msg54] Trying line : [Line:nand2 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] to justify
[Msg55] Only [Line:nand2 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] of line : nand2 _w2 to be justified
[Msg56] Saving [Line:nand2 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] for future backtracking.
[Msg57] Justifying line : [Line:nand2 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 0
Here 80
[Msg58] 1) Cannot justify line : [Line:input_in1 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg59] Trying line : [Line:nand2 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] to justify
[Msg60] Only [Line:nand2 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] of line : nand2 _w2 to be justified
[Msg61] Saving [Line:nand2 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] for future backtracking.
[Msg62] Justifying line : [Line:nand2 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 0
Here 81
[Msg63] Equalizing fanin/fanout values line : [Line:nand1 _w1 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg64] inval = 1] Justifying all input lines for the line : [Line:nand1 _w1 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg65] Following lines need to be justified. (Total 2 lines)
        [Line:nand1 _w1] -->  [Line:nand1 _in1] [Line:nand1 _in2]
[Msg66] Justifying line : [Line:nand1 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 1
Here 82
[Msg67] 2) Line : [Line:input_in1 Val:1 Dir:OUT Visited: 1 Type:PI] already justified with value1
[Msg68] Updating linelist with line : [Line:nand1 _w1 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg69] Updating the maps 
[Msg70] Justifying line : [Line:nand1 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 1
Here 83
[Msg71] 2) Line : [Line:input_in2 Val:1 Dir:OUT Visited: 1 Type:PI] already justified with value1
[Msg72] Updating linelist with line : [Line:nand1 _w1 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg73] Updating the maps 
[Msg74] Updating linelist with line : [Line:nand2 _w2 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg75] Updating the maps 
[Msg76] Checking nand4 _w3 to be justified or not
[Msg77] Equalizing fanin/fanout values line : [Line:nand4 _out1 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg78] Updating linelist with line : [Line:nand4 _out1 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg79] Updating the maps 
[Msg80] All i/p lines justified for nand4 _out1 to Propagate. The line : [Line:nand4 _out1 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg81] Current linelist status inside Propagate() after all input line justification        [nand4 _w3 D IN V=0] 
        [nand4 _w2 X IN V=0] 
        [nand4 _out1 D OUT V=0] 
        [nand3 _in2 X IN V=0] 
        [nand3 _w1 X IN V=0] 
        [nand3 _w3 Dbar OUT V=0] 
        [nand2 _w1 X IN V=0] 
        [nand2 _in1 X IN V=0] 
        [nand2 _w2 1 OUT V=1] 
        [nand1 _in2 X IN V=0] 
        [nand1 _in1 X IN V=0] 
        [nand1 _w1 0 OUT V=1] 
        [input_in2 1 OUT V=1] 
        [input_in1 1 OUT V=1] 
        [output_out1 X IN V=0] 
[Msg82] error_val :D and iv : 1
[Msg83] Input line : [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO] is propagated with val Dbar (error_val^iv)
[Msg84] Propagating Dbar for the line : output_out1
[Msg85] Updating linelist with line : [Line:output_out1 Val:Dbar Dir:IN Visited: 0 Type:PO]
[Msg86] Updating the maps 
[Msg87] Updated linelist at this stage. - About to start  Propagate()
        [nand4 _w3 D IN V=0] 
        [nand4 _w2 X IN V=0] 
        [nand4 _out1 D OUT V=0] 
        [nand3 _in2 X IN V=0] 
        [nand3 _w1 X IN V=0] 
        [nand3 _w3 Dbar OUT V=0] 
        [nand2 _w1 X IN V=0] 
        [nand2 _in1 X IN V=0] 
        [nand2 _w2 1 OUT V=1] 
        [nand1 _in2 X IN V=0] 
        [nand1 _in1 X IN V=0] 
        [nand1 _w1 0 OUT V=1] 
        [input_in2 1 OUT V=1] 
        [input_in1 1 OUT V=1] 
        [output_out1 Dbar IN V=0] 
[Msg88] Concluding. Reached PO line : [Line:output_out1 Val:Dbar Dir:IN Visited: 0 Type:PO]
[Msg89] Current linelist status after Propagate()
        [Line:nand4 _w3 Val:D Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _out1 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand3 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w3 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand2 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _w2 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:nand1 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _w1 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:input_in2 Val:1 Dir:OUT Visited: 1 Type:PI]
        [Line:input_in1 Val:1 Dir:OUT Visited: 1 Type:PI]
        [Line:output_out1 Val:Dbar Dir:IN Visited: 0 Type:PO]

[Msg90] Updating linelist with line : [Line:nand3 _w3 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg91] Updating the maps 
[Msg92] Current linelist status after pattern generation()
        [Line:nand4 _w3 Val:D Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _out1 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand3 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w3 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand2 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _w2 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:nand1 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _w1 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:input_in2 Val:1 Dir:OUT Visited: 1 Type:PI]
        [Line:input_in1 Val:1 Dir:OUT Visited: 1 Type:PI]
        [Line:output_out1 Val:Dbar Dir:IN Visited: 0 Type:PO]

[Msg] Printing PI patterns 
     input_in2 1
     input_in1 1
---------------------------------------------------------
---------------------------------------------------------
TG for line #7 SA-1. Fault #13
[Msg0] Initialzed all line values to X and isVisited = false
[Msg1] Updated line : nand2 _w1 from linelist to [Line:nand2 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
[Msg2] Updating the maps 
[Msg] Printing PI patterns 
     input_in2 X
     input_in1 X
[Msg3] Current linelist status before Justify()
        [Line:nand4 _w3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _out1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand3 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w3 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand2 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _w2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand1 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _w1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:input_in2 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:input_in1 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO]

[Msg4] Generating test patterns for line : [Line:nand2 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
[Msg5] Justifying line : [Line:nand2 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 0
Here 84
[Msg6] Equalizing fanin/fanout values line : [Line:nand1 _w1 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg7] inval = 1] Justifying all input lines for the line : [Line:nand1 _w1 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg8] Following lines need to be justified. (Total 2 lines)
        [Line:nand1 _w1] -->  [Line:nand1 _in2] [Line:nand1 _in1]
[Msg9] Justifying line : [Line:nand1 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 1
Here 85
[Msg10] Equalizing fanin/fanout values line : [Line:input_in2 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg11] Updating linelist with line : [Line:input_in2 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg12] Updating the maps 
[Msg13] Concluding. Reached PI line : [Line:input_in2 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg14] Updating linelist with line : [Line:nand1 _w1 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg15] Updating the maps 
[Msg16] Justifying line : [Line:nand1 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 1
Here 86
[Msg17] Equalizing fanin/fanout values line : [Line:input_in1 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg18] Updating linelist with line : [Line:input_in1 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg19] Updating the maps 
[Msg20] Concluding. Reached PI line : [Line:input_in1 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg21] Updating linelist with line : [Line:nand1 _w1 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg22] Updating the maps 
[Msg23] All lines justified 
[Msg24] Updating linelist with line : [Line:nand1 _w1 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg25] Updating the maps 
[Msg26] Current linelist status before Propagate() and after Justify()
        [Line:nand4 _w3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _out1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand3 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w3 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand2 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _w2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand1 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _w1 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:input_in2 Val:1 Dir:OUT Visited: 1 Type:PI]
        [Line:input_in1 Val:1 Dir:OUT Visited: 1 Type:PI]
        [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO]

[Msg27] Propagating D for the line : nand2 _w1
[Msg28] Updating linelist with line : [Line:nand2 _w1 Val:D Dir:IN Visited: 0 Type:INT_WIRE]
[Msg29] Updating the maps 
[Msg30] Updated linelist at this stage. - About to start  Propagate()
        [nand4 _w3 X IN V=0] 
        [nand4 _w2 X IN V=0] 
        [nand4 _out1 X OUT V=0] 
        [nand3 _in2 X IN V=0] 
        [nand3 _w1 X IN V=0] 
        [nand3 _w3 X OUT V=0] 
        [nand2 _w1 D IN V=0] 
        [nand2 _in1 X IN V=0] 
        [nand2 _w2 X OUT V=0] 
        [nand1 _in2 X IN V=0] 
        [nand1 _in1 X IN V=0] 
        [nand1 _w1 0 OUT V=1] 
        [input_in2 1 OUT V=1] 
        [input_in1 1 OUT V=1] 
        [output_out1 X IN V=0] 
[Msg31][Line:nand2 _w1 Val:D Dir:IN Visited: 0 Type:INT_WIRE] is an input line to the component
[Msg32] Corresponding output line : nand2 _w2
[Msg33] Checking nand2 _w1 to be justified or not
[Msg34] Checking nand2 _in1 to be justified or not
[Msg35] Justify nand2 _in1 inside Propagate. line.direction == IN The line : [Line:nand2 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
[Msg36] Justifying line : [Line:nand2 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 1
Here 87
[Msg37] 2) Line : [Line:input_in1 Val:1 Dir:OUT Visited: 1 Type:PI] already justified with value1
[Msg38] Equalizing fanin/fanout values line : [Line:nand2 _w2 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg39] Updating linelist with line : [Line:nand2 _w2 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg40] Updating the maps 
[Msg41] All i/p lines justified for nand2 _w2 to Propagate. The line : [Line:nand2 _w2 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg42] Current linelist status inside Propagate() after all input line justification        [nand4 _w3 X IN V=0] 
        [nand4 _w2 X IN V=0] 
        [nand4 _out1 X OUT V=0] 
        [nand3 _in2 X IN V=0] 
        [nand3 _w1 X IN V=0] 
        [nand3 _w3 X OUT V=0] 
        [nand2 _w1 D IN V=0] 
        [nand2 _in1 X IN V=0] 
        [nand2 _w2 D OUT V=0] 
        [nand1 _in2 X IN V=0] 
        [nand1 _in1 X IN V=0] 
        [nand1 _w1 0 OUT V=1] 
        [input_in2 1 OUT V=1] 
        [input_in1 1 OUT V=1] 
        [output_out1 X IN V=0] 
[Msg43] error_val :D and iv : 1
[Msg44] Input line : [Line:nand4 _w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] is propagated with val Dbar (error_val^iv)
[Msg45] Propagating Dbar for the line : nand4 _w2
[Msg46] Updating linelist with line : [Line:nand4 _w2 Val:Dbar Dir:IN Visited: 0 Type:INT_WIRE]
[Msg47] Updating the maps 
[Msg48] Updated linelist at this stage. - About to start  Propagate()
        [nand4 _w3 X IN V=0] 
        [nand4 _w2 Dbar IN V=0] 
        [nand4 _out1 X OUT V=0] 
        [nand3 _in2 X IN V=0] 
        [nand3 _w1 X IN V=0] 
        [nand3 _w3 X OUT V=0] 
        [nand2 _w1 D IN V=0] 
        [nand2 _in1 X IN V=0] 
        [nand2 _w2 D OUT V=0] 
        [nand1 _in2 X IN V=0] 
        [nand1 _in1 X IN V=0] 
        [nand1 _w1 0 OUT V=1] 
        [input_in2 1 OUT V=1] 
        [input_in1 1 OUT V=1] 
        [output_out1 X IN V=0] 
[Msg49][Line:nand4 _w2 Val:Dbar Dir:IN Visited: 0 Type:INT_WIRE] is an input line to the component
[Msg50] Corresponding output line : nand4 _out1
[Msg51] Checking nand4 _w3 to be justified or not
[Msg52] Justify nand4 _w3 inside Propagate. line.direction == IN The line : [Line:nand4 _w3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
[Msg53] Justifying line : [Line:nand4 _w3 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 1
Here 88
[Msg54] Equalizing fanin/fanout values line : [Line:nand3 _w3 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg55] One of the input lines of line : [Line:nand3 _w3 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE] to be justified
[Msg56] Trying line : [Line:nand3 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] to justify
[Msg57] Only [Line:nand3 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] of line : nand3 _w3 to be justified
[Msg58] Saving [Line:nand3 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] for future backtracking.
[Msg59] Justifying line : [Line:nand3 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 0
Here 89
[Msg60] 1) Cannot justify line : [Line:input_in2 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg61] Trying line : [Line:nand3 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] to justify
[Msg62] Only [Line:nand3 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] of line : nand3 _w3 to be justified
[Msg63] Saving [Line:nand3 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] for future backtracking.
[Msg64] Justifying line : [Line:nand3 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 0
Here 90
[Msg65] Equalizing fanin/fanout values line : [Line:nand1 _w1 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg66] inval = 1] Justifying all input lines for the line : [Line:nand1 _w1 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg67] Following lines need to be justified. (Total 2 lines)
        [Line:nand1 _w1] -->  [Line:nand1 _in2] [Line:nand1 _in1]
[Msg68] Justifying line : [Line:nand1 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 1
Here 91
[Msg69] 2) Line : [Line:input_in2 Val:1 Dir:OUT Visited: 1 Type:PI] already justified with value1
[Msg70] Updating linelist with line : [Line:nand1 _w1 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg71] Updating the maps 
[Msg72] Justifying line : [Line:nand1 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 1
Here 92
[Msg73] 2) Line : [Line:input_in1 Val:1 Dir:OUT Visited: 1 Type:PI] already justified with value1
[Msg74] Updating linelist with line : [Line:nand1 _w1 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg75] Updating the maps 
[Msg76] Updating linelist with line : [Line:nand3 _w3 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg77] Updating the maps 
[Msg78] Checking nand4 _w2 to be justified or not
[Msg79] Equalizing fanin/fanout values line : [Line:nand4 _out1 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg80] Updating linelist with line : [Line:nand4 _out1 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg81] Updating the maps 
[Msg82] All i/p lines justified for nand4 _out1 to Propagate. The line : [Line:nand4 _out1 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg83] Current linelist status inside Propagate() after all input line justification        [nand4 _w3 X IN V=0] 
        [nand4 _w2 Dbar IN V=0] 
        [nand4 _out1 Dbar OUT V=0] 
        [nand3 _in2 X IN V=0] 
        [nand3 _w1 X IN V=0] 
        [nand3 _w3 1 OUT V=1] 
        [nand2 _w1 D IN V=0] 
        [nand2 _in1 X IN V=0] 
        [nand2 _w2 D OUT V=0] 
        [nand1 _in2 X IN V=0] 
        [nand1 _in1 X IN V=0] 
        [nand1 _w1 0 OUT V=1] 
        [input_in2 1 OUT V=1] 
        [input_in1 1 OUT V=1] 
        [output_out1 X IN V=0] 
[Msg84] error_val :Dbar and iv : 1
[Msg85] Input line : [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO] is propagated with val D (error_val^iv)
[Msg86] Propagating D for the line : output_out1
[Msg87] Updating linelist with line : [Line:output_out1 Val:D Dir:IN Visited: 0 Type:PO]
[Msg88] Updating the maps 
[Msg89] Updated linelist at this stage. - About to start  Propagate()
        [nand4 _w3 X IN V=0] 
        [nand4 _w2 Dbar IN V=0] 
        [nand4 _out1 Dbar OUT V=0] 
        [nand3 _in2 X IN V=0] 
        [nand3 _w1 X IN V=0] 
        [nand3 _w3 1 OUT V=1] 
        [nand2 _w1 D IN V=0] 
        [nand2 _in1 X IN V=0] 
        [nand2 _w2 D OUT V=0] 
        [nand1 _in2 X IN V=0] 
        [nand1 _in1 X IN V=0] 
        [nand1 _w1 0 OUT V=1] 
        [input_in2 1 OUT V=1] 
        [input_in1 1 OUT V=1] 
        [output_out1 D IN V=0] 
[Msg90] Concluding. Reached PO line : [Line:output_out1 Val:D Dir:IN Visited: 0 Type:PO]
[Msg91] Current linelist status after Propagate()
        [Line:nand4 _w3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _w2 Val:Dbar Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _out1 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand3 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w3 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:nand2 _w1 Val:D Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _w2 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand1 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _w1 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:input_in2 Val:1 Dir:OUT Visited: 1 Type:PI]
        [Line:input_in1 Val:1 Dir:OUT Visited: 1 Type:PI]
        [Line:output_out1 Val:D Dir:IN Visited: 0 Type:PO]

[Msg92] Updating linelist with line : [Line:nand2 _w1 Val:D Dir:IN Visited: 0 Type:INT_WIRE]
[Msg93] Updating the maps 
[Msg94] Current linelist status after pattern generation()
        [Line:nand4 _w3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _w2 Val:Dbar Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _out1 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand3 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w3 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:nand2 _w1 Val:D Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _w2 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand1 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _w1 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:input_in2 Val:1 Dir:OUT Visited: 1 Type:PI]
        [Line:input_in1 Val:1 Dir:OUT Visited: 1 Type:PI]
        [Line:output_out1 Val:D Dir:IN Visited: 0 Type:PO]

[Msg] Printing PI patterns 
     input_in2 1
     input_in1 1
Here !!!
---------------------------------------------------------
---------------------------------------------------------
TG for line #7 SA-0. Fault #14
[Msg0] Initialzed all line values to X and isVisited = false
[Msg1] Updated line : nand2 _w1 from linelist to [Line:nand2 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
[Msg2] Updating the maps 
[Msg] Printing PI patterns 
     input_in2 X
     input_in1 X
[Msg3] Current linelist status before Justify()
        [Line:nand4 _w3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _out1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand3 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w3 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand2 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _w2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand1 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _w1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:input_in2 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:input_in1 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO]

[Msg4] Generating test patterns for line : [Line:nand2 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
[Msg5] Justifying line : [Line:nand2 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 1
Here 93
[Msg6] Equalizing fanin/fanout values line : [Line:nand1 _w1 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg7] One of the input lines of line : [Line:nand1 _w1 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE] to be justified
[Msg8] Trying line : [Line:nand1 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] to justify
[Msg9] Only [Line:nand1 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] of line : nand1 _w1 to be justified
[Msg10] Saving [Line:nand1 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] for future backtracking.
[Msg11] Justifying line : [Line:nand1 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 0
Here 94
[Msg12] Equalizing fanin/fanout values line : [Line:input_in1 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg13] Updating linelist with line : [Line:input_in1 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg14] Updating the maps 
[Msg15] Concluding. Reached PI line : [Line:input_in1 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg16] Updating linelist with line : [Line:nand1 _w1 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg17] Updating the maps 
[Msg18] All lines justified 
[Msg19] Updating linelist with line : [Line:nand1 _w1 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg20] Updating the maps 
[Msg21] Current linelist status before Propagate() and after Justify()
        [Line:nand4 _w3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _out1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand3 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w3 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand2 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _w2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand1 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _w1 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:input_in2 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:input_in1 Val:0 Dir:OUT Visited: 1 Type:PI]
        [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO]

[Msg22] Propagating Dbar for the line : nand2 _w1
[Msg23] Updating linelist with line : [Line:nand2 _w1 Val:Dbar Dir:IN Visited: 0 Type:INT_WIRE]
[Msg24] Updating the maps 
[Msg25] Updated linelist at this stage. - About to start  Propagate()
        [nand4 _w3 X IN V=0] 
        [nand4 _w2 X IN V=0] 
        [nand4 _out1 X OUT V=0] 
        [nand3 _in2 X IN V=0] 
        [nand3 _w1 X IN V=0] 
        [nand3 _w3 X OUT V=0] 
        [nand2 _w1 Dbar IN V=0] 
        [nand2 _in1 X IN V=0] 
        [nand2 _w2 X OUT V=0] 
        [nand1 _in2 X IN V=0] 
        [nand1 _in1 X IN V=0] 
        [nand1 _w1 1 OUT V=1] 
        [input_in2 X OUT V=0] 
        [input_in1 0 OUT V=1] 
        [output_out1 X IN V=0] 
[Msg26][Line:nand2 _w1 Val:Dbar Dir:IN Visited: 0 Type:INT_WIRE] is an input line to the component
[Msg27] Corresponding output line : nand2 _w2
[Msg28] Checking nand2 _in1 to be justified or not
[Msg29] Justify nand2 _in1 inside Propagate. line.direction == IN The line : [Line:nand2 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
[Msg30] Justifying line : [Line:nand2 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 1
Here 95
[Msg31] 1) Cannot justify line : [Line:input_in1 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg32] 5) Inside propagate. Cannot Justify line : [Line:input_in1 Val:0 Dir:OUT Visited: 1 Type:PI][Msg33] Propagating Dbar for the line : nand2 _w1
[Msg34] Updating linelist with line : [Line:nand2 _w1 Val:Dbar Dir:IN Visited: 0 Type:INT_WIRE]
[Msg35] Updating the maps 
[Msg36] Updated linelist at this stage. - About to start  Propagate()
        [nand4 _w3 X IN V=0] 
        [nand4 _w2 X IN V=0] 
        [nand4 _out1 X OUT V=0] 
        [nand3 _in2 X IN V=0] 
        [nand3 _w1 X IN V=0] 
        [nand3 _w3 X OUT V=0] 
        [nand2 _w1 Dbar IN V=0] 
        [nand2 _in1 X IN V=0] 
        [nand2 _w2 X OUT V=0] 
        [nand1 _in2 X IN V=0] 
        [nand1 _in1 X IN V=0] 
        [nand1 _w1 X OUT V=0] 
        [input_in2 X OUT V=0] 
        [input_in1 X OUT V=0] 
        [output_out1 X IN V=0] 
[Msg37][Line:nand2 _w1 Val:Dbar Dir:IN Visited: 0 Type:INT_WIRE] is an input line to the component
[Msg38] Corresponding output line : nand2 _w2
[Msg39] Checking nand2 _w1 to be justified or not
[Msg40] Checking nand2 _in1 to be justified or not
[Msg41] Justify nand2 _in1 inside Propagate. line.direction == IN The line : [Line:nand2 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
[Msg42] Justifying line : [Line:nand2 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 1
Here 96
[Msg43] Equalizing fanin/fanout values line : [Line:input_in1 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg44] Updating linelist with line : [Line:input_in1 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg45] Updating the maps 
[Msg46] Concluding. Reached PI line : [Line:input_in1 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg47] Equalizing fanin/fanout values line : [Line:nand2 _w2 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg48] Updating linelist with line : [Line:nand2 _w2 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg49] Updating the maps 
[Msg50] All i/p lines justified for nand2 _w2 to Propagate. The line : [Line:nand2 _w2 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg51] Current linelist status inside Propagate() after all input line justification        [nand4 _w3 X IN V=0] 
        [nand4 _w2 X IN V=0] 
        [nand4 _out1 X OUT V=0] 
        [nand3 _in2 X IN V=0] 
        [nand3 _w1 X IN V=0] 
        [nand3 _w3 X OUT V=0] 
        [nand2 _w1 Dbar IN V=0] 
        [nand2 _in1 X IN V=0] 
        [nand2 _w2 Dbar OUT V=0] 
        [nand1 _in2 X IN V=0] 
        [nand1 _in1 X IN V=0] 
        [nand1 _w1 X OUT V=0] 
        [input_in2 X OUT V=0] 
        [input_in1 1 OUT V=1] 
        [output_out1 X IN V=0] 
[Msg52] error_val :Dbar and iv : 1
[Msg53] Input line : [Line:nand4 _w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] is propagated with val D (error_val^iv)
[Msg54] Propagating D for the line : nand4 _w2
[Msg55] Updating linelist with line : [Line:nand4 _w2 Val:D Dir:IN Visited: 0 Type:INT_WIRE]
[Msg56] Updating the maps 
[Msg57] Updated linelist at this stage. - About to start  Propagate()
        [nand4 _w3 X IN V=0] 
        [nand4 _w2 D IN V=0] 
        [nand4 _out1 X OUT V=0] 
        [nand3 _in2 X IN V=0] 
        [nand3 _w1 X IN V=0] 
        [nand3 _w3 X OUT V=0] 
        [nand2 _w1 Dbar IN V=0] 
        [nand2 _in1 X IN V=0] 
        [nand2 _w2 Dbar OUT V=0] 
        [nand1 _in2 X IN V=0] 
        [nand1 _in1 X IN V=0] 
        [nand1 _w1 X OUT V=0] 
        [input_in2 X OUT V=0] 
        [input_in1 1 OUT V=1] 
        [output_out1 X IN V=0] 
[Msg58][Line:nand4 _w2 Val:D Dir:IN Visited: 0 Type:INT_WIRE] is an input line to the component
[Msg59] Corresponding output line : nand4 _out1
[Msg60] Checking nand4 _w3 to be justified or not
[Msg61] Justify nand4 _w3 inside Propagate. line.direction == IN The line : [Line:nand4 _w3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
[Msg62] Justifying line : [Line:nand4 _w3 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 1
Here 97
[Msg63] Equalizing fanin/fanout values line : [Line:nand3 _w3 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg64] One of the input lines of line : [Line:nand3 _w3 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE] to be justified
[Msg65] Trying line : [Line:nand3 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] to justify
[Msg66] Only [Line:nand3 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] of line : nand3 _w3 to be justified
[Msg67] Saving [Line:nand3 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] for future backtracking.
[Msg68] Justifying line : [Line:nand3 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 0
Here 98
[Msg69] Equalizing fanin/fanout values line : [Line:input_in2 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg70] Updating linelist with line : [Line:input_in2 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg71] Updating the maps 
[Msg72] Concluding. Reached PI line : [Line:input_in2 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg73] Updating linelist with line : [Line:nand3 _w3 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg74] Updating the maps 
[Msg75] Checking nand4 _w2 to be justified or not
[Msg76] Equalizing fanin/fanout values line : [Line:nand4 _out1 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg77] Updating linelist with line : [Line:nand4 _out1 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg78] Updating the maps 
[Msg79] All i/p lines justified for nand4 _out1 to Propagate. The line : [Line:nand4 _out1 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg80] Current linelist status inside Propagate() after all input line justification        [nand4 _w3 X IN V=0] 
        [nand4 _w2 D IN V=0] 
        [nand4 _out1 D OUT V=0] 
        [nand3 _in2 X IN V=0] 
        [nand3 _w1 X IN V=0] 
        [nand3 _w3 1 OUT V=1] 
        [nand2 _w1 Dbar IN V=0] 
        [nand2 _in1 X IN V=0] 
        [nand2 _w2 Dbar OUT V=0] 
        [nand1 _in2 X IN V=0] 
        [nand1 _in1 X IN V=0] 
        [nand1 _w1 X OUT V=0] 
        [input_in2 0 OUT V=1] 
        [input_in1 1 OUT V=1] 
        [output_out1 X IN V=0] 
[Msg81] error_val :D and iv : 1
[Msg82] Input line : [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO] is propagated with val Dbar (error_val^iv)
[Msg83] Propagating Dbar for the line : output_out1
[Msg84] Updating linelist with line : [Line:output_out1 Val:Dbar Dir:IN Visited: 0 Type:PO]
[Msg85] Updating the maps 
[Msg86] Updated linelist at this stage. - About to start  Propagate()
        [nand4 _w3 X IN V=0] 
        [nand4 _w2 D IN V=0] 
        [nand4 _out1 D OUT V=0] 
        [nand3 _in2 X IN V=0] 
        [nand3 _w1 X IN V=0] 
        [nand3 _w3 1 OUT V=1] 
        [nand2 _w1 Dbar IN V=0] 
        [nand2 _in1 X IN V=0] 
        [nand2 _w2 Dbar OUT V=0] 
        [nand1 _in2 X IN V=0] 
        [nand1 _in1 X IN V=0] 
        [nand1 _w1 X OUT V=0] 
        [input_in2 0 OUT V=1] 
        [input_in1 1 OUT V=1] 
        [output_out1 Dbar IN V=0] 
[Msg87] Concluding. Reached PO line : [Line:output_out1 Val:Dbar Dir:IN Visited: 0 Type:PO]
[Msg88] Current linelist status after Propagate()
        [Line:nand4 _w3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _w2 Val:D Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _out1 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand3 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w3 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:nand2 _w1 Val:Dbar Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _w2 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand1 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _w1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:input_in2 Val:0 Dir:OUT Visited: 1 Type:PI]
        [Line:input_in1 Val:1 Dir:OUT Visited: 1 Type:PI]
        [Line:output_out1 Val:Dbar Dir:IN Visited: 0 Type:PO]

[Msg89] Updating linelist with line : [Line:nand2 _w1 Val:Dbar Dir:IN Visited: 0 Type:INT_WIRE]
[Msg90] Updating the maps 
[Msg91] Current linelist status after pattern generation()
        [Line:nand4 _w3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _w2 Val:D Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _out1 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand3 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w3 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:nand2 _w1 Val:Dbar Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _w2 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand1 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _w1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:input_in2 Val:0 Dir:OUT Visited: 1 Type:PI]
        [Line:input_in1 Val:1 Dir:OUT Visited: 1 Type:PI]
        [Line:output_out1 Val:Dbar Dir:IN Visited: 0 Type:PO]

[Msg] Printing PI patterns 
     input_in2 0
     input_in1 1
---------------------------------------------------------
---------------------------------------------------------
TG for line #8 SA-1. Fault #15
[Msg0] Initialzed all line values to X and isVisited = false
[Msg1] Updated line : nand2 _in1 from linelist to [Line:nand2 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
[Msg2] Updating the maps 
[Msg] Printing PI patterns 
     input_in2 X
     input_in1 X
[Msg3] Current linelist status before Justify()
        [Line:nand4 _w3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _out1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand3 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w3 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand2 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _w2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand1 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _w1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:input_in2 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:input_in1 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO]

[Msg4] Generating test patterns for line : [Line:nand2 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
[Msg5] Justifying line : [Line:nand2 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 0
Here 99
[Msg6] Equalizing fanin/fanout values line : [Line:input_in1 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg7] Updating linelist with line : [Line:input_in1 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg8] Updating the maps 
[Msg9] Concluding. Reached PI line : [Line:input_in1 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg10] All lines justified 
[Msg11] Updating linelist with line : [Line:input_in1 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg12] Updating the maps 
[Msg13] Current linelist status before Propagate() and after Justify()
        [Line:nand4 _w3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _out1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand3 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w3 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand2 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _w2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand1 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _w1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:input_in2 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:input_in1 Val:0 Dir:OUT Visited: 1 Type:PI]
        [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO]

[Msg14] Propagating D for the line : nand2 _in1
[Msg15] Updating linelist with line : [Line:nand2 _in1 Val:D Dir:IN Visited: 0 Type:INT_WIRE]
[Msg16] Updating the maps 
[Msg17] Updated linelist at this stage. - About to start  Propagate()
        [nand4 _w3 X IN V=0] 
        [nand4 _w2 X IN V=0] 
        [nand4 _out1 X OUT V=0] 
        [nand3 _in2 X IN V=0] 
        [nand3 _w1 X IN V=0] 
        [nand3 _w3 X OUT V=0] 
        [nand2 _w1 X IN V=0] 
        [nand2 _in1 D IN V=0] 
        [nand2 _w2 X OUT V=0] 
        [nand1 _in2 X IN V=0] 
        [nand1 _in1 X IN V=0] 
        [nand1 _w1 X OUT V=0] 
        [input_in2 X OUT V=0] 
        [input_in1 0 OUT V=1] 
        [output_out1 X IN V=0] 
[Msg18][Line:nand2 _in1 Val:D Dir:IN Visited: 0 Type:INT_WIRE] is an input line to the component
[Msg19] Corresponding output line : nand2 _w2
[Msg20] Checking nand2 _w1 to be justified or not
[Msg21] Justify nand2 _w1 inside Propagate. line.direction == IN The line : [Line:nand2 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
[Msg22] Justifying line : [Line:nand2 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 1
Here 100
[Msg23] Equalizing fanin/fanout values line : [Line:nand1 _w1 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg24] One of the input lines of line : [Line:nand1 _w1 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE] to be justified
[Msg25] Trying line : [Line:nand1 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] to justify
[Msg26] Only [Line:nand1 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] of line : nand1 _w1 to be justified
[Msg27] Saving [Line:nand1 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] for future backtracking.
[Msg28] Justifying line : [Line:nand1 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 0
Here 101
[Msg29] Equalizing fanin/fanout values line : [Line:input_in2 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg30] Updating linelist with line : [Line:input_in2 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg31] Updating the maps 
[Msg32] Concluding. Reached PI line : [Line:input_in2 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg33] Updating linelist with line : [Line:nand1 _w1 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg34] Updating the maps 
[Msg35] Checking nand2 _in1 to be justified or not
[Msg36] Equalizing fanin/fanout values line : [Line:nand2 _w2 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg37] Updating linelist with line : [Line:nand2 _w2 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg38] Updating the maps 
[Msg39] All i/p lines justified for nand2 _w2 to Propagate. The line : [Line:nand2 _w2 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg40] Current linelist status inside Propagate() after all input line justification        [nand4 _w3 X IN V=0] 
        [nand4 _w2 X IN V=0] 
        [nand4 _out1 X OUT V=0] 
        [nand3 _in2 X IN V=0] 
        [nand3 _w1 X IN V=0] 
        [nand3 _w3 X OUT V=0] 
        [nand2 _w1 X IN V=0] 
        [nand2 _in1 D IN V=0] 
        [nand2 _w2 D OUT V=0] 
        [nand1 _in2 X IN V=0] 
        [nand1 _in1 X IN V=0] 
        [nand1 _w1 1 OUT V=1] 
        [input_in2 0 OUT V=1] 
        [input_in1 0 OUT V=1] 
        [output_out1 X IN V=0] 
[Msg41] error_val :D and iv : 1
[Msg42] Input line : [Line:nand4 _w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] is propagated with val Dbar (error_val^iv)
[Msg43] Propagating Dbar for the line : nand4 _w2
[Msg44] Updating linelist with line : [Line:nand4 _w2 Val:Dbar Dir:IN Visited: 0 Type:INT_WIRE]
[Msg45] Updating the maps 
[Msg46] Updated linelist at this stage. - About to start  Propagate()
        [nand4 _w3 X IN V=0] 
        [nand4 _w2 Dbar IN V=0] 
        [nand4 _out1 X OUT V=0] 
        [nand3 _in2 X IN V=0] 
        [nand3 _w1 X IN V=0] 
        [nand3 _w3 X OUT V=0] 
        [nand2 _w1 X IN V=0] 
        [nand2 _in1 D IN V=0] 
        [nand2 _w2 D OUT V=0] 
        [nand1 _in2 X IN V=0] 
        [nand1 _in1 X IN V=0] 
        [nand1 _w1 1 OUT V=1] 
        [input_in2 0 OUT V=1] 
        [input_in1 0 OUT V=1] 
        [output_out1 X IN V=0] 
[Msg47][Line:nand4 _w2 Val:Dbar Dir:IN Visited: 0 Type:INT_WIRE] is an input line to the component
[Msg48] Corresponding output line : nand4 _out1
[Msg49] Checking nand4 _w3 to be justified or not
[Msg50] Justify nand4 _w3 inside Propagate. line.direction == IN The line : [Line:nand4 _w3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
[Msg51] Justifying line : [Line:nand4 _w3 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 1
Here 102
[Msg52] Equalizing fanin/fanout values line : [Line:nand3 _w3 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg53] One of the input lines of line : [Line:nand3 _w3 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE] to be justified
[Msg54] Trying line : [Line:nand3 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] to justify
[Msg55] Only [Line:nand3 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] of line : nand3 _w3 to be justified
[Msg56] Saving [Line:nand3 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] for future backtracking.
[Msg57] Justifying line : [Line:nand3 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 0
Here 103
[Msg58] 2) Line : [Line:input_in2 Val:0 Dir:OUT Visited: 1 Type:PI] already justified with value0
[Msg59] Updating linelist with line : [Line:nand3 _w3 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg60] Updating the maps 
[Msg61] Checking nand4 _w2 to be justified or not
[Msg62] Equalizing fanin/fanout values line : [Line:nand4 _out1 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg63] Updating linelist with line : [Line:nand4 _out1 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg64] Updating the maps 
[Msg65] All i/p lines justified for nand4 _out1 to Propagate. The line : [Line:nand4 _out1 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg66] Current linelist status inside Propagate() after all input line justification        [nand4 _w3 X IN V=0] 
        [nand4 _w2 Dbar IN V=0] 
        [nand4 _out1 Dbar OUT V=0] 
        [nand3 _in2 X IN V=0] 
        [nand3 _w1 X IN V=0] 
        [nand3 _w3 1 OUT V=1] 
        [nand2 _w1 X IN V=0] 
        [nand2 _in1 D IN V=0] 
        [nand2 _w2 D OUT V=0] 
        [nand1 _in2 X IN V=0] 
        [nand1 _in1 X IN V=0] 
        [nand1 _w1 1 OUT V=1] 
        [input_in2 0 OUT V=1] 
        [input_in1 0 OUT V=1] 
        [output_out1 X IN V=0] 
[Msg67] error_val :Dbar and iv : 1
[Msg68] Input line : [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO] is propagated with val D (error_val^iv)
[Msg69] Propagating D for the line : output_out1
[Msg70] Updating linelist with line : [Line:output_out1 Val:D Dir:IN Visited: 0 Type:PO]
[Msg71] Updating the maps 
[Msg72] Updated linelist at this stage. - About to start  Propagate()
        [nand4 _w3 X IN V=0] 
        [nand4 _w2 Dbar IN V=0] 
        [nand4 _out1 Dbar OUT V=0] 
        [nand3 _in2 X IN V=0] 
        [nand3 _w1 X IN V=0] 
        [nand3 _w3 1 OUT V=1] 
        [nand2 _w1 X IN V=0] 
        [nand2 _in1 D IN V=0] 
        [nand2 _w2 D OUT V=0] 
        [nand1 _in2 X IN V=0] 
        [nand1 _in1 X IN V=0] 
        [nand1 _w1 1 OUT V=1] 
        [input_in2 0 OUT V=1] 
        [input_in1 0 OUT V=1] 
        [output_out1 D IN V=0] 
[Msg73] Concluding. Reached PO line : [Line:output_out1 Val:D Dir:IN Visited: 0 Type:PO]
[Msg74] Current linelist status after Propagate()
        [Line:nand4 _w3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _w2 Val:Dbar Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _out1 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand3 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w3 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:nand2 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _in1 Val:D Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _w2 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand1 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _w1 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:input_in2 Val:0 Dir:OUT Visited: 1 Type:PI]
        [Line:input_in1 Val:0 Dir:OUT Visited: 1 Type:PI]
        [Line:output_out1 Val:D Dir:IN Visited: 0 Type:PO]

[Msg75] Updating linelist with line : [Line:nand2 _in1 Val:D Dir:IN Visited: 0 Type:INT_WIRE]
[Msg76] Updating the maps 
[Msg77] Current linelist status after pattern generation()
        [Line:nand4 _w3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _w2 Val:Dbar Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _out1 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand3 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w3 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:nand2 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _in1 Val:D Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _w2 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand1 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _w1 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:input_in2 Val:0 Dir:OUT Visited: 1 Type:PI]
        [Line:input_in1 Val:0 Dir:OUT Visited: 1 Type:PI]
        [Line:output_out1 Val:D Dir:IN Visited: 0 Type:PO]

[Msg] Printing PI patterns 
     input_in2 0
     input_in1 0
Here !!!
---------------------------------------------------------
---------------------------------------------------------
TG for line #8 SA-0. Fault #16
[Msg0] Initialzed all line values to X and isVisited = false
[Msg1] Updated line : nand2 _in1 from linelist to [Line:nand2 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
[Msg2] Updating the maps 
[Msg] Printing PI patterns 
     input_in2 X
     input_in1 X
[Msg3] Current linelist status before Justify()
        [Line:nand4 _w3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _out1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand3 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w3 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand2 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _w2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand1 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _w1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:input_in2 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:input_in1 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO]

[Msg4] Generating test patterns for line : [Line:nand2 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
[Msg5] Justifying line : [Line:nand2 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 1
Here 104
[Msg6] Equalizing fanin/fanout values line : [Line:input_in1 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg7] Updating linelist with line : [Line:input_in1 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg8] Updating the maps 
[Msg9] Concluding. Reached PI line : [Line:input_in1 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg10] All lines justified 
[Msg11] Updating linelist with line : [Line:input_in1 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg12] Updating the maps 
[Msg13] Current linelist status before Propagate() and after Justify()
        [Line:nand4 _w3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _out1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand3 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w3 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand2 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _w2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand1 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _w1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:input_in2 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:input_in1 Val:1 Dir:OUT Visited: 1 Type:PI]
        [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO]

[Msg14] Propagating Dbar for the line : nand2 _in1
[Msg15] Updating linelist with line : [Line:nand2 _in1 Val:Dbar Dir:IN Visited: 0 Type:INT_WIRE]
[Msg16] Updating the maps 
[Msg17] Updated linelist at this stage. - About to start  Propagate()
        [nand4 _w3 X IN V=0] 
        [nand4 _w2 X IN V=0] 
        [nand4 _out1 X OUT V=0] 
        [nand3 _in2 X IN V=0] 
        [nand3 _w1 X IN V=0] 
        [nand3 _w3 X OUT V=0] 
        [nand2 _w1 X IN V=0] 
        [nand2 _in1 Dbar IN V=0] 
        [nand2 _w2 X OUT V=0] 
        [nand1 _in2 X IN V=0] 
        [nand1 _in1 X IN V=0] 
        [nand1 _w1 X OUT V=0] 
        [input_in2 X OUT V=0] 
        [input_in1 1 OUT V=1] 
        [output_out1 X IN V=0] 
[Msg18][Line:nand2 _in1 Val:Dbar Dir:IN Visited: 0 Type:INT_WIRE] is an input line to the component
[Msg19] Corresponding output line : nand2 _w2
[Msg20] Checking nand2 _in1 to be justified or not
[Msg21] Checking nand2 _w1 to be justified or not
[Msg22] Justify nand2 _w1 inside Propagate. line.direction == IN The line : [Line:nand2 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
[Msg23] Justifying line : [Line:nand2 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 1
Here 105
[Msg24] Equalizing fanin/fanout values line : [Line:nand1 _w1 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg25] One of the input lines of line : [Line:nand1 _w1 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE] to be justified
[Msg26] Trying line : [Line:nand1 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] to justify
[Msg27] Only [Line:nand1 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] of line : nand1 _w1 to be justified
[Msg28] Saving [Line:nand1 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] for future backtracking.
[Msg29] Justifying line : [Line:nand1 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 0
Here 106
[Msg30] 1) Cannot justify line : [Line:input_in1 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg31] Trying line : [Line:nand1 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] to justify
[Msg32] Only [Line:nand1 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] of line : nand1 _w1 to be justified
[Msg33] Saving [Line:nand1 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] for future backtracking.
[Msg34] Justifying line : [Line:nand1 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 0
Here 107
[Msg35] Equalizing fanin/fanout values line : [Line:input_in2 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg36] Updating linelist with line : [Line:input_in2 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg37] Updating the maps 
[Msg38] Concluding. Reached PI line : [Line:input_in2 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg39] Updating linelist with line : [Line:nand1 _w1 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg40] Updating the maps 
[Msg41] Equalizing fanin/fanout values line : [Line:nand2 _w2 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg42] Updating linelist with line : [Line:nand2 _w2 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg43] Updating the maps 
[Msg44] All i/p lines justified for nand2 _w2 to Propagate. The line : [Line:nand2 _w2 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg45] Current linelist status inside Propagate() after all input line justification        [nand4 _w3 X IN V=0] 
        [nand4 _w2 X IN V=0] 
        [nand4 _out1 X OUT V=0] 
        [nand3 _in2 X IN V=0] 
        [nand3 _w1 X IN V=0] 
        [nand3 _w3 X OUT V=0] 
        [nand2 _w1 X IN V=0] 
        [nand2 _in1 Dbar IN V=0] 
        [nand2 _w2 Dbar OUT V=0] 
        [nand1 _in2 X IN V=0] 
        [nand1 _in1 X IN V=0] 
        [nand1 _w1 1 OUT V=1] 
        [input_in2 0 OUT V=1] 
        [input_in1 1 OUT V=1] 
        [output_out1 X IN V=0] 
[Msg46] error_val :Dbar and iv : 1
[Msg47] Input line : [Line:nand4 _w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] is propagated with val D (error_val^iv)
[Msg48] Propagating D for the line : nand4 _w2
[Msg49] Updating linelist with line : [Line:nand4 _w2 Val:D Dir:IN Visited: 0 Type:INT_WIRE]
[Msg50] Updating the maps 
[Msg51] Updated linelist at this stage. - About to start  Propagate()
        [nand4 _w3 X IN V=0] 
        [nand4 _w2 D IN V=0] 
        [nand4 _out1 X OUT V=0] 
        [nand3 _in2 X IN V=0] 
        [nand3 _w1 X IN V=0] 
        [nand3 _w3 X OUT V=0] 
        [nand2 _w1 X IN V=0] 
        [nand2 _in1 Dbar IN V=0] 
        [nand2 _w2 Dbar OUT V=0] 
        [nand1 _in2 X IN V=0] 
        [nand1 _in1 X IN V=0] 
        [nand1 _w1 1 OUT V=1] 
        [input_in2 0 OUT V=1] 
        [input_in1 1 OUT V=1] 
        [output_out1 X IN V=0] 
[Msg52][Line:nand4 _w2 Val:D Dir:IN Visited: 0 Type:INT_WIRE] is an input line to the component
[Msg53] Corresponding output line : nand4 _out1
[Msg54] Checking nand4 _w2 to be justified or not
[Msg55] Checking nand4 _w3 to be justified or not
[Msg56] Justify nand4 _w3 inside Propagate. line.direction == IN The line : [Line:nand4 _w3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
[Msg57] Justifying line : [Line:nand4 _w3 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 1
Here 108
[Msg58] Equalizing fanin/fanout values line : [Line:nand3 _w3 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg59] One of the input lines of line : [Line:nand3 _w3 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE] to be justified
[Msg60] Trying line : [Line:nand3 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] to justify
[Msg61] Only [Line:nand3 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] of line : nand3 _w3 to be justified
[Msg62] Saving [Line:nand3 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] for future backtracking.
[Msg63] Justifying line : [Line:nand3 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 0
Here 109
[Msg64] Equalizing fanin/fanout values line : [Line:nand1 _w1 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg65] inval = 1] Justifying all input lines for the line : [Line:nand1 _w1 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg66] Following lines need to be justified. (Total 2 lines)
        [Line:nand1 _w1] -->  [Line:nand1 _in1] [Line:nand1 _in2]
[Msg67] Justifying line : [Line:nand1 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 1
Here 110
[Msg68] 2) Line : [Line:input_in1 Val:1 Dir:OUT Visited: 1 Type:PI] already justified with value1
[Msg69] Updating linelist with line : [Line:nand1 _w1 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg70] Updating the maps 
[Msg71] Justifying line : [Line:nand1 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 1
Here 111
[Msg72] 1) Cannot justify line : [Line:input_in2 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg73] 2) Cannot justify line : [Line:nand1 _w1 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg74] Trying line : [Line:nand3 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] to justify
[Msg75] Only [Line:nand3 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] of line : nand3 _w3 to be justified
[Msg76] Saving [Line:nand3 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] for future backtracking.
[Msg77] Justifying line : [Line:nand3 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 0
Here 112
[Msg78] 2) Line : [Line:input_in2 Val:0 Dir:OUT Visited: 1 Type:PI] already justified with value0
[Msg79] Updating linelist with line : [Line:nand3 _w3 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg80] Updating the maps 
[Msg81] Equalizing fanin/fanout values line : [Line:nand4 _out1 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg82] Updating linelist with line : [Line:nand4 _out1 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg83] Updating the maps 
[Msg84] All i/p lines justified for nand4 _out1 to Propagate. The line : [Line:nand4 _out1 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg85] Current linelist status inside Propagate() after all input line justification        [nand4 _w3 X IN V=0] 
        [nand4 _w2 D IN V=0] 
        [nand4 _out1 D OUT V=0] 
        [nand3 _in2 X IN V=0] 
        [nand3 _w1 X IN V=0] 
        [nand3 _w3 1 OUT V=1] 
        [nand2 _w1 X IN V=0] 
        [nand2 _in1 Dbar IN V=0] 
        [nand2 _w2 Dbar OUT V=0] 
        [nand1 _in2 X IN V=0] 
        [nand1 _in1 X IN V=0] 
        [nand1 _w1 0 OUT V=1] 
        [input_in2 0 OUT V=1] 
        [input_in1 1 OUT V=1] 
        [output_out1 X IN V=0] 
[Msg86] error_val :D and iv : 1
[Msg87] Input line : [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO] is propagated with val Dbar (error_val^iv)
[Msg88] Propagating Dbar for the line : output_out1
[Msg89] Updating linelist with line : [Line:output_out1 Val:Dbar Dir:IN Visited: 0 Type:PO]
[Msg90] Updating the maps 
[Msg91] Updated linelist at this stage. - About to start  Propagate()
        [nand4 _w3 X IN V=0] 
        [nand4 _w2 D IN V=0] 
        [nand4 _out1 D OUT V=0] 
        [nand3 _in2 X IN V=0] 
        [nand3 _w1 X IN V=0] 
        [nand3 _w3 1 OUT V=1] 
        [nand2 _w1 X IN V=0] 
        [nand2 _in1 Dbar IN V=0] 
        [nand2 _w2 Dbar OUT V=0] 
        [nand1 _in2 X IN V=0] 
        [nand1 _in1 X IN V=0] 
        [nand1 _w1 0 OUT V=1] 
        [input_in2 0 OUT V=1] 
        [input_in1 1 OUT V=1] 
        [output_out1 Dbar IN V=0] 
[Msg92] Concluding. Reached PO line : [Line:output_out1 Val:Dbar Dir:IN Visited: 0 Type:PO]
[Msg93] Current linelist status after Propagate()
        [Line:nand4 _w3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _w2 Val:D Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _out1 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand3 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w3 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:nand2 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _in1 Val:Dbar Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _w2 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand1 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _w1 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:input_in2 Val:0 Dir:OUT Visited: 1 Type:PI]
        [Line:input_in1 Val:1 Dir:OUT Visited: 1 Type:PI]
        [Line:output_out1 Val:Dbar Dir:IN Visited: 0 Type:PO]

[Msg94] Updating linelist with line : [Line:nand2 _in1 Val:Dbar Dir:IN Visited: 0 Type:INT_WIRE]
[Msg95] Updating the maps 
[Msg96] Current linelist status after pattern generation()
        [Line:nand4 _w3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _w2 Val:D Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _out1 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand3 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w3 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:nand2 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _in1 Val:Dbar Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _w2 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand1 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _w1 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:input_in2 Val:0 Dir:OUT Visited: 1 Type:PI]
        [Line:input_in1 Val:1 Dir:OUT Visited: 1 Type:PI]
        [Line:output_out1 Val:Dbar Dir:IN Visited: 0 Type:PO]

[Msg] Printing PI patterns 
     input_in2 0
     input_in1 1
---------------------------------------------------------
---------------------------------------------------------
TG for line #9 SA-1. Fault #17
[Msg0] Initialzed all line values to X and isVisited = false
[Msg1] Updated line : nand2 _w2 from linelist to [Line:nand2 _w2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg2] Updating the maps 
[Msg] Printing PI patterns 
     input_in2 X
     input_in1 X
[Msg3] Current linelist status before Justify()
        [Line:nand4 _w3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _out1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand3 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w3 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand2 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _w2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand1 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _w1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:input_in2 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:input_in1 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO]

[Msg4] Generating test patterns for line : [Line:nand2 _w2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg5] Justifying line : [Line:nand2 _w2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE] with value 0
Here 113
[Msg6] Equalizing fanin/fanout values line : [Line:nand2 _w2 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg7] inval = 1] Justifying all input lines for the line : [Line:nand2 _w2 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg8] Following lines need to be justified. (Total 2 lines)
        [Line:nand2 _w2] -->  [Line:nand2 _w1] [Line:nand2 _in1]
[Msg9] Justifying line : [Line:nand2 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 1
Here 114
[Msg10] Equalizing fanin/fanout values line : [Line:nand1 _w1 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg11] One of the input lines of line : [Line:nand1 _w1 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE] to be justified
[Msg12] Trying line : [Line:nand1 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] to justify
[Msg13] Only [Line:nand1 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] of line : nand1 _w1 to be justified
[Msg14] Saving [Line:nand1 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] for future backtracking.
[Msg15] Justifying line : [Line:nand1 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 0
Here 115
[Msg16] Equalizing fanin/fanout values line : [Line:input_in2 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg17] Updating linelist with line : [Line:input_in2 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg18] Updating the maps 
[Msg19] Concluding. Reached PI line : [Line:input_in2 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg20] Updating linelist with line : [Line:nand1 _w1 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg21] Updating the maps 
[Msg22] Updating linelist with line : [Line:nand2 _w2 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg23] Updating the maps 
[Msg24] Justifying line : [Line:nand2 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 1
Here 116
[Msg25] Equalizing fanin/fanout values line : [Line:input_in1 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg26] Updating linelist with line : [Line:input_in1 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg27] Updating the maps 
[Msg28] Concluding. Reached PI line : [Line:input_in1 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg29] Updating linelist with line : [Line:nand2 _w2 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg30] Updating the maps 
[Msg31] All lines justified 
[Msg32] Updating linelist with line : [Line:nand2 _w2 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg33] Updating the maps 
[Msg34] Current linelist status before Propagate() and after Justify()
        [Line:nand4 _w3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _out1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand3 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w3 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand2 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _w2 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:nand1 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _w1 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:input_in2 Val:0 Dir:OUT Visited: 1 Type:PI]
        [Line:input_in1 Val:1 Dir:OUT Visited: 1 Type:PI]
        [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO]

[Msg35] Propagating D for the line : nand2 _w2
[Msg36] Updating linelist with line : [Line:nand2 _w2 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg37] Updating the maps 
[Msg38] Updated linelist at this stage. - About to start  Propagate()
        [nand4 _w3 X IN V=0] 
        [nand4 _w2 X IN V=0] 
        [nand4 _out1 X OUT V=0] 
        [nand3 _in2 X IN V=0] 
        [nand3 _w1 X IN V=0] 
        [nand3 _w3 X OUT V=0] 
        [nand2 _w1 X IN V=0] 
        [nand2 _in1 X IN V=0] 
        [nand2 _w2 D OUT V=0] 
        [nand1 _in2 X IN V=0] 
        [nand1 _in1 X IN V=0] 
        [nand1 _w1 1 OUT V=1] 
        [input_in2 0 OUT V=1] 
        [input_in1 1 OUT V=1] 
        [output_out1 X IN V=0] 
[Msg39] Equalizing fanin/fanout values line : [Line:nand2 _w2 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg40] Updating linelist with line : [Line:nand2 _w2 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg41] Updating the maps 
[Msg42 Input line  [Line:nand4 _w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] is propagated
[Msg43] Propagating Dbar for the line : nand4 _w2
[Msg44] Updating linelist with line : [Line:nand4 _w2 Val:Dbar Dir:IN Visited: 0 Type:INT_WIRE]
[Msg45] Updating the maps 
[Msg46] Updated linelist at this stage. - About to start  Propagate()
        [nand4 _w3 X IN V=0] 
        [nand4 _w2 Dbar IN V=0] 
        [nand4 _out1 X OUT V=0] 
        [nand3 _in2 X IN V=0] 
        [nand3 _w1 X IN V=0] 
        [nand3 _w3 X OUT V=0] 
        [nand2 _w1 X IN V=0] 
        [nand2 _in1 X IN V=0] 
        [nand2 _w2 D OUT V=0] 
        [nand1 _in2 X IN V=0] 
        [nand1 _in1 X IN V=0] 
        [nand1 _w1 1 OUT V=1] 
        [input_in2 0 OUT V=1] 
        [input_in1 1 OUT V=1] 
        [output_out1 X IN V=0] 
[Msg47][Line:nand4 _w2 Val:Dbar Dir:IN Visited: 0 Type:INT_WIRE] is an input line to the component
[Msg48] Corresponding output line : nand4 _out1
[Msg49] Checking nand4 _w3 to be justified or not
[Msg50] Justify nand4 _w3 inside Propagate. line.direction == IN The line : [Line:nand4 _w3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
[Msg51] Justifying line : [Line:nand4 _w3 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 1
Here 117
[Msg52] Equalizing fanin/fanout values line : [Line:nand3 _w3 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg53] One of the input lines of line : [Line:nand3 _w3 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE] to be justified
[Msg54] Trying line : [Line:nand3 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] to justify
[Msg55] Only [Line:nand3 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] of line : nand3 _w3 to be justified
[Msg56] Saving [Line:nand3 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] for future backtracking.
[Msg57] Justifying line : [Line:nand3 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 0
Here 118
[Msg58] 2) Line : [Line:input_in2 Val:0 Dir:OUT Visited: 1 Type:PI] already justified with value0
[Msg59] Updating linelist with line : [Line:nand3 _w3 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg60] Updating the maps 
[Msg61] Checking nand4 _w2 to be justified or not
[Msg62] Equalizing fanin/fanout values line : [Line:nand4 _out1 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg63] Updating linelist with line : [Line:nand4 _out1 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg64] Updating the maps 
[Msg65] All i/p lines justified for nand4 _out1 to Propagate. The line : [Line:nand4 _out1 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg66] Current linelist status inside Propagate() after all input line justification        [nand4 _w3 X IN V=0] 
        [nand4 _w2 Dbar IN V=0] 
        [nand4 _out1 Dbar OUT V=0] 
        [nand3 _in2 X IN V=0] 
        [nand3 _w1 X IN V=0] 
        [nand3 _w3 1 OUT V=1] 
        [nand2 _w1 X IN V=0] 
        [nand2 _in1 X IN V=0] 
        [nand2 _w2 D OUT V=0] 
        [nand1 _in2 X IN V=0] 
        [nand1 _in1 X IN V=0] 
        [nand1 _w1 1 OUT V=1] 
        [input_in2 0 OUT V=1] 
        [input_in1 1 OUT V=1] 
        [output_out1 X IN V=0] 
[Msg67] error_val :Dbar and iv : 1
[Msg68] Input line : [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO] is propagated with val D (error_val^iv)
[Msg69] Propagating D for the line : output_out1
[Msg70] Updating linelist with line : [Line:output_out1 Val:D Dir:IN Visited: 0 Type:PO]
[Msg71] Updating the maps 
[Msg72] Updated linelist at this stage. - About to start  Propagate()
        [nand4 _w3 X IN V=0] 
        [nand4 _w2 Dbar IN V=0] 
        [nand4 _out1 Dbar OUT V=0] 
        [nand3 _in2 X IN V=0] 
        [nand3 _w1 X IN V=0] 
        [nand3 _w3 1 OUT V=1] 
        [nand2 _w1 X IN V=0] 
        [nand2 _in1 X IN V=0] 
        [nand2 _w2 D OUT V=0] 
        [nand1 _in2 X IN V=0] 
        [nand1 _in1 X IN V=0] 
        [nand1 _w1 1 OUT V=1] 
        [input_in2 0 OUT V=1] 
        [input_in1 1 OUT V=1] 
        [output_out1 D IN V=0] 
[Msg73] Concluding. Reached PO line : [Line:output_out1 Val:D Dir:IN Visited: 0 Type:PO]
[Msg74] Current linelist status after Propagate()
        [Line:nand4 _w3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _w2 Val:Dbar Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _out1 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand3 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w3 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:nand2 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _w2 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand1 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _w1 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:input_in2 Val:0 Dir:OUT Visited: 1 Type:PI]
        [Line:input_in1 Val:1 Dir:OUT Visited: 1 Type:PI]
        [Line:output_out1 Val:D Dir:IN Visited: 0 Type:PO]

[Msg75] Updating linelist with line : [Line:nand2 _w2 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg76] Updating the maps 
[Msg77] Current linelist status after pattern generation()
        [Line:nand4 _w3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _w2 Val:Dbar Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _out1 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand3 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w3 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:nand2 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _w2 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand1 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _w1 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:input_in2 Val:0 Dir:OUT Visited: 1 Type:PI]
        [Line:input_in1 Val:1 Dir:OUT Visited: 1 Type:PI]
        [Line:output_out1 Val:D Dir:IN Visited: 0 Type:PO]

[Msg] Printing PI patterns 
     input_in2 0
     input_in1 1
Here !!!
---------------------------------------------------------
---------------------------------------------------------
TG for line #9 SA-0. Fault #18
[Msg0] Initialzed all line values to X and isVisited = false
[Msg1] Updated line : nand2 _w2 from linelist to [Line:nand2 _w2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg2] Updating the maps 
[Msg] Printing PI patterns 
     input_in2 X
     input_in1 X
[Msg3] Current linelist status before Justify()
        [Line:nand4 _w3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _out1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand3 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w3 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand2 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _w2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand1 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _w1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:input_in2 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:input_in1 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO]

[Msg4] Generating test patterns for line : [Line:nand2 _w2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg5] Justifying line : [Line:nand2 _w2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE] with value 1
Here 119
[Msg6] Equalizing fanin/fanout values line : [Line:nand2 _w2 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg7] One of the input lines of line : [Line:nand2 _w2 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE] to be justified
[Msg8] Trying line : [Line:nand2 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] to justify
[Msg9] Only [Line:nand2 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] of line : nand2 _w2 to be justified
[Msg10] Saving [Line:nand2 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] for future backtracking.
[Msg11] Justifying line : [Line:nand2 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 0
Here 120
[Msg12] Equalizing fanin/fanout values line : [Line:input_in1 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg13] Updating linelist with line : [Line:input_in1 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg14] Updating the maps 
[Msg15] Concluding. Reached PI line : [Line:input_in1 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg16] Updating linelist with line : [Line:nand2 _w2 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg17] Updating the maps 
[Msg18] All lines justified 
[Msg19] Updating linelist with line : [Line:nand2 _w2 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg20] Updating the maps 
[Msg21] Current linelist status before Propagate() and after Justify()
        [Line:nand4 _w3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _out1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand3 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w3 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand2 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _w2 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:nand1 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _w1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:input_in2 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:input_in1 Val:0 Dir:OUT Visited: 1 Type:PI]
        [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO]

[Msg22] Propagating Dbar for the line : nand2 _w2
[Msg23] Updating linelist with line : [Line:nand2 _w2 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg24] Updating the maps 
[Msg25] Updated linelist at this stage. - About to start  Propagate()
        [nand4 _w3 X IN V=0] 
        [nand4 _w2 X IN V=0] 
        [nand4 _out1 X OUT V=0] 
        [nand3 _in2 X IN V=0] 
        [nand3 _w1 X IN V=0] 
        [nand3 _w3 X OUT V=0] 
        [nand2 _w1 X IN V=0] 
        [nand2 _in1 X IN V=0] 
        [nand2 _w2 Dbar OUT V=0] 
        [nand1 _in2 X IN V=0] 
        [nand1 _in1 X IN V=0] 
        [nand1 _w1 X OUT V=0] 
        [input_in2 X OUT V=0] 
        [input_in1 0 OUT V=1] 
        [output_out1 X IN V=0] 
[Msg26] Equalizing fanin/fanout values line : [Line:nand2 _w2 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg27] Updating linelist with line : [Line:nand2 _w2 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg28] Updating the maps 
[Msg29 Input line  [Line:nand4 _w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] is propagated
[Msg30] Propagating D for the line : nand4 _w2
[Msg31] Updating linelist with line : [Line:nand4 _w2 Val:D Dir:IN Visited: 0 Type:INT_WIRE]
[Msg32] Updating the maps 
[Msg33] Updated linelist at this stage. - About to start  Propagate()
        [nand4 _w3 X IN V=0] 
        [nand4 _w2 D IN V=0] 
        [nand4 _out1 X OUT V=0] 
        [nand3 _in2 X IN V=0] 
        [nand3 _w1 X IN V=0] 
        [nand3 _w3 X OUT V=0] 
        [nand2 _w1 X IN V=0] 
        [nand2 _in1 X IN V=0] 
        [nand2 _w2 Dbar OUT V=0] 
        [nand1 _in2 X IN V=0] 
        [nand1 _in1 X IN V=0] 
        [nand1 _w1 X OUT V=0] 
        [input_in2 X OUT V=0] 
        [input_in1 0 OUT V=1] 
        [output_out1 X IN V=0] 
[Msg34][Line:nand4 _w2 Val:D Dir:IN Visited: 0 Type:INT_WIRE] is an input line to the component
[Msg35] Corresponding output line : nand4 _out1
[Msg36] Checking nand4 _w2 to be justified or not
[Msg37] Checking nand4 _w3 to be justified or not
[Msg38] Justify nand4 _w3 inside Propagate. line.direction == IN The line : [Line:nand4 _w3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
[Msg39] Justifying line : [Line:nand4 _w3 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 1
Here 121
[Msg40] Equalizing fanin/fanout values line : [Line:nand3 _w3 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg41] One of the input lines of line : [Line:nand3 _w3 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE] to be justified
[Msg42] Trying line : [Line:nand3 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] to justify
[Msg43] Only [Line:nand3 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] of line : nand3 _w3 to be justified
[Msg44] Saving [Line:nand3 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] for future backtracking.
[Msg45] Justifying line : [Line:nand3 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 0
Here 122
[Msg46] Equalizing fanin/fanout values line : [Line:nand1 _w1 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg47] inval = 1] Justifying all input lines for the line : [Line:nand1 _w1 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg48] Following lines need to be justified. (Total 2 lines)
        [Line:nand1 _w1] -->  [Line:nand1 _in1] [Line:nand1 _in2]
[Msg49] Justifying line : [Line:nand1 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 1
Here 123
[Msg50] 1) Cannot justify line : [Line:input_in1 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg51] 2) Cannot justify line : [Line:nand1 _w1 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg52] Trying line : [Line:nand3 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] to justify
[Msg53] Only [Line:nand3 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] of line : nand3 _w3 to be justified
[Msg54] Saving [Line:nand3 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] for future backtracking.
[Msg55] Justifying line : [Line:nand3 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 0
Here 124
[Msg56] Equalizing fanin/fanout values line : [Line:input_in2 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg57] Updating linelist with line : [Line:input_in2 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg58] Updating the maps 
[Msg59] Concluding. Reached PI line : [Line:input_in2 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg60] Updating linelist with line : [Line:nand3 _w3 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg61] Updating the maps 
[Msg62] Equalizing fanin/fanout values line : [Line:nand4 _out1 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg63] Updating linelist with line : [Line:nand4 _out1 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg64] Updating the maps 
[Msg65] All i/p lines justified for nand4 _out1 to Propagate. The line : [Line:nand4 _out1 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg66] Current linelist status inside Propagate() after all input line justification        [nand4 _w3 X IN V=0] 
        [nand4 _w2 D IN V=0] 
        [nand4 _out1 D OUT V=0] 
        [nand3 _in2 X IN V=0] 
        [nand3 _w1 X IN V=0] 
        [nand3 _w3 1 OUT V=1] 
        [nand2 _w1 X IN V=0] 
        [nand2 _in1 X IN V=0] 
        [nand2 _w2 Dbar OUT V=0] 
        [nand1 _in2 X IN V=0] 
        [nand1 _in1 X IN V=0] 
        [nand1 _w1 X OUT V=0] 
        [input_in2 0 OUT V=1] 
        [input_in1 0 OUT V=1] 
        [output_out1 X IN V=0] 
[Msg67] error_val :D and iv : 1
[Msg68] Input line : [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO] is propagated with val Dbar (error_val^iv)
[Msg69] Propagating Dbar for the line : output_out1
[Msg70] Updating linelist with line : [Line:output_out1 Val:Dbar Dir:IN Visited: 0 Type:PO]
[Msg71] Updating the maps 
[Msg72] Updated linelist at this stage. - About to start  Propagate()
        [nand4 _w3 X IN V=0] 
        [nand4 _w2 D IN V=0] 
        [nand4 _out1 D OUT V=0] 
        [nand3 _in2 X IN V=0] 
        [nand3 _w1 X IN V=0] 
        [nand3 _w3 1 OUT V=1] 
        [nand2 _w1 X IN V=0] 
        [nand2 _in1 X IN V=0] 
        [nand2 _w2 Dbar OUT V=0] 
        [nand1 _in2 X IN V=0] 
        [nand1 _in1 X IN V=0] 
        [nand1 _w1 X OUT V=0] 
        [input_in2 0 OUT V=1] 
        [input_in1 0 OUT V=1] 
        [output_out1 Dbar IN V=0] 
[Msg73] Concluding. Reached PO line : [Line:output_out1 Val:Dbar Dir:IN Visited: 0 Type:PO]
[Msg74] Current linelist status after Propagate()
        [Line:nand4 _w3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _w2 Val:D Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _out1 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand3 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w3 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:nand2 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _w2 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand1 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _w1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:input_in2 Val:0 Dir:OUT Visited: 1 Type:PI]
        [Line:input_in1 Val:0 Dir:OUT Visited: 1 Type:PI]
        [Line:output_out1 Val:Dbar Dir:IN Visited: 0 Type:PO]

[Msg75] Updating linelist with line : [Line:nand2 _w2 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg76] Updating the maps 
[Msg77] Current linelist status after pattern generation()
        [Line:nand4 _w3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _w2 Val:D Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _out1 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand3 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w3 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:nand2 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _w2 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand1 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _w1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:input_in2 Val:0 Dir:OUT Visited: 1 Type:PI]
        [Line:input_in1 Val:0 Dir:OUT Visited: 1 Type:PI]
        [Line:output_out1 Val:Dbar Dir:IN Visited: 0 Type:PO]

[Msg] Printing PI patterns 
     input_in2 0
     input_in1 0
---------------------------------------------------------
---------------------------------------------------------
TG for line #10 SA-1. Fault #19
[Msg0] Initialzed all line values to X and isVisited = false
[Msg1] Updated line : nand1 _in2 from linelist to [Line:nand1 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
[Msg2] Updating the maps 
[Msg] Printing PI patterns 
     input_in2 X
     input_in1 X
[Msg3] Current linelist status before Justify()
        [Line:nand4 _w3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _out1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand3 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w3 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand2 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _w2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand1 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _w1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:input_in2 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:input_in1 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO]

[Msg4] Generating test patterns for line : [Line:nand1 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
[Msg5] Justifying line : [Line:nand1 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 0
Here 125
[Msg6] Equalizing fanin/fanout values line : [Line:input_in2 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg7] Updating linelist with line : [Line:input_in2 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg8] Updating the maps 
[Msg9] Concluding. Reached PI line : [Line:input_in2 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg10] All lines justified 
[Msg11] Updating linelist with line : [Line:input_in2 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg12] Updating the maps 
[Msg13] Current linelist status before Propagate() and after Justify()
        [Line:nand4 _w3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _out1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand3 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w3 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand2 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _w2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand1 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _w1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:input_in2 Val:0 Dir:OUT Visited: 1 Type:PI]
        [Line:input_in1 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO]

[Msg14] Propagating D for the line : nand1 _in2
[Msg15] Updating linelist with line : [Line:nand1 _in2 Val:D Dir:IN Visited: 0 Type:INT_WIRE]
[Msg16] Updating the maps 
[Msg17] Updated linelist at this stage. - About to start  Propagate()
        [nand4 _w3 X IN V=0] 
        [nand4 _w2 X IN V=0] 
        [nand4 _out1 X OUT V=0] 
        [nand3 _in2 X IN V=0] 
        [nand3 _w1 X IN V=0] 
        [nand3 _w3 X OUT V=0] 
        [nand2 _w1 X IN V=0] 
        [nand2 _in1 X IN V=0] 
        [nand2 _w2 X OUT V=0] 
        [nand1 _in2 D IN V=0] 
        [nand1 _in1 X IN V=0] 
        [nand1 _w1 X OUT V=0] 
        [input_in2 0 OUT V=1] 
        [input_in1 X OUT V=0] 
        [output_out1 X IN V=0] 
[Msg18][Line:nand1 _in2 Val:D Dir:IN Visited: 0 Type:INT_WIRE] is an input line to the component
[Msg19] Corresponding output line : nand1 _w1
[Msg20] Checking nand1 _in2 to be justified or not
[Msg21] Checking nand1 _in1 to be justified or not
[Msg22] Justify nand1 _in1 inside Propagate. line.direction == IN The line : [Line:nand1 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
[Msg23] Justifying line : [Line:nand1 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 1
Here 126
[Msg24] Equalizing fanin/fanout values line : [Line:input_in1 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg25] Updating linelist with line : [Line:input_in1 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg26] Updating the maps 
[Msg27] Concluding. Reached PI line : [Line:input_in1 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg28] Equalizing fanin/fanout values line : [Line:nand1 _w1 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg29] Updating linelist with line : [Line:nand1 _w1 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg30] Updating the maps 
[Msg31] All i/p lines justified for nand1 _w1 to Propagate. The line : [Line:nand1 _w1 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg32] Current linelist status inside Propagate() after all input line justification        [nand4 _w3 X IN V=0] 
        [nand4 _w2 X IN V=0] 
        [nand4 _out1 X OUT V=0] 
        [nand3 _in2 X IN V=0] 
        [nand3 _w1 X IN V=0] 
        [nand3 _w3 X OUT V=0] 
        [nand2 _w1 X IN V=0] 
        [nand2 _in1 X IN V=0] 
        [nand2 _w2 X OUT V=0] 
        [nand1 _in2 D IN V=0] 
        [nand1 _in1 X IN V=0] 
        [nand1 _w1 D OUT V=0] 
        [input_in2 0 OUT V=1] 
        [input_in1 1 OUT V=1] 
        [output_out1 X IN V=0] 
[Msg33] error_val :D and iv : 1
[Msg34] Input line : [Line:nand2 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] is propagated with val Dbar (error_val^iv)
[Msg35] Propagating Dbar for the line : nand2 _w1
[Msg36] Updating linelist with line : [Line:nand2 _w1 Val:Dbar Dir:IN Visited: 0 Type:INT_WIRE]
[Msg37] Updating the maps 
[Msg38] Updated linelist at this stage. - About to start  Propagate()
        [nand4 _w3 X IN V=0] 
        [nand4 _w2 X IN V=0] 
        [nand4 _out1 X OUT V=0] 
        [nand3 _in2 X IN V=0] 
        [nand3 _w1 X IN V=0] 
        [nand3 _w3 X OUT V=0] 
        [nand2 _w1 Dbar IN V=0] 
        [nand2 _in1 X IN V=0] 
        [nand2 _w2 X OUT V=0] 
        [nand1 _in2 D IN V=0] 
        [nand1 _in1 X IN V=0] 
        [nand1 _w1 D OUT V=0] 
        [input_in2 0 OUT V=1] 
        [input_in1 1 OUT V=1] 
        [output_out1 X IN V=0] 
[Msg39][Line:nand2 _w1 Val:Dbar Dir:IN Visited: 0 Type:INT_WIRE] is an input line to the component
[Msg40] Corresponding output line : nand2 _w2
[Msg41] Checking nand2 _w1 to be justified or not
[Msg42] Checking nand2 _in1 to be justified or not
[Msg43] Justify nand2 _in1 inside Propagate. line.direction == IN The line : [Line:nand2 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
[Msg44] Justifying line : [Line:nand2 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 1
Here 127
[Msg45] 2) Line : [Line:input_in1 Val:1 Dir:OUT Visited: 1 Type:PI] already justified with value1
[Msg46] Equalizing fanin/fanout values line : [Line:nand2 _w2 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg47] Updating linelist with line : [Line:nand2 _w2 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg48] Updating the maps 
[Msg49] All i/p lines justified for nand2 _w2 to Propagate. The line : [Line:nand2 _w2 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg50] Current linelist status inside Propagate() after all input line justification        [nand4 _w3 X IN V=0] 
        [nand4 _w2 X IN V=0] 
        [nand4 _out1 X OUT V=0] 
        [nand3 _in2 X IN V=0] 
        [nand3 _w1 X IN V=0] 
        [nand3 _w3 X OUT V=0] 
        [nand2 _w1 Dbar IN V=0] 
        [nand2 _in1 X IN V=0] 
        [nand2 _w2 Dbar OUT V=0] 
        [nand1 _in2 D IN V=0] 
        [nand1 _in1 X IN V=0] 
        [nand1 _w1 D OUT V=0] 
        [input_in2 0 OUT V=1] 
        [input_in1 1 OUT V=1] 
        [output_out1 X IN V=0] 
[Msg51] error_val :Dbar and iv : 1
[Msg52] Input line : [Line:nand4 _w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] is propagated with val D (error_val^iv)
[Msg53] Propagating D for the line : nand4 _w2
[Msg54] Updating linelist with line : [Line:nand4 _w2 Val:D Dir:IN Visited: 0 Type:INT_WIRE]
[Msg55] Updating the maps 
[Msg56] Updated linelist at this stage. - About to start  Propagate()
        [nand4 _w3 X IN V=0] 
        [nand4 _w2 D IN V=0] 
        [nand4 _out1 X OUT V=0] 
        [nand3 _in2 X IN V=0] 
        [nand3 _w1 X IN V=0] 
        [nand3 _w3 X OUT V=0] 
        [nand2 _w1 Dbar IN V=0] 
        [nand2 _in1 X IN V=0] 
        [nand2 _w2 Dbar OUT V=0] 
        [nand1 _in2 D IN V=0] 
        [nand1 _in1 X IN V=0] 
        [nand1 _w1 D OUT V=0] 
        [input_in2 0 OUT V=1] 
        [input_in1 1 OUT V=1] 
        [output_out1 X IN V=0] 
[Msg57][Line:nand4 _w2 Val:D Dir:IN Visited: 0 Type:INT_WIRE] is an input line to the component
[Msg58] Corresponding output line : nand4 _out1
[Msg59] Checking nand4 _w3 to be justified or not
[Msg60] Justify nand4 _w3 inside Propagate. line.direction == IN The line : [Line:nand4 _w3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
[Msg61] Justifying line : [Line:nand4 _w3 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 1
Here 128
[Msg62] Equalizing fanin/fanout values line : [Line:nand3 _w3 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg63] One of the input lines of line : [Line:nand3 _w3 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE] to be justified
[Msg64] Trying line : [Line:nand3 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] to justify
[Msg65] Only [Line:nand3 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] of line : nand3 _w3 to be justified
[Msg66] Saving [Line:nand3 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] for future backtracking.
[Msg67] Justifying line : [Line:nand3 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 0
Here 129
[Msg68] 2) Line : [Line:input_in2 Val:0 Dir:OUT Visited: 1 Type:PI] already justified with value0
[Msg69] Updating linelist with line : [Line:nand3 _w3 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg70] Updating the maps 
[Msg71] Checking nand4 _w2 to be justified or not
[Msg72] Equalizing fanin/fanout values line : [Line:nand4 _out1 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg73] Updating linelist with line : [Line:nand4 _out1 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg74] Updating the maps 
[Msg75] All i/p lines justified for nand4 _out1 to Propagate. The line : [Line:nand4 _out1 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg76] Current linelist status inside Propagate() after all input line justification        [nand4 _w3 X IN V=0] 
        [nand4 _w2 D IN V=0] 
        [nand4 _out1 D OUT V=0] 
        [nand3 _in2 X IN V=0] 
        [nand3 _w1 X IN V=0] 
        [nand3 _w3 1 OUT V=1] 
        [nand2 _w1 Dbar IN V=0] 
        [nand2 _in1 X IN V=0] 
        [nand2 _w2 Dbar OUT V=0] 
        [nand1 _in2 D IN V=0] 
        [nand1 _in1 X IN V=0] 
        [nand1 _w1 D OUT V=0] 
        [input_in2 0 OUT V=1] 
        [input_in1 1 OUT V=1] 
        [output_out1 X IN V=0] 
[Msg77] error_val :D and iv : 1
[Msg78] Input line : [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO] is propagated with val Dbar (error_val^iv)
[Msg79] Propagating Dbar for the line : output_out1
[Msg80] Updating linelist with line : [Line:output_out1 Val:Dbar Dir:IN Visited: 0 Type:PO]
[Msg81] Updating the maps 
[Msg82] Updated linelist at this stage. - About to start  Propagate()
        [nand4 _w3 X IN V=0] 
        [nand4 _w2 D IN V=0] 
        [nand4 _out1 D OUT V=0] 
        [nand3 _in2 X IN V=0] 
        [nand3 _w1 X IN V=0] 
        [nand3 _w3 1 OUT V=1] 
        [nand2 _w1 Dbar IN V=0] 
        [nand2 _in1 X IN V=0] 
        [nand2 _w2 Dbar OUT V=0] 
        [nand1 _in2 D IN V=0] 
        [nand1 _in1 X IN V=0] 
        [nand1 _w1 D OUT V=0] 
        [input_in2 0 OUT V=1] 
        [input_in1 1 OUT V=1] 
        [output_out1 Dbar IN V=0] 
[Msg83] Concluding. Reached PO line : [Line:output_out1 Val:Dbar Dir:IN Visited: 0 Type:PO]
[Msg84] Current linelist status after Propagate()
        [Line:nand4 _w3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _w2 Val:D Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _out1 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand3 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w3 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:nand2 _w1 Val:Dbar Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _w2 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand1 _in2 Val:D Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _w1 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:input_in2 Val:0 Dir:OUT Visited: 1 Type:PI]
        [Line:input_in1 Val:1 Dir:OUT Visited: 1 Type:PI]
        [Line:output_out1 Val:Dbar Dir:IN Visited: 0 Type:PO]

[Msg85] Updating linelist with line : [Line:nand1 _in2 Val:D Dir:IN Visited: 0 Type:INT_WIRE]
[Msg86] Updating the maps 
[Msg87] Current linelist status after pattern generation()
        [Line:nand4 _w3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _w2 Val:D Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _out1 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand3 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w3 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:nand2 _w1 Val:Dbar Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _w2 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand1 _in2 Val:D Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _w1 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:input_in2 Val:0 Dir:OUT Visited: 1 Type:PI]
        [Line:input_in1 Val:1 Dir:OUT Visited: 1 Type:PI]
        [Line:output_out1 Val:Dbar Dir:IN Visited: 0 Type:PO]

[Msg] Printing PI patterns 
     input_in2 0
     input_in1 1
Here !!!
---------------------------------------------------------
---------------------------------------------------------
TG for line #10 SA-0. Fault #20
[Msg0] Initialzed all line values to X and isVisited = false
[Msg1] Updated line : nand1 _in2 from linelist to [Line:nand1 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
[Msg2] Updating the maps 
[Msg] Printing PI patterns 
     input_in2 X
     input_in1 X
[Msg3] Current linelist status before Justify()
        [Line:nand4 _w3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _out1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand3 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w3 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand2 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _w2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand1 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _w1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:input_in2 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:input_in1 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO]

[Msg4] Generating test patterns for line : [Line:nand1 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
[Msg5] Justifying line : [Line:nand1 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 1
Here 130
[Msg6] Equalizing fanin/fanout values line : [Line:input_in2 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg7] Updating linelist with line : [Line:input_in2 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg8] Updating the maps 
[Msg9] Concluding. Reached PI line : [Line:input_in2 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg10] All lines justified 
[Msg11] Updating linelist with line : [Line:input_in2 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg12] Updating the maps 
[Msg13] Current linelist status before Propagate() and after Justify()
        [Line:nand4 _w3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _out1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand3 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w3 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand2 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _w2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand1 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _w1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:input_in2 Val:1 Dir:OUT Visited: 1 Type:PI]
        [Line:input_in1 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO]

[Msg14] Propagating Dbar for the line : nand1 _in2
[Msg15] Updating linelist with line : [Line:nand1 _in2 Val:Dbar Dir:IN Visited: 0 Type:INT_WIRE]
[Msg16] Updating the maps 
[Msg17] Updated linelist at this stage. - About to start  Propagate()
        [nand4 _w3 X IN V=0] 
        [nand4 _w2 X IN V=0] 
        [nand4 _out1 X OUT V=0] 
        [nand3 _in2 X IN V=0] 
        [nand3 _w1 X IN V=0] 
        [nand3 _w3 X OUT V=0] 
        [nand2 _w1 X IN V=0] 
        [nand2 _in1 X IN V=0] 
        [nand2 _w2 X OUT V=0] 
        [nand1 _in2 Dbar IN V=0] 
        [nand1 _in1 X IN V=0] 
        [nand1 _w1 X OUT V=0] 
        [input_in2 1 OUT V=1] 
        [input_in1 X OUT V=0] 
        [output_out1 X IN V=0] 
[Msg18][Line:nand1 _in2 Val:Dbar Dir:IN Visited: 0 Type:INT_WIRE] is an input line to the component
[Msg19] Corresponding output line : nand1 _w1
[Msg20] Checking nand1 _in1 to be justified or not
[Msg21] Justify nand1 _in1 inside Propagate. line.direction == IN The line : [Line:nand1 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
[Msg22] Justifying line : [Line:nand1 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 1
Here 131
[Msg23] Equalizing fanin/fanout values line : [Line:input_in1 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg24] Updating linelist with line : [Line:input_in1 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg25] Updating the maps 
[Msg26] Concluding. Reached PI line : [Line:input_in1 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg27] Checking nand1 _in2 to be justified or not
[Msg28] Equalizing fanin/fanout values line : [Line:nand1 _w1 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg29] Updating linelist with line : [Line:nand1 _w1 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg30] Updating the maps 
[Msg31] All i/p lines justified for nand1 _w1 to Propagate. The line : [Line:nand1 _w1 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg32] Current linelist status inside Propagate() after all input line justification        [nand4 _w3 X IN V=0] 
        [nand4 _w2 X IN V=0] 
        [nand4 _out1 X OUT V=0] 
        [nand3 _in2 X IN V=0] 
        [nand3 _w1 X IN V=0] 
        [nand3 _w3 X OUT V=0] 
        [nand2 _w1 X IN V=0] 
        [nand2 _in1 X IN V=0] 
        [nand2 _w2 X OUT V=0] 
        [nand1 _in2 Dbar IN V=0] 
        [nand1 _in1 X IN V=0] 
        [nand1 _w1 Dbar OUT V=0] 
        [input_in2 1 OUT V=1] 
        [input_in1 1 OUT V=1] 
        [output_out1 X IN V=0] 
[Msg33] error_val :Dbar and iv : 1
[Msg34] Input line : [Line:nand2 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] is propagated with val D (error_val^iv)
[Msg35] Propagating D for the line : nand2 _w1
[Msg36] Updating linelist with line : [Line:nand2 _w1 Val:D Dir:IN Visited: 0 Type:INT_WIRE]
[Msg37] Updating the maps 
[Msg38] Updated linelist at this stage. - About to start  Propagate()
        [nand4 _w3 X IN V=0] 
        [nand4 _w2 X IN V=0] 
        [nand4 _out1 X OUT V=0] 
        [nand3 _in2 X IN V=0] 
        [nand3 _w1 X IN V=0] 
        [nand3 _w3 X OUT V=0] 
        [nand2 _w1 D IN V=0] 
        [nand2 _in1 X IN V=0] 
        [nand2 _w2 X OUT V=0] 
        [nand1 _in2 Dbar IN V=0] 
        [nand1 _in1 X IN V=0] 
        [nand1 _w1 Dbar OUT V=0] 
        [input_in2 1 OUT V=1] 
        [input_in1 1 OUT V=1] 
        [output_out1 X IN V=0] 
[Msg39][Line:nand2 _w1 Val:D Dir:IN Visited: 0 Type:INT_WIRE] is an input line to the component
[Msg40] Corresponding output line : nand2 _w2
[Msg41] Checking nand2 _in1 to be justified or not
[Msg42] Justify nand2 _in1 inside Propagate. line.direction == IN The line : [Line:nand2 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
[Msg43] Justifying line : [Line:nand2 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 1
Here 132
[Msg44] 2) Line : [Line:input_in1 Val:1 Dir:OUT Visited: 1 Type:PI] already justified with value1
[Msg45] Checking nand2 _w1 to be justified or not
[Msg46] Equalizing fanin/fanout values line : [Line:nand2 _w2 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg47] Updating linelist with line : [Line:nand2 _w2 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg48] Updating the maps 
[Msg49] All i/p lines justified for nand2 _w2 to Propagate. The line : [Line:nand2 _w2 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg50] Current linelist status inside Propagate() after all input line justification        [nand4 _w3 X IN V=0] 
        [nand4 _w2 X IN V=0] 
        [nand4 _out1 X OUT V=0] 
        [nand3 _in2 X IN V=0] 
        [nand3 _w1 X IN V=0] 
        [nand3 _w3 X OUT V=0] 
        [nand2 _w1 D IN V=0] 
        [nand2 _in1 X IN V=0] 
        [nand2 _w2 D OUT V=0] 
        [nand1 _in2 Dbar IN V=0] 
        [nand1 _in1 X IN V=0] 
        [nand1 _w1 Dbar OUT V=0] 
        [input_in2 1 OUT V=1] 
        [input_in1 1 OUT V=1] 
        [output_out1 X IN V=0] 
[Msg51] error_val :D and iv : 1
[Msg52] Input line : [Line:nand4 _w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] is propagated with val Dbar (error_val^iv)
[Msg53] Propagating Dbar for the line : nand4 _w2
[Msg54] Updating linelist with line : [Line:nand4 _w2 Val:Dbar Dir:IN Visited: 0 Type:INT_WIRE]
[Msg55] Updating the maps 
[Msg56] Updated linelist at this stage. - About to start  Propagate()
        [nand4 _w3 X IN V=0] 
        [nand4 _w2 Dbar IN V=0] 
        [nand4 _out1 X OUT V=0] 
        [nand3 _in2 X IN V=0] 
        [nand3 _w1 X IN V=0] 
        [nand3 _w3 X OUT V=0] 
        [nand2 _w1 D IN V=0] 
        [nand2 _in1 X IN V=0] 
        [nand2 _w2 D OUT V=0] 
        [nand1 _in2 Dbar IN V=0] 
        [nand1 _in1 X IN V=0] 
        [nand1 _w1 Dbar OUT V=0] 
        [input_in2 1 OUT V=1] 
        [input_in1 1 OUT V=1] 
        [output_out1 X IN V=0] 
[Msg57][Line:nand4 _w2 Val:Dbar Dir:IN Visited: 0 Type:INT_WIRE] is an input line to the component
[Msg58] Corresponding output line : nand4 _out1
[Msg59] Checking nand4 _w2 to be justified or not
[Msg60] Checking nand4 _w3 to be justified or not
[Msg61] Justify nand4 _w3 inside Propagate. line.direction == IN The line : [Line:nand4 _w3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
[Msg62] Justifying line : [Line:nand4 _w3 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 1
Here 133
[Msg63] Equalizing fanin/fanout values line : [Line:nand3 _w3 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg64] One of the input lines of line : [Line:nand3 _w3 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE] to be justified
[Msg65] Trying line : [Line:nand3 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] to justify
[Msg66] Only [Line:nand3 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] of line : nand3 _w3 to be justified
[Msg67] Saving [Line:nand3 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] for future backtracking.
[Msg68] Justifying line : [Line:nand3 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 0
Here 134
[Msg69] Equalizing fanin/fanout values line : [Line:nand1 _w1 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg70] inval = 1] Justifying all input lines for the line : [Line:nand1 _w1 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg71] Following lines need to be justified. (Total 2 lines)
        [Line:nand1 _w1] -->  [Line:nand1 _in1] [Line:nand1 _in2]
[Msg72] Justifying line : [Line:nand1 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 1
Here 135
[Msg73] 2) Line : [Line:input_in1 Val:1 Dir:OUT Visited: 1 Type:PI] already justified with value1
[Msg74] Updating linelist with line : [Line:nand1 _w1 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg75] Updating the maps 
[Msg76] Justifying line : [Line:nand1 _in2 Val:Dbar Dir:IN Visited: 0 Type:INT_WIRE] with value 1
Here 136
[Msg77] 2) Line : [Line:input_in2 Val:1 Dir:OUT Visited: 1 Type:PI] already justified with value1
[Msg78] Updating linelist with line : [Line:nand1 _w1 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg79] Updating the maps 
[Msg80] Updating linelist with line : [Line:nand3 _w3 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg81] Updating the maps 
[Msg82] Equalizing fanin/fanout values line : [Line:nand4 _out1 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg83] Updating linelist with line : [Line:nand4 _out1 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg84] Updating the maps 
[Msg85] All i/p lines justified for nand4 _out1 to Propagate. The line : [Line:nand4 _out1 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg86] Current linelist status inside Propagate() after all input line justification        [nand4 _w3 X IN V=0] 
        [nand4 _w2 Dbar IN V=0] 
        [nand4 _out1 Dbar OUT V=0] 
        [nand3 _in2 X IN V=0] 
        [nand3 _w1 X IN V=0] 
        [nand3 _w3 1 OUT V=1] 
        [nand2 _w1 D IN V=0] 
        [nand2 _in1 X IN V=0] 
        [nand2 _w2 D OUT V=0] 
        [nand1 _in2 Dbar IN V=0] 
        [nand1 _in1 X IN V=0] 
        [nand1 _w1 0 OUT V=1] 
        [input_in2 1 OUT V=1] 
        [input_in1 1 OUT V=1] 
        [output_out1 X IN V=0] 
[Msg87] error_val :Dbar and iv : 1
[Msg88] Input line : [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO] is propagated with val D (error_val^iv)
[Msg89] Propagating D for the line : output_out1
[Msg90] Updating linelist with line : [Line:output_out1 Val:D Dir:IN Visited: 0 Type:PO]
[Msg91] Updating the maps 
[Msg92] Updated linelist at this stage. - About to start  Propagate()
        [nand4 _w3 X IN V=0] 
        [nand4 _w2 Dbar IN V=0] 
        [nand4 _out1 Dbar OUT V=0] 
        [nand3 _in2 X IN V=0] 
        [nand3 _w1 X IN V=0] 
        [nand3 _w3 1 OUT V=1] 
        [nand2 _w1 D IN V=0] 
        [nand2 _in1 X IN V=0] 
        [nand2 _w2 D OUT V=0] 
        [nand1 _in2 Dbar IN V=0] 
        [nand1 _in1 X IN V=0] 
        [nand1 _w1 0 OUT V=1] 
        [input_in2 1 OUT V=1] 
        [input_in1 1 OUT V=1] 
        [output_out1 D IN V=0] 
[Msg93] Concluding. Reached PO line : [Line:output_out1 Val:D Dir:IN Visited: 0 Type:PO]
[Msg94] Current linelist status after Propagate()
        [Line:nand4 _w3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _w2 Val:Dbar Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _out1 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand3 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w3 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:nand2 _w1 Val:D Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _w2 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand1 _in2 Val:Dbar Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _w1 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:input_in2 Val:1 Dir:OUT Visited: 1 Type:PI]
        [Line:input_in1 Val:1 Dir:OUT Visited: 1 Type:PI]
        [Line:output_out1 Val:D Dir:IN Visited: 0 Type:PO]

[Msg95] Updating linelist with line : [Line:nand1 _in2 Val:Dbar Dir:IN Visited: 0 Type:INT_WIRE]
[Msg96] Updating the maps 
[Msg97] Current linelist status after pattern generation()
        [Line:nand4 _w3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _w2 Val:Dbar Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _out1 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand3 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w3 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:nand2 _w1 Val:D Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _w2 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand1 _in2 Val:Dbar Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _w1 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:input_in2 Val:1 Dir:OUT Visited: 1 Type:PI]
        [Line:input_in1 Val:1 Dir:OUT Visited: 1 Type:PI]
        [Line:output_out1 Val:D Dir:IN Visited: 0 Type:PO]

[Msg] Printing PI patterns 
     input_in2 1
     input_in1 1
---------------------------------------------------------
---------------------------------------------------------
TG for line #11 SA-1. Fault #21
[Msg0] Initialzed all line values to X and isVisited = false
[Msg1] Updated line : nand1 _in1 from linelist to [Line:nand1 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
[Msg2] Updating the maps 
[Msg] Printing PI patterns 
     input_in2 X
     input_in1 X
[Msg3] Current linelist status before Justify()
        [Line:nand4 _w3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _out1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand3 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w3 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand2 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _w2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand1 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _w1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:input_in2 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:input_in1 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO]

[Msg4] Generating test patterns for line : [Line:nand1 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
[Msg5] Justifying line : [Line:nand1 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 0
Here 137
[Msg6] Equalizing fanin/fanout values line : [Line:input_in1 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg7] Updating linelist with line : [Line:input_in1 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg8] Updating the maps 
[Msg9] Concluding. Reached PI line : [Line:input_in1 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg10] All lines justified 
[Msg11] Updating linelist with line : [Line:input_in1 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg12] Updating the maps 
[Msg13] Current linelist status before Propagate() and after Justify()
        [Line:nand4 _w3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _out1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand3 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w3 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand2 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _w2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand1 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _w1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:input_in2 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:input_in1 Val:0 Dir:OUT Visited: 1 Type:PI]
        [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO]

[Msg14] Propagating D for the line : nand1 _in1
[Msg15] Updating linelist with line : [Line:nand1 _in1 Val:D Dir:IN Visited: 0 Type:INT_WIRE]
[Msg16] Updating the maps 
[Msg17] Updated linelist at this stage. - About to start  Propagate()
        [nand4 _w3 X IN V=0] 
        [nand4 _w2 X IN V=0] 
        [nand4 _out1 X OUT V=0] 
        [nand3 _in2 X IN V=0] 
        [nand3 _w1 X IN V=0] 
        [nand3 _w3 X OUT V=0] 
        [nand2 _w1 X IN V=0] 
        [nand2 _in1 X IN V=0] 
        [nand2 _w2 X OUT V=0] 
        [nand1 _in2 X IN V=0] 
        [nand1 _in1 D IN V=0] 
        [nand1 _w1 X OUT V=0] 
        [input_in2 X OUT V=0] 
        [input_in1 0 OUT V=1] 
        [output_out1 X IN V=0] 
[Msg18][Line:nand1 _in1 Val:D Dir:IN Visited: 0 Type:INT_WIRE] is an input line to the component
[Msg19] Corresponding output line : nand1 _w1
[Msg20] Checking nand1 _in2 to be justified or not
[Msg21] Justify nand1 _in2 inside Propagate. line.direction == IN The line : [Line:nand1 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
[Msg22] Justifying line : [Line:nand1 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 1
Here 138
[Msg23] Equalizing fanin/fanout values line : [Line:input_in2 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg24] Updating linelist with line : [Line:input_in2 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg25] Updating the maps 
[Msg26] Concluding. Reached PI line : [Line:input_in2 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg27] Checking nand1 _in1 to be justified or not
[Msg28] Equalizing fanin/fanout values line : [Line:nand1 _w1 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg29] Updating linelist with line : [Line:nand1 _w1 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg30] Updating the maps 
[Msg31] All i/p lines justified for nand1 _w1 to Propagate. The line : [Line:nand1 _w1 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg32] Current linelist status inside Propagate() after all input line justification        [nand4 _w3 X IN V=0] 
        [nand4 _w2 X IN V=0] 
        [nand4 _out1 X OUT V=0] 
        [nand3 _in2 X IN V=0] 
        [nand3 _w1 X IN V=0] 
        [nand3 _w3 X OUT V=0] 
        [nand2 _w1 X IN V=0] 
        [nand2 _in1 X IN V=0] 
        [nand2 _w2 X OUT V=0] 
        [nand1 _in2 X IN V=0] 
        [nand1 _in1 D IN V=0] 
        [nand1 _w1 D OUT V=0] 
        [input_in2 1 OUT V=1] 
        [input_in1 0 OUT V=1] 
        [output_out1 X IN V=0] 
[Msg33] error_val :D and iv : 1
[Msg34] Input line : [Line:nand2 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] is propagated with val Dbar (error_val^iv)
[Msg35] Propagating Dbar for the line : nand2 _w1
[Msg36] Updating linelist with line : [Line:nand2 _w1 Val:Dbar Dir:IN Visited: 0 Type:INT_WIRE]
[Msg37] Updating the maps 
[Msg38] Updated linelist at this stage. - About to start  Propagate()
        [nand4 _w3 X IN V=0] 
        [nand4 _w2 X IN V=0] 
        [nand4 _out1 X OUT V=0] 
        [nand3 _in2 X IN V=0] 
        [nand3 _w1 X IN V=0] 
        [nand3 _w3 X OUT V=0] 
        [nand2 _w1 Dbar IN V=0] 
        [nand2 _in1 X IN V=0] 
        [nand2 _w2 X OUT V=0] 
        [nand1 _in2 X IN V=0] 
        [nand1 _in1 D IN V=0] 
        [nand1 _w1 D OUT V=0] 
        [input_in2 1 OUT V=1] 
        [input_in1 0 OUT V=1] 
        [output_out1 X IN V=0] 
[Msg39][Line:nand2 _w1 Val:Dbar Dir:IN Visited: 0 Type:INT_WIRE] is an input line to the component
[Msg40] Corresponding output line : nand2 _w2
[Msg41] Checking nand2 _w1 to be justified or not
[Msg42] Checking nand2 _in1 to be justified or not
[Msg43] Justify nand2 _in1 inside Propagate. line.direction == IN The line : [Line:nand2 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
[Msg44] Justifying line : [Line:nand2 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 1
Here 139
[Msg45] 1) Cannot justify line : [Line:input_in1 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg46] 5) Inside propagate. Cannot Justify line : [Line:input_in1 Val:0 Dir:OUT Visited: 1 Type:PI][Msg47 Failed to propagate line : [Line:nand2 _w1 Val:Dbar Dir:IN Visited: 0 Type:INT_WIRE]. Trying next fanoutline
[Msg48] error_val :D and iv : 1
[Msg49] Input line : [Line:nand3 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] is propagated with val Dbar (error_val^iv)
[Msg50] Propagating Dbar for the line : nand3 _w1
[Msg51] Updating linelist with line : [Line:nand3 _w1 Val:Dbar Dir:IN Visited: 0 Type:INT_WIRE]
[Msg52] Updating the maps 
[Msg53] Updated linelist at this stage. - About to start  Propagate()
        [nand4 _w3 X IN V=0] 
        [nand4 _w2 X IN V=0] 
        [nand4 _out1 X OUT V=0] 
        [nand3 _in2 X IN V=0] 
        [nand3 _w1 Dbar IN V=0] 
        [nand3 _w3 X OUT V=0] 
        [nand2 _w1 Dbar IN V=0] 
        [nand2 _in1 X IN V=0] 
        [nand2 _w2 X OUT V=0] 
        [nand1 _in2 X IN V=0] 
        [nand1 _in1 D IN V=0] 
        [nand1 _w1 D OUT V=0] 
        [input_in2 1 OUT V=1] 
        [input_in1 0 OUT V=1] 
        [output_out1 X IN V=0] 
[Msg54][Line:nand3 _w1 Val:Dbar Dir:IN Visited: 0 Type:INT_WIRE] is an input line to the component
[Msg55] Corresponding output line : nand3 _w3
[Msg56] Checking nand3 _in2 to be justified or not
[Msg57] Justify nand3 _in2 inside Propagate. line.direction == IN The line : [Line:nand3 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
[Msg58] Justifying line : [Line:nand3 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 1
Here 140
[Msg59] 2) Line : [Line:input_in2 Val:1 Dir:OUT Visited: 1 Type:PI] already justified with value1
[Msg60] Checking nand3 _w1 to be justified or not
[Msg61] Equalizing fanin/fanout values line : [Line:nand3 _w3 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg62] Updating linelist with line : [Line:nand3 _w3 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg63] Updating the maps 
[Msg64] All i/p lines justified for nand3 _w3 to Propagate. The line : [Line:nand3 _w3 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg65] Current linelist status inside Propagate() after all input line justification        [nand4 _w3 X IN V=0] 
        [nand4 _w2 X IN V=0] 
        [nand4 _out1 X OUT V=0] 
        [nand3 _in2 X IN V=0] 
        [nand3 _w1 Dbar IN V=0] 
        [nand3 _w3 Dbar OUT V=0] 
        [nand2 _w1 Dbar IN V=0] 
        [nand2 _in1 X IN V=0] 
        [nand2 _w2 X OUT V=0] 
        [nand1 _in2 X IN V=0] 
        [nand1 _in1 D IN V=0] 
        [nand1 _w1 D OUT V=0] 
        [input_in2 1 OUT V=1] 
        [input_in1 0 OUT V=1] 
        [output_out1 X IN V=0] 
[Msg66] error_val :Dbar and iv : 1
[Msg67] Input line : [Line:nand4 _w3 Val:X Dir:IN Visited: 0 Type:INT_WIRE] is propagated with val D (error_val^iv)
[Msg68] Propagating D for the line : nand4 _w3
[Msg69] Updating linelist with line : [Line:nand4 _w3 Val:D Dir:IN Visited: 0 Type:INT_WIRE]
[Msg70] Updating the maps 
[Msg71] Updated linelist at this stage. - About to start  Propagate()
        [nand4 _w3 D IN V=0] 
        [nand4 _w2 X IN V=0] 
        [nand4 _out1 X OUT V=0] 
        [nand3 _in2 X IN V=0] 
        [nand3 _w1 Dbar IN V=0] 
        [nand3 _w3 Dbar OUT V=0] 
        [nand2 _w1 Dbar IN V=0] 
        [nand2 _in1 X IN V=0] 
        [nand2 _w2 X OUT V=0] 
        [nand1 _in2 X IN V=0] 
        [nand1 _in1 D IN V=0] 
        [nand1 _w1 D OUT V=0] 
        [input_in2 1 OUT V=1] 
        [input_in1 0 OUT V=1] 
        [output_out1 X IN V=0] 
[Msg72][Line:nand4 _w3 Val:D Dir:IN Visited: 0 Type:INT_WIRE] is an input line to the component
[Msg73] Corresponding output line : nand4 _out1
[Msg74] Checking nand4 _w3 to be justified or not
[Msg75] Checking nand4 _w2 to be justified or not
[Msg76] Justify nand4 _w2 inside Propagate. line.direction == IN The line : [Line:nand4 _w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
[Msg77] Justifying line : [Line:nand4 _w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 1
Here 141
[Msg78] Equalizing fanin/fanout values line : [Line:nand2 _w2 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg79] One of the input lines of line : [Line:nand2 _w2 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE] to be justified
[Msg80] Trying line : [Line:nand2 _w1 Val:Dbar Dir:IN Visited: 0 Type:INT_WIRE] to justify
[Msg81] Only [Line:nand2 _w1 Val:Dbar Dir:IN Visited: 0 Type:INT_WIRE] of line : nand2 _w2 to be justified
[Msg82] Saving [Line:nand2 _w1 Val:Dbar Dir:IN Visited: 0 Type:INT_WIRE] for future backtracking.
[Msg83] Justifying line : [Line:nand2 _w1 Val:Dbar Dir:IN Visited: 0 Type:INT_WIRE] with value 0
Here 142
[Msg84] Equalizing fanin/fanout values line : [Line:nand1 _w1 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg85] inval = 1] Justifying all input lines for the line : [Line:nand1 _w1 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg86] Following lines need to be justified. (Total 2 lines)
        [Line:nand1 _w1] -->  [Line:nand1 _in2] [Line:nand1 _in1]
[Msg87] Justifying line : [Line:nand1 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 1
Here 143
[Msg88] 2) Line : [Line:input_in2 Val:1 Dir:OUT Visited: 1 Type:PI] already justified with value1
[Msg89] Updating linelist with line : [Line:nand1 _w1 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg90] Updating the maps 
[Msg91] Justifying line : [Line:nand1 _in1 Val:D Dir:IN Visited: 0 Type:INT_WIRE] with value 1
Here 144
[Msg92] 1) Cannot justify line : [Line:input_in1 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg93] 2) Cannot justify line : [Line:nand1 _w1 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg94] Trying line : [Line:nand2 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] to justify
[Msg95] Only [Line:nand2 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] of line : nand2 _w2 to be justified
[Msg96] Saving [Line:nand2 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] for future backtracking.
[Msg97] Justifying line : [Line:nand2 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 0
Here 145
[Msg98] 2) Line : [Line:input_in1 Val:0 Dir:OUT Visited: 1 Type:PI] already justified with value0
[Msg99] Updating linelist with line : [Line:nand2 _w2 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg100] Updating the maps 
[Msg101] Equalizing fanin/fanout values line : [Line:nand4 _out1 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg102] Updating linelist with line : [Line:nand4 _out1 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg103] Updating the maps 
[Msg104] All i/p lines justified for nand4 _out1 to Propagate. The line : [Line:nand4 _out1 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg105] Current linelist status inside Propagate() after all input line justification        [nand4 _w3 D IN V=0] 
        [nand4 _w2 X IN V=0] 
        [nand4 _out1 D OUT V=0] 
        [nand3 _in2 X IN V=0] 
        [nand3 _w1 Dbar IN V=0] 
        [nand3 _w3 Dbar OUT V=0] 
        [nand2 _w1 Dbar IN V=0] 
        [nand2 _in1 X IN V=0] 
        [nand2 _w2 1 OUT V=1] 
        [nand1 _in2 X IN V=0] 
        [nand1 _in1 D IN V=0] 
        [nand1 _w1 0 OUT V=1] 
        [input_in2 1 OUT V=1] 
        [input_in1 0 OUT V=1] 
        [output_out1 X IN V=0] 
[Msg106] error_val :D and iv : 1
[Msg107] Input line : [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO] is propagated with val Dbar (error_val^iv)
[Msg108] Propagating Dbar for the line : output_out1
[Msg109] Updating linelist with line : [Line:output_out1 Val:Dbar Dir:IN Visited: 0 Type:PO]
[Msg110] Updating the maps 
[Msg111] Updated linelist at this stage. - About to start  Propagate()
        [nand4 _w3 D IN V=0] 
        [nand4 _w2 X IN V=0] 
        [nand4 _out1 D OUT V=0] 
        [nand3 _in2 X IN V=0] 
        [nand3 _w1 Dbar IN V=0] 
        [nand3 _w3 Dbar OUT V=0] 
        [nand2 _w1 Dbar IN V=0] 
        [nand2 _in1 X IN V=0] 
        [nand2 _w2 1 OUT V=1] 
        [nand1 _in2 X IN V=0] 
        [nand1 _in1 D IN V=0] 
        [nand1 _w1 0 OUT V=1] 
        [input_in2 1 OUT V=1] 
        [input_in1 0 OUT V=1] 
        [output_out1 Dbar IN V=0] 
[Msg112] Concluding. Reached PO line : [Line:output_out1 Val:Dbar Dir:IN Visited: 0 Type:PO]
[Msg113] Current linelist status after Propagate()
        [Line:nand4 _w3 Val:D Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _out1 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand3 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w1 Val:Dbar Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w3 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand2 _w1 Val:Dbar Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _w2 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:nand1 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _in1 Val:D Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _w1 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:input_in2 Val:1 Dir:OUT Visited: 1 Type:PI]
        [Line:input_in1 Val:0 Dir:OUT Visited: 1 Type:PI]
        [Line:output_out1 Val:Dbar Dir:IN Visited: 0 Type:PO]

[Msg114] Updating linelist with line : [Line:nand1 _in1 Val:D Dir:IN Visited: 0 Type:INT_WIRE]
[Msg115] Updating the maps 
[Msg116] Current linelist status after pattern generation()
        [Line:nand4 _w3 Val:D Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _out1 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand3 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w1 Val:Dbar Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w3 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand2 _w1 Val:Dbar Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _w2 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:nand1 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _in1 Val:D Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _w1 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:input_in2 Val:1 Dir:OUT Visited: 1 Type:PI]
        [Line:input_in1 Val:0 Dir:OUT Visited: 1 Type:PI]
        [Line:output_out1 Val:Dbar Dir:IN Visited: 0 Type:PO]

[Msg] Printing PI patterns 
     input_in2 1
     input_in1 0
Here !!!
---------------------------------------------------------
---------------------------------------------------------
TG for line #11 SA-0. Fault #22
[Msg0] Initialzed all line values to X and isVisited = false
[Msg1] Updated line : nand1 _in1 from linelist to [Line:nand1 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
[Msg2] Updating the maps 
[Msg] Printing PI patterns 
     input_in2 X
     input_in1 X
[Msg3] Current linelist status before Justify()
        [Line:nand4 _w3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _out1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand3 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w3 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand2 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _w2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand1 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _w1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:input_in2 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:input_in1 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO]

[Msg4] Generating test patterns for line : [Line:nand1 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
[Msg5] Justifying line : [Line:nand1 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 1
Here 146
[Msg6] Equalizing fanin/fanout values line : [Line:input_in1 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg7] Updating linelist with line : [Line:input_in1 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg8] Updating the maps 
[Msg9] Concluding. Reached PI line : [Line:input_in1 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg10] All lines justified 
[Msg11] Updating linelist with line : [Line:input_in1 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg12] Updating the maps 
[Msg13] Current linelist status before Propagate() and after Justify()
        [Line:nand4 _w3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _out1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand3 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w3 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand2 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _w2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand1 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _w1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:input_in2 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:input_in1 Val:1 Dir:OUT Visited: 1 Type:PI]
        [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO]

[Msg14] Propagating Dbar for the line : nand1 _in1
[Msg15] Updating linelist with line : [Line:nand1 _in1 Val:Dbar Dir:IN Visited: 0 Type:INT_WIRE]
[Msg16] Updating the maps 
[Msg17] Updated linelist at this stage. - About to start  Propagate()
        [nand4 _w3 X IN V=0] 
        [nand4 _w2 X IN V=0] 
        [nand4 _out1 X OUT V=0] 
        [nand3 _in2 X IN V=0] 
        [nand3 _w1 X IN V=0] 
        [nand3 _w3 X OUT V=0] 
        [nand2 _w1 X IN V=0] 
        [nand2 _in1 X IN V=0] 
        [nand2 _w2 X OUT V=0] 
        [nand1 _in2 X IN V=0] 
        [nand1 _in1 Dbar IN V=0] 
        [nand1 _w1 X OUT V=0] 
        [input_in2 X OUT V=0] 
        [input_in1 1 OUT V=1] 
        [output_out1 X IN V=0] 
[Msg18][Line:nand1 _in1 Val:Dbar Dir:IN Visited: 0 Type:INT_WIRE] is an input line to the component
[Msg19] Corresponding output line : nand1 _w1
[Msg20] Checking nand1 _in1 to be justified or not
[Msg21] Checking nand1 _in2 to be justified or not
[Msg22] Justify nand1 _in2 inside Propagate. line.direction == IN The line : [Line:nand1 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
[Msg23] Justifying line : [Line:nand1 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 1
Here 147
[Msg24] Equalizing fanin/fanout values line : [Line:input_in2 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg25] Updating linelist with line : [Line:input_in2 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg26] Updating the maps 
[Msg27] Concluding. Reached PI line : [Line:input_in2 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg28] Equalizing fanin/fanout values line : [Line:nand1 _w1 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg29] Updating linelist with line : [Line:nand1 _w1 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg30] Updating the maps 
[Msg31] All i/p lines justified for nand1 _w1 to Propagate. The line : [Line:nand1 _w1 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg32] Current linelist status inside Propagate() after all input line justification        [nand4 _w3 X IN V=0] 
        [nand4 _w2 X IN V=0] 
        [nand4 _out1 X OUT V=0] 
        [nand3 _in2 X IN V=0] 
        [nand3 _w1 X IN V=0] 
        [nand3 _w3 X OUT V=0] 
        [nand2 _w1 X IN V=0] 
        [nand2 _in1 X IN V=0] 
        [nand2 _w2 X OUT V=0] 
        [nand1 _in2 X IN V=0] 
        [nand1 _in1 Dbar IN V=0] 
        [nand1 _w1 Dbar OUT V=0] 
        [input_in2 1 OUT V=1] 
        [input_in1 1 OUT V=1] 
        [output_out1 X IN V=0] 
[Msg33] error_val :Dbar and iv : 1
[Msg34] Input line : [Line:nand3 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] is propagated with val D (error_val^iv)
[Msg35] Propagating D for the line : nand3 _w1
[Msg36] Updating linelist with line : [Line:nand3 _w1 Val:D Dir:IN Visited: 0 Type:INT_WIRE]
[Msg37] Updating the maps 
[Msg38] Updated linelist at this stage. - About to start  Propagate()
        [nand4 _w3 X IN V=0] 
        [nand4 _w2 X IN V=0] 
        [nand4 _out1 X OUT V=0] 
        [nand3 _in2 X IN V=0] 
        [nand3 _w1 D IN V=0] 
        [nand3 _w3 X OUT V=0] 
        [nand2 _w1 X IN V=0] 
        [nand2 _in1 X IN V=0] 
        [nand2 _w2 X OUT V=0] 
        [nand1 _in2 X IN V=0] 
        [nand1 _in1 Dbar IN V=0] 
        [nand1 _w1 Dbar OUT V=0] 
        [input_in2 1 OUT V=1] 
        [input_in1 1 OUT V=1] 
        [output_out1 X IN V=0] 
[Msg39][Line:nand3 _w1 Val:D Dir:IN Visited: 0 Type:INT_WIRE] is an input line to the component
[Msg40] Corresponding output line : nand3 _w3
[Msg41] Checking nand3 _w1 to be justified or not
[Msg42] Checking nand3 _in2 to be justified or not
[Msg43] Justify nand3 _in2 inside Propagate. line.direction == IN The line : [Line:nand3 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
[Msg44] Justifying line : [Line:nand3 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 1
Here 148
[Msg45] 2) Line : [Line:input_in2 Val:1 Dir:OUT Visited: 1 Type:PI] already justified with value1
[Msg46] Equalizing fanin/fanout values line : [Line:nand3 _w3 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg47] Updating linelist with line : [Line:nand3 _w3 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg48] Updating the maps 
[Msg49] All i/p lines justified for nand3 _w3 to Propagate. The line : [Line:nand3 _w3 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg50] Current linelist status inside Propagate() after all input line justification        [nand4 _w3 X IN V=0] 
        [nand4 _w2 X IN V=0] 
        [nand4 _out1 X OUT V=0] 
        [nand3 _in2 X IN V=0] 
        [nand3 _w1 D IN V=0] 
        [nand3 _w3 D OUT V=0] 
        [nand2 _w1 X IN V=0] 
        [nand2 _in1 X IN V=0] 
        [nand2 _w2 X OUT V=0] 
        [nand1 _in2 X IN V=0] 
        [nand1 _in1 Dbar IN V=0] 
        [nand1 _w1 Dbar OUT V=0] 
        [input_in2 1 OUT V=1] 
        [input_in1 1 OUT V=1] 
        [output_out1 X IN V=0] 
[Msg51] error_val :D and iv : 1
[Msg52] Input line : [Line:nand4 _w3 Val:X Dir:IN Visited: 0 Type:INT_WIRE] is propagated with val Dbar (error_val^iv)
[Msg53] Propagating Dbar for the line : nand4 _w3
[Msg54] Updating linelist with line : [Line:nand4 _w3 Val:Dbar Dir:IN Visited: 0 Type:INT_WIRE]
[Msg55] Updating the maps 
[Msg56] Updated linelist at this stage. - About to start  Propagate()
        [nand4 _w3 Dbar IN V=0] 
        [nand4 _w2 X IN V=0] 
        [nand4 _out1 X OUT V=0] 
        [nand3 _in2 X IN V=0] 
        [nand3 _w1 D IN V=0] 
        [nand3 _w3 D OUT V=0] 
        [nand2 _w1 X IN V=0] 
        [nand2 _in1 X IN V=0] 
        [nand2 _w2 X OUT V=0] 
        [nand1 _in2 X IN V=0] 
        [nand1 _in1 Dbar IN V=0] 
        [nand1 _w1 Dbar OUT V=0] 
        [input_in2 1 OUT V=1] 
        [input_in1 1 OUT V=1] 
        [output_out1 X IN V=0] 
[Msg57][Line:nand4 _w3 Val:Dbar Dir:IN Visited: 0 Type:INT_WIRE] is an input line to the component
[Msg58] Corresponding output line : nand4 _out1
[Msg59] Checking nand4 _w2 to be justified or not
[Msg60] Justify nand4 _w2 inside Propagate. line.direction == IN The line : [Line:nand4 _w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
[Msg61] Justifying line : [Line:nand4 _w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 1
Here 149
[Msg62] Equalizing fanin/fanout values line : [Line:nand2 _w2 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg63] One of the input lines of line : [Line:nand2 _w2 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE] to be justified
[Msg64] Trying line : [Line:nand2 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] to justify
[Msg65] Only [Line:nand2 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] of line : nand2 _w2 to be justified
[Msg66] Saving [Line:nand2 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] for future backtracking.
[Msg67] Justifying line : [Line:nand2 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 0
Here 150
[Msg68] 1) Cannot justify line : [Line:input_in1 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg69] Trying line : [Line:nand2 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] to justify
[Msg70] Only [Line:nand2 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] of line : nand2 _w2 to be justified
[Msg71] Saving [Line:nand2 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] for future backtracking.
[Msg72] Justifying line : [Line:nand2 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 0
Here 151
[Msg73] Equalizing fanin/fanout values line : [Line:nand1 _w1 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg74] inval = 1] Justifying all input lines for the line : [Line:nand1 _w1 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg75] Following lines need to be justified. (Total 2 lines)
        [Line:nand1 _w1] -->  [Line:nand1 _in1] [Line:nand1 _in2]
[Msg76] Justifying line : [Line:nand1 _in1 Val:Dbar Dir:IN Visited: 0 Type:INT_WIRE] with value 1
Here 152
[Msg77] 2) Line : [Line:input_in1 Val:1 Dir:OUT Visited: 1 Type:PI] already justified with value1
[Msg78] Updating linelist with line : [Line:nand1 _w1 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg79] Updating the maps 
[Msg80] Justifying line : [Line:nand1 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 1
Here 153
[Msg81] 2) Line : [Line:input_in2 Val:1 Dir:OUT Visited: 1 Type:PI] already justified with value1
[Msg82] Updating linelist with line : [Line:nand1 _w1 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg83] Updating the maps 
[Msg84] Updating linelist with line : [Line:nand2 _w2 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg85] Updating the maps 
[Msg86] Checking nand4 _w3 to be justified or not
[Msg87] Equalizing fanin/fanout values line : [Line:nand4 _out1 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg88] Updating linelist with line : [Line:nand4 _out1 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg89] Updating the maps 
[Msg90] All i/p lines justified for nand4 _out1 to Propagate. The line : [Line:nand4 _out1 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg91] Current linelist status inside Propagate() after all input line justification        [nand4 _w3 Dbar IN V=0] 
        [nand4 _w2 X IN V=0] 
        [nand4 _out1 Dbar OUT V=0] 
        [nand3 _in2 X IN V=0] 
        [nand3 _w1 D IN V=0] 
        [nand3 _w3 D OUT V=0] 
        [nand2 _w1 X IN V=0] 
        [nand2 _in1 X IN V=0] 
        [nand2 _w2 1 OUT V=1] 
        [nand1 _in2 X IN V=0] 
        [nand1 _in1 Dbar IN V=0] 
        [nand1 _w1 0 OUT V=1] 
        [input_in2 1 OUT V=1] 
        [input_in1 1 OUT V=1] 
        [output_out1 X IN V=0] 
[Msg92] error_val :Dbar and iv : 1
[Msg93] Input line : [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO] is propagated with val D (error_val^iv)
[Msg94] Propagating D for the line : output_out1
[Msg95] Updating linelist with line : [Line:output_out1 Val:D Dir:IN Visited: 0 Type:PO]
[Msg96] Updating the maps 
[Msg97] Updated linelist at this stage. - About to start  Propagate()
        [nand4 _w3 Dbar IN V=0] 
        [nand4 _w2 X IN V=0] 
        [nand4 _out1 Dbar OUT V=0] 
        [nand3 _in2 X IN V=0] 
        [nand3 _w1 D IN V=0] 
        [nand3 _w3 D OUT V=0] 
        [nand2 _w1 X IN V=0] 
        [nand2 _in1 X IN V=0] 
        [nand2 _w2 1 OUT V=1] 
        [nand1 _in2 X IN V=0] 
        [nand1 _in1 Dbar IN V=0] 
        [nand1 _w1 0 OUT V=1] 
        [input_in2 1 OUT V=1] 
        [input_in1 1 OUT V=1] 
        [output_out1 D IN V=0] 
[Msg98] Concluding. Reached PO line : [Line:output_out1 Val:D Dir:IN Visited: 0 Type:PO]
[Msg99] Current linelist status after Propagate()
        [Line:nand4 _w3 Val:Dbar Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _out1 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand3 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w1 Val:D Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w3 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand2 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _w2 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:nand1 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _in1 Val:Dbar Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _w1 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:input_in2 Val:1 Dir:OUT Visited: 1 Type:PI]
        [Line:input_in1 Val:1 Dir:OUT Visited: 1 Type:PI]
        [Line:output_out1 Val:D Dir:IN Visited: 0 Type:PO]

[Msg100] Updating linelist with line : [Line:nand1 _in1 Val:Dbar Dir:IN Visited: 0 Type:INT_WIRE]
[Msg101] Updating the maps 
[Msg102] Current linelist status after pattern generation()
        [Line:nand4 _w3 Val:Dbar Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _out1 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand3 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w1 Val:D Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w3 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand2 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _w2 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:nand1 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _in1 Val:Dbar Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _w1 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:input_in2 Val:1 Dir:OUT Visited: 1 Type:PI]
        [Line:input_in1 Val:1 Dir:OUT Visited: 1 Type:PI]
        [Line:output_out1 Val:D Dir:IN Visited: 0 Type:PO]

[Msg] Printing PI patterns 
     input_in2 1
     input_in1 1
---------------------------------------------------------
---------------------------------------------------------
TG for line #12 SA-1. Fault #23
[Msg0] Initialzed all line values to X and isVisited = false
[Msg1] Updated line : nand1 _w1 from linelist to [Line:nand1 _w1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg2] Updating the maps 
[Msg] Printing PI patterns 
     input_in2 X
     input_in1 X
[Msg3] Current linelist status before Justify()
        [Line:nand4 _w3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _out1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand3 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w3 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand2 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _w2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand1 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _w1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:input_in2 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:input_in1 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO]

[Msg4] Generating test patterns for line : [Line:nand1 _w1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg5] Justifying line : [Line:nand1 _w1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE] with value 0
Here 154
[Msg6] Equalizing fanin/fanout values line : [Line:nand1 _w1 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg7] inval = 1] Justifying all input lines for the line : [Line:nand1 _w1 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg8] Following lines need to be justified. (Total 2 lines)
        [Line:nand1 _w1] -->  [Line:nand1 _in2] [Line:nand1 _in1]
[Msg9] Justifying line : [Line:nand1 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 1
Here 155
[Msg10] Equalizing fanin/fanout values line : [Line:input_in2 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg11] Updating linelist with line : [Line:input_in2 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg12] Updating the maps 
[Msg13] Concluding. Reached PI line : [Line:input_in2 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg14] Updating linelist with line : [Line:nand1 _w1 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg15] Updating the maps 
[Msg16] Justifying line : [Line:nand1 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 1
Here 156
[Msg17] Equalizing fanin/fanout values line : [Line:input_in1 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg18] Updating linelist with line : [Line:input_in1 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg19] Updating the maps 
[Msg20] Concluding. Reached PI line : [Line:input_in1 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg21] Updating linelist with line : [Line:nand1 _w1 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg22] Updating the maps 
[Msg23] All lines justified 
[Msg24] Updating linelist with line : [Line:nand1 _w1 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg25] Updating the maps 
[Msg26] Current linelist status before Propagate() and after Justify()
        [Line:nand4 _w3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _out1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand3 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w3 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand2 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _w2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand1 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _w1 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:input_in2 Val:1 Dir:OUT Visited: 1 Type:PI]
        [Line:input_in1 Val:1 Dir:OUT Visited: 1 Type:PI]
        [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO]

[Msg27] Propagating D for the line : nand1 _w1
[Msg28] Updating linelist with line : [Line:nand1 _w1 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg29] Updating the maps 
[Msg30] Updated linelist at this stage. - About to start  Propagate()
        [nand4 _w3 X IN V=0] 
        [nand4 _w2 X IN V=0] 
        [nand4 _out1 X OUT V=0] 
        [nand3 _in2 X IN V=0] 
        [nand3 _w1 X IN V=0] 
        [nand3 _w3 X OUT V=0] 
        [nand2 _w1 X IN V=0] 
        [nand2 _in1 X IN V=0] 
        [nand2 _w2 X OUT V=0] 
        [nand1 _in2 X IN V=0] 
        [nand1 _in1 X IN V=0] 
        [nand1 _w1 D OUT V=0] 
        [input_in2 1 OUT V=1] 
        [input_in1 1 OUT V=1] 
        [output_out1 X IN V=0] 
[Msg31] Equalizing fanin/fanout values line : [Line:nand1 _w1 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg32] Updating linelist with line : [Line:nand1 _w1 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg33] Updating the maps 
[Msg34 Input line  [Line:nand3 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] is propagated
[Msg35] Propagating Dbar for the line : nand3 _w1
[Msg36] Updating linelist with line : [Line:nand3 _w1 Val:Dbar Dir:IN Visited: 0 Type:INT_WIRE]
[Msg37] Updating the maps 
[Msg38] Updated linelist at this stage. - About to start  Propagate()
        [nand4 _w3 X IN V=0] 
        [nand4 _w2 X IN V=0] 
        [nand4 _out1 X OUT V=0] 
        [nand3 _in2 X IN V=0] 
        [nand3 _w1 Dbar IN V=0] 
        [nand3 _w3 X OUT V=0] 
        [nand2 _w1 X IN V=0] 
        [nand2 _in1 X IN V=0] 
        [nand2 _w2 X OUT V=0] 
        [nand1 _in2 X IN V=0] 
        [nand1 _in1 X IN V=0] 
        [nand1 _w1 D OUT V=0] 
        [input_in2 1 OUT V=1] 
        [input_in1 1 OUT V=1] 
        [output_out1 X IN V=0] 
[Msg39][Line:nand3 _w1 Val:Dbar Dir:IN Visited: 0 Type:INT_WIRE] is an input line to the component
[Msg40] Corresponding output line : nand3 _w3
[Msg41] Checking nand3 _in2 to be justified or not
[Msg42] Justify nand3 _in2 inside Propagate. line.direction == IN The line : [Line:nand3 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
[Msg43] Justifying line : [Line:nand3 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 1
Here 157
[Msg44] 2) Line : [Line:input_in2 Val:1 Dir:OUT Visited: 1 Type:PI] already justified with value1
[Msg45] Checking nand3 _w1 to be justified or not
[Msg46] Equalizing fanin/fanout values line : [Line:nand3 _w3 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg47] Updating linelist with line : [Line:nand3 _w3 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg48] Updating the maps 
[Msg49] All i/p lines justified for nand3 _w3 to Propagate. The line : [Line:nand3 _w3 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg50] Current linelist status inside Propagate() after all input line justification        [nand4 _w3 X IN V=0] 
        [nand4 _w2 X IN V=0] 
        [nand4 _out1 X OUT V=0] 
        [nand3 _in2 X IN V=0] 
        [nand3 _w1 Dbar IN V=0] 
        [nand3 _w3 Dbar OUT V=0] 
        [nand2 _w1 X IN V=0] 
        [nand2 _in1 X IN V=0] 
        [nand2 _w2 X OUT V=0] 
        [nand1 _in2 X IN V=0] 
        [nand1 _in1 X IN V=0] 
        [nand1 _w1 D OUT V=0] 
        [input_in2 1 OUT V=1] 
        [input_in1 1 OUT V=1] 
        [output_out1 X IN V=0] 
[Msg51] error_val :Dbar and iv : 1
[Msg52] Input line : [Line:nand4 _w3 Val:X Dir:IN Visited: 0 Type:INT_WIRE] is propagated with val D (error_val^iv)
[Msg53] Propagating D for the line : nand4 _w3
[Msg54] Updating linelist with line : [Line:nand4 _w3 Val:D Dir:IN Visited: 0 Type:INT_WIRE]
[Msg55] Updating the maps 
[Msg56] Updated linelist at this stage. - About to start  Propagate()
        [nand4 _w3 D IN V=0] 
        [nand4 _w2 X IN V=0] 
        [nand4 _out1 X OUT V=0] 
        [nand3 _in2 X IN V=0] 
        [nand3 _w1 Dbar IN V=0] 
        [nand3 _w3 Dbar OUT V=0] 
        [nand2 _w1 X IN V=0] 
        [nand2 _in1 X IN V=0] 
        [nand2 _w2 X OUT V=0] 
        [nand1 _in2 X IN V=0] 
        [nand1 _in1 X IN V=0] 
        [nand1 _w1 D OUT V=0] 
        [input_in2 1 OUT V=1] 
        [input_in1 1 OUT V=1] 
        [output_out1 X IN V=0] 
[Msg57][Line:nand4 _w3 Val:D Dir:IN Visited: 0 Type:INT_WIRE] is an input line to the component
[Msg58] Corresponding output line : nand4 _out1
[Msg59] Checking nand4 _w3 to be justified or not
[Msg60] Checking nand4 _w2 to be justified or not
[Msg61] Justify nand4 _w2 inside Propagate. line.direction == IN The line : [Line:nand4 _w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
[Msg62] Justifying line : [Line:nand4 _w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 1
Here 158
[Msg63] Equalizing fanin/fanout values line : [Line:nand2 _w2 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg64] One of the input lines of line : [Line:nand2 _w2 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE] to be justified
[Msg65] Trying line : [Line:nand2 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] to justify
[Msg66] Only [Line:nand2 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] of line : nand2 _w2 to be justified
[Msg67] Saving [Line:nand2 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] for future backtracking.
[Msg68] Justifying line : [Line:nand2 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 0
Here 159
[Msg69] Equalizing fanin/fanout values line : [Line:nand1 _w1 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg70] inval = 1] Justifying all input lines for the line : [Line:nand1 _w1 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg71] Following lines need to be justified. (Total 2 lines)
        [Line:nand1 _w1] -->  [Line:nand1 _in2] [Line:nand1 _in1]
[Msg72] Justifying line : [Line:nand1 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 1
Here 160
[Msg73] 2) Line : [Line:input_in2 Val:1 Dir:OUT Visited: 1 Type:PI] already justified with value1
[Msg74] Updating linelist with line : [Line:nand1 _w1 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg75] Updating the maps 
[Msg76] Justifying line : [Line:nand1 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 1
Here 161
[Msg77] 2) Line : [Line:input_in1 Val:1 Dir:OUT Visited: 1 Type:PI] already justified with value1
[Msg78] Updating linelist with line : [Line:nand1 _w1 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg79] Updating the maps 
[Msg80] Updating linelist with line : [Line:nand2 _w2 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg81] Updating the maps 
[Msg82] Equalizing fanin/fanout values line : [Line:nand4 _out1 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg83] Updating linelist with line : [Line:nand4 _out1 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg84] Updating the maps 
[Msg85] All i/p lines justified for nand4 _out1 to Propagate. The line : [Line:nand4 _out1 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg86] Current linelist status inside Propagate() after all input line justification        [nand4 _w3 D IN V=0] 
        [nand4 _w2 X IN V=0] 
        [nand4 _out1 D OUT V=0] 
        [nand3 _in2 X IN V=0] 
        [nand3 _w1 Dbar IN V=0] 
        [nand3 _w3 Dbar OUT V=0] 
        [nand2 _w1 X IN V=0] 
        [nand2 _in1 X IN V=0] 
        [nand2 _w2 1 OUT V=1] 
        [nand1 _in2 X IN V=0] 
        [nand1 _in1 X IN V=0] 
        [nand1 _w1 0 OUT V=1] 
        [input_in2 1 OUT V=1] 
        [input_in1 1 OUT V=1] 
        [output_out1 X IN V=0] 
[Msg87] error_val :D and iv : 1
[Msg88] Input line : [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO] is propagated with val Dbar (error_val^iv)
[Msg89] Propagating Dbar for the line : output_out1
[Msg90] Updating linelist with line : [Line:output_out1 Val:Dbar Dir:IN Visited: 0 Type:PO]
[Msg91] Updating the maps 
[Msg92] Updated linelist at this stage. - About to start  Propagate()
        [nand4 _w3 D IN V=0] 
        [nand4 _w2 X IN V=0] 
        [nand4 _out1 D OUT V=0] 
        [nand3 _in2 X IN V=0] 
        [nand3 _w1 Dbar IN V=0] 
        [nand3 _w3 Dbar OUT V=0] 
        [nand2 _w1 X IN V=0] 
        [nand2 _in1 X IN V=0] 
        [nand2 _w2 1 OUT V=1] 
        [nand1 _in2 X IN V=0] 
        [nand1 _in1 X IN V=0] 
        [nand1 _w1 0 OUT V=1] 
        [input_in2 1 OUT V=1] 
        [input_in1 1 OUT V=1] 
        [output_out1 Dbar IN V=0] 
[Msg93] Concluding. Reached PO line : [Line:output_out1 Val:Dbar Dir:IN Visited: 0 Type:PO]
[Msg94] Current linelist status after Propagate()
        [Line:nand4 _w3 Val:D Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _out1 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand3 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w1 Val:Dbar Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w3 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand2 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _w2 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:nand1 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _w1 Val:0 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:input_in2 Val:1 Dir:OUT Visited: 1 Type:PI]
        [Line:input_in1 Val:1 Dir:OUT Visited: 1 Type:PI]
        [Line:output_out1 Val:Dbar Dir:IN Visited: 0 Type:PO]

[Msg95] Updating linelist with line : [Line:nand1 _w1 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg96] Updating the maps 
[Msg97] Current linelist status after pattern generation()
        [Line:nand4 _w3 Val:D Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _out1 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand3 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w1 Val:Dbar Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w3 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand2 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _w2 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:nand1 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _w1 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:input_in2 Val:1 Dir:OUT Visited: 1 Type:PI]
        [Line:input_in1 Val:1 Dir:OUT Visited: 1 Type:PI]
        [Line:output_out1 Val:Dbar Dir:IN Visited: 0 Type:PO]

[Msg] Printing PI patterns 
     input_in2 1
     input_in1 1
Here !!!
---------------------------------------------------------
---------------------------------------------------------
TG for line #12 SA-0. Fault #24
[Msg0] Initialzed all line values to X and isVisited = false
[Msg1] Updated line : nand1 _w1 from linelist to [Line:nand1 _w1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg2] Updating the maps 
[Msg] Printing PI patterns 
     input_in2 X
     input_in1 X
[Msg3] Current linelist status before Justify()
        [Line:nand4 _w3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _out1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand3 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w3 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand2 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _w2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand1 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _w1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:input_in2 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:input_in1 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO]

[Msg4] Generating test patterns for line : [Line:nand1 _w1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg5] Justifying line : [Line:nand1 _w1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE] with value 1
Here 162
[Msg6] Equalizing fanin/fanout values line : [Line:nand1 _w1 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg7] One of the input lines of line : [Line:nand1 _w1 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE] to be justified
[Msg8] Trying line : [Line:nand1 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] to justify
[Msg9] Only [Line:nand1 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] of line : nand1 _w1 to be justified
[Msg10] Saving [Line:nand1 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] for future backtracking.
[Msg11] Justifying line : [Line:nand1 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 0
Here 163
[Msg12] Equalizing fanin/fanout values line : [Line:input_in1 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg13] Updating linelist with line : [Line:input_in1 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg14] Updating the maps 
[Msg15] Concluding. Reached PI line : [Line:input_in1 Val:0 Dir:OUT Visited: 1 Type:PI]
[Msg16] Updating linelist with line : [Line:nand1 _w1 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg17] Updating the maps 
[Msg18] All lines justified 
[Msg19] Updating linelist with line : [Line:nand1 _w1 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg20] Updating the maps 
[Msg21] Current linelist status before Propagate() and after Justify()
        [Line:nand4 _w3 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _out1 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand3 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w3 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand2 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _w2 Val:X Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand1 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _w1 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:input_in2 Val:X Dir:OUT Visited: 0 Type:PI]
        [Line:input_in1 Val:0 Dir:OUT Visited: 1 Type:PI]
        [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO]

[Msg22] Propagating Dbar for the line : nand1 _w1
[Msg23] Updating linelist with line : [Line:nand1 _w1 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg24] Updating the maps 
[Msg25] Updated linelist at this stage. - About to start  Propagate()
        [nand4 _w3 X IN V=0] 
        [nand4 _w2 X IN V=0] 
        [nand4 _out1 X OUT V=0] 
        [nand3 _in2 X IN V=0] 
        [nand3 _w1 X IN V=0] 
        [nand3 _w3 X OUT V=0] 
        [nand2 _w1 X IN V=0] 
        [nand2 _in1 X IN V=0] 
        [nand2 _w2 X OUT V=0] 
        [nand1 _in2 X IN V=0] 
        [nand1 _in1 X IN V=0] 
        [nand1 _w1 Dbar OUT V=0] 
        [input_in2 X OUT V=0] 
        [input_in1 0 OUT V=1] 
        [output_out1 X IN V=0] 
[Msg26] Equalizing fanin/fanout values line : [Line:nand1 _w1 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg27] Updating linelist with line : [Line:nand1 _w1 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg28] Updating the maps 
[Msg29 Input line  [Line:nand3 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] is propagated
[Msg30] Propagating D for the line : nand3 _w1
[Msg31] Updating linelist with line : [Line:nand3 _w1 Val:D Dir:IN Visited: 0 Type:INT_WIRE]
[Msg32] Updating the maps 
[Msg33] Updated linelist at this stage. - About to start  Propagate()
        [nand4 _w3 X IN V=0] 
        [nand4 _w2 X IN V=0] 
        [nand4 _out1 X OUT V=0] 
        [nand3 _in2 X IN V=0] 
        [nand3 _w1 D IN V=0] 
        [nand3 _w3 X OUT V=0] 
        [nand2 _w1 X IN V=0] 
        [nand2 _in1 X IN V=0] 
        [nand2 _w2 X OUT V=0] 
        [nand1 _in2 X IN V=0] 
        [nand1 _in1 X IN V=0] 
        [nand1 _w1 Dbar OUT V=0] 
        [input_in2 X OUT V=0] 
        [input_in1 0 OUT V=1] 
        [output_out1 X IN V=0] 
[Msg34][Line:nand3 _w1 Val:D Dir:IN Visited: 0 Type:INT_WIRE] is an input line to the component
[Msg35] Corresponding output line : nand3 _w3
[Msg36] Checking nand3 _w1 to be justified or not
[Msg37] Checking nand3 _in2 to be justified or not
[Msg38] Justify nand3 _in2 inside Propagate. line.direction == IN The line : [Line:nand3 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
[Msg39] Justifying line : [Line:nand3 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 1
Here 164
[Msg40] Equalizing fanin/fanout values line : [Line:input_in2 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg41] Updating linelist with line : [Line:input_in2 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg42] Updating the maps 
[Msg43] Concluding. Reached PI line : [Line:input_in2 Val:1 Dir:OUT Visited: 1 Type:PI]
[Msg44] Equalizing fanin/fanout values line : [Line:nand3 _w3 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg45] Updating linelist with line : [Line:nand3 _w3 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg46] Updating the maps 
[Msg47] All i/p lines justified for nand3 _w3 to Propagate. The line : [Line:nand3 _w3 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg48] Current linelist status inside Propagate() after all input line justification        [nand4 _w3 X IN V=0] 
        [nand4 _w2 X IN V=0] 
        [nand4 _out1 X OUT V=0] 
        [nand3 _in2 X IN V=0] 
        [nand3 _w1 D IN V=0] 
        [nand3 _w3 D OUT V=0] 
        [nand2 _w1 X IN V=0] 
        [nand2 _in1 X IN V=0] 
        [nand2 _w2 X OUT V=0] 
        [nand1 _in2 X IN V=0] 
        [nand1 _in1 X IN V=0] 
        [nand1 _w1 Dbar OUT V=0] 
        [input_in2 1 OUT V=1] 
        [input_in1 0 OUT V=1] 
        [output_out1 X IN V=0] 
[Msg49] error_val :D and iv : 1
[Msg50] Input line : [Line:nand4 _w3 Val:X Dir:IN Visited: 0 Type:INT_WIRE] is propagated with val Dbar (error_val^iv)
[Msg51] Propagating Dbar for the line : nand4 _w3
[Msg52] Updating linelist with line : [Line:nand4 _w3 Val:Dbar Dir:IN Visited: 0 Type:INT_WIRE]
[Msg53] Updating the maps 
[Msg54] Updated linelist at this stage. - About to start  Propagate()
        [nand4 _w3 Dbar IN V=0] 
        [nand4 _w2 X IN V=0] 
        [nand4 _out1 X OUT V=0] 
        [nand3 _in2 X IN V=0] 
        [nand3 _w1 D IN V=0] 
        [nand3 _w3 D OUT V=0] 
        [nand2 _w1 X IN V=0] 
        [nand2 _in1 X IN V=0] 
        [nand2 _w2 X OUT V=0] 
        [nand1 _in2 X IN V=0] 
        [nand1 _in1 X IN V=0] 
        [nand1 _w1 Dbar OUT V=0] 
        [input_in2 1 OUT V=1] 
        [input_in1 0 OUT V=1] 
        [output_out1 X IN V=0] 
[Msg55][Line:nand4 _w3 Val:Dbar Dir:IN Visited: 0 Type:INT_WIRE] is an input line to the component
[Msg56] Corresponding output line : nand4 _out1
[Msg57] Checking nand4 _w2 to be justified or not
[Msg58] Justify nand4 _w2 inside Propagate. line.direction == IN The line : [Line:nand4 _w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
[Msg59] Justifying line : [Line:nand4 _w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 1
Here 165
[Msg60] Equalizing fanin/fanout values line : [Line:nand2 _w2 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg61] One of the input lines of line : [Line:nand2 _w2 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE] to be justified
[Msg62] Trying line : [Line:nand2 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] to justify
[Msg63] Only [Line:nand2 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] of line : nand2 _w2 to be justified
[Msg64] Saving [Line:nand2 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] for future backtracking.
[Msg65] Justifying line : [Line:nand2 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE] with value 0
Here 166
[Msg66] 2) Line : [Line:input_in1 Val:0 Dir:OUT Visited: 1 Type:PI] already justified with value0
[Msg67] Updating linelist with line : [Line:nand2 _w2 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
[Msg68] Updating the maps 
[Msg69] Checking nand4 _w3 to be justified or not
[Msg70] Equalizing fanin/fanout values line : [Line:nand4 _out1 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg71] Updating linelist with line : [Line:nand4 _out1 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg72] Updating the maps 
[Msg73] All i/p lines justified for nand4 _out1 to Propagate. The line : [Line:nand4 _out1 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg74] Current linelist status inside Propagate() after all input line justification        [nand4 _w3 Dbar IN V=0] 
        [nand4 _w2 X IN V=0] 
        [nand4 _out1 Dbar OUT V=0] 
        [nand3 _in2 X IN V=0] 
        [nand3 _w1 D IN V=0] 
        [nand3 _w3 D OUT V=0] 
        [nand2 _w1 X IN V=0] 
        [nand2 _in1 X IN V=0] 
        [nand2 _w2 1 OUT V=1] 
        [nand1 _in2 X IN V=0] 
        [nand1 _in1 X IN V=0] 
        [nand1 _w1 Dbar OUT V=0] 
        [input_in2 1 OUT V=1] 
        [input_in1 0 OUT V=1] 
        [output_out1 X IN V=0] 
[Msg75] error_val :Dbar and iv : 1
[Msg76] Input line : [Line:output_out1 Val:X Dir:IN Visited: 0 Type:PO] is propagated with val D (error_val^iv)
[Msg77] Propagating D for the line : output_out1
[Msg78] Updating linelist with line : [Line:output_out1 Val:D Dir:IN Visited: 0 Type:PO]
[Msg79] Updating the maps 
[Msg80] Updated linelist at this stage. - About to start  Propagate()
        [nand4 _w3 Dbar IN V=0] 
        [nand4 _w2 X IN V=0] 
        [nand4 _out1 Dbar OUT V=0] 
        [nand3 _in2 X IN V=0] 
        [nand3 _w1 D IN V=0] 
        [nand3 _w3 D OUT V=0] 
        [nand2 _w1 X IN V=0] 
        [nand2 _in1 X IN V=0] 
        [nand2 _w2 1 OUT V=1] 
        [nand1 _in2 X IN V=0] 
        [nand1 _in1 X IN V=0] 
        [nand1 _w1 Dbar OUT V=0] 
        [input_in2 1 OUT V=1] 
        [input_in1 0 OUT V=1] 
        [output_out1 D IN V=0] 
[Msg81] Concluding. Reached PO line : [Line:output_out1 Val:D Dir:IN Visited: 0 Type:PO]
[Msg82] Current linelist status after Propagate()
        [Line:nand4 _w3 Val:Dbar Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _out1 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand3 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w1 Val:D Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w3 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand2 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _w2 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:nand1 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _w1 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:input_in2 Val:1 Dir:OUT Visited: 1 Type:PI]
        [Line:input_in1 Val:0 Dir:OUT Visited: 1 Type:PI]
        [Line:output_out1 Val:D Dir:IN Visited: 0 Type:PO]

[Msg83] Updating linelist with line : [Line:nand1 _w1 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
[Msg84] Updating the maps 
[Msg85] Current linelist status after pattern generation()
        [Line:nand4 _w3 Val:Dbar Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _w2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand4 _out1 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand3 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w1 Val:D Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand3 _w3 Val:D Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:nand2 _w1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand2 _w2 Val:1 Dir:OUT Visited: 1 Type:INT_WIRE]
        [Line:nand1 _in2 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _in1 Val:X Dir:IN Visited: 0 Type:INT_WIRE]
        [Line:nand1 _w1 Val:Dbar Dir:OUT Visited: 0 Type:INT_WIRE]
        [Line:input_in2 Val:1 Dir:OUT Visited: 1 Type:PI]
        [Line:input_in1 Val:0 Dir:OUT Visited: 1 Type:PI]
        [Line:output_out1 Val:D Dir:IN Visited: 0 Type:PO]

[Msg] Printing PI patterns 
     input_in2 1
     input_in1 0
---------------------------------------------------------
---------------------------------------------------------
---------------------------------------------------------
---------------------------------------------------------
---------------------------------------------------------
---------------------------------------------------------
#########################################################
